{"version":3,"sources":["views/enterprises/AddEnterprise.js","views/component/Button.js","views/component/cell/TextCell.js","utils/firebase/configFirebase.js","utils/firebase/uploadFirebase.js","views/component/cell/TextareaCell.js"],"names":["AddEnterprise","history","useHistory","useState","korName","setKorName","engName","setEngName","categoryId","setCategoryId","phoneNumber","setPhoneNumber","primeLocation","setPrimeLocation","location","setLocation","tag","setTag","description","setDescription","thumbnailURL","setThumbnailURL","setFile","parameters","a","TempAdminApi","request","method","HttpMethod","POST","url","EndPoint","POST_ENTERPRISE","data","res","isSuccess","alert","message","go","console","log","useEffect","GET","GET_STATUS","isEmpty","result","status","push","getEnterprise","then","onChangeCategory","useCallback","e","target","document","getElementById","options","selectedIndex","value","delimiters","handleDelete","i","filter","onetag","index","handleAddition","oneTag","length","onFileChange","event","previewImage","theFile","files","reader","FileReader","onload","setAttribute","readAsDataURL","handleFirebaseUpload","name","firebaseURL","class","id","src","alt","width","height","className","label","placeholder","onChange","row","md","align","style","marginLeft","tags","suggestions","inline","type","accept","onAdminClick","text","substring","trim","isValidPhoneNumber","window","confirm","postEnterprise","category","BackButton","props","onClick","color","shape","size","CancleButton","AdminButton","RegistButton","CloseButton","PostButton","RoomPostButton","PatchButton","DeleteButton","BottomButtons","onCancleClick","onRegistClick","onBackClick","onPostClick","onPatchClick","onDeleteClick","backLabel","postLabel","adminLabel","patchLabel","deleteLabel","cancleLabel","registLabel","RoomPostLabel","onCloseClick","onRoomPostClick","TextCell","htmlFor","autoComplete","disabled","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firebase","initializeApp","database","storage","path","filename","file","Promise","resolve","reject","ref","put","on","error","child","getDownloadURL","TextareaCell","rows"],"mappings":"6UAkSeA,UAtRO,WAClB,IAAMC,EAAUC,cADQ,EAEMC,mBAAS,IAFf,mBAEjBC,EAFiB,KAERC,EAFQ,OAGMF,mBAAS,IAHf,mBAGjBG,EAHiB,KAGRC,EAHQ,OAIYJ,mBAAS,KAJrB,mBAIjBK,EAJiB,KAILC,EAJK,OAKcN,mBAAS,IALvB,mBAKjBO,EALiB,KAKJC,EALI,OAMkBR,mBAAS,IAN3B,mBAMjBS,EANiB,KAMFC,EANE,OAOQV,mBAAS,IAPjB,mBAOjBW,EAPiB,KAOPC,EAPO,OAQFZ,mBAAS,IARP,mBAQjBa,EARiB,KAQZC,EARY,OAScd,mBAAS,IATvB,mBASjBe,EATiB,KASJC,EATI,OAUgBhB,mBAAS,IAVzB,mBAUjBiB,EAViB,KAUHC,EAVG,OAWAlB,mBAAS,MAXT,mBAWXmB,IAXW,yDAqCxB,WAA8BC,GAA9B,iBAAAC,EAAA,+EAEoCC,IAAaC,QAAQ,CAC7CC,OAAQC,IAAWC,KACnBC,IAAKC,IAASC,gBACdC,KAAMV,IALlB,2BAEsBW,EAFtB,EAEgBD,YAFhB,IAQaC,OARb,EAQaA,EAAKC,UARlB,uBASYC,MAAMF,EAAIG,SATtB,0BAaQD,MAAM,+EACNnC,EAAQqC,GAAG,GAdnB,kDAgBQC,QAAQC,IAAR,MACAJ,MAAM,6HAjBd,2DArCwB,sBAcxBK,qBAAU,YACa,uCAAG,8BAAAjB,EAAA,+EAEcC,IAAaC,QAAQ,CAC7CC,OAAQC,IAAWc,IACnBZ,IAAKC,IAASY,aAJJ,oBAOV,QALUT,EAFA,EAEND,YAKJ,IAACC,OAAD,EAACA,EAAKC,aAAaS,YAAO,OAACV,QAAD,IAACA,OAAD,EAACA,EAAKW,SAAgC,GAArBX,EAAIW,OAAOC,OAP5C,uBAQVV,MAAM,mGACNnC,EAAQ8C,KAAK,UATH,4EAadR,QAAQC,IAAR,MACAJ,MAAM,6HACNnC,EAAQ8C,KAAK,UAfC,0DAAH,qDAmBnBC,GAAgBC,SACjB,IAoFH,IAAMC,GAAmBC,uBAAY,SAACC,GAClC,IAAIC,EAASC,SAASC,eAAe,cACrC9C,EAAc4C,EAAOG,QAAQH,EAAOI,eAAeC,SACpD,IAOGC,GAAa,CAJR,IACA,IAKLC,GAAeT,uBACjB,SAACU,GACG5C,EAAOD,EAAI8C,QAAO,SAACC,EAAQC,GAAT,OAAmBA,IAAUH,QAEnD,CAAC7C,IAGCiD,GAAiBd,uBACnB,SAACe,GACqB,GAAdlD,EAAImD,OACJ/B,MAAM,qGAENnB,EAAO,GAAD,mBAAKD,GAAL,CAAUkD,OAOxB,CAAClD,IAGCoD,GAAejB,sBAAW,uCAAC,WAAOkB,GAAP,qBAAA7C,EAAA,6DACvB8C,EAAehB,SAASC,eAAe,gBAIvCgB,EAAUF,EAAMhB,OAAOmB,MAAM,GAC/BC,EAAS,IAAIC,WACjBpD,GAAQ+C,EAAMhB,OAAOmB,MAAM,IAC3BC,EAAOE,OAAS,SAACvB,GACbkB,EAAaM,aAAa,MAAOxB,EAAEC,OAAOR,SAE9C4B,EAAOI,cAAcN,GAXQ,SAYLO,YACpB,aACAP,EAAQQ,KACRV,EAAMhB,OAAOmB,MAAM,IAfM,OAYzBQ,EAZyB,OAiB7B3D,EAAgB2D,GAjBa,4CAAD,sDAkB7B,IAEH,OACI,kBAAC,IAAD,KACI,kBAAC,IAAD,KACI,kBAAC,IAAD,KACI,kBAAC,IAAD,KACI,2BACI,yBAAKC,MAAM,eACP,yBACIC,GAAG,eACHC,IAAK/D,EACLgE,IAAI,GACJH,MAAM,gBACNI,MAAM,QACNC,OAAO,YAInB,yBAAKC,UAAU,cACX,kBAAC,IAAD,CACIC,MAAM,4BACNC,YAAY,uEACZ/B,MAAOtD,EACPsF,SAAU,SAACtC,GAAD,OAAO/C,EAAW+C,EAAEC,OAAOK,UAEzC,kBAAC,IAAD,CACI8B,MAAM,4BACNC,YAAY,uEACZ/B,MAAOpD,EACPoF,SAAU,SAACtC,GAAD,OAAO7C,EAAW6C,EAAEC,OAAOK,UAEzC,kBAAC,IAAD,CAAYiC,KAAG,GACX,kBAAC,IAAD,CAAMC,GAAG,IAAIC,MAAM,SACf,2BAAOd,KAAK,YAAZ,6BAEJ,yBAAKe,MAAO,CAAEC,WAAY,SACtB,4BACIb,GAAG,aACHxB,MAAOlD,EACPkF,SAAUxC,GACV4C,MAAO,CAAET,MAAO,QAASC,OAAQ,SAEjC,4BAAQ5B,MAAM,KAAd,sBACA,4BAAQA,MAAM,KAAd,kCACA,4BAAQA,MAAM,KAAd,4BACA,4BAAQA,MAAM,KAAd,qCAIZ,kBAAC,IAAD,CACI8B,MAAM,4BACNC,YAAY,uEACZ/B,MAAO9C,EACP8E,SAAU,SAACtC,GAAD,OAAOvC,EAAiBuC,EAAEC,OAAOK,UAE/C,kBAAC,IAAD,CACI8B,MAAM,eACNC,YAAY,0DACZ/B,MAAO5C,EACP4E,SAAU,SAACtC,GAAD,OAAOrC,EAAYqC,EAAEC,OAAOK,UAE1C,kBAAC,IAAD,CAAYiC,KAAG,GACX,kBAAC,IAAD,CAAMC,GAAG,IAAIC,MAAM,SACf,2BAAOd,KAAK,OAAZ,iBAEJ,yBAAKQ,UAAU,MAAMO,MAAO,CAAEC,WAAY,SACtC,kBAAC,cAAD,CACIC,KAAMhF,EACNiF,YAAajF,EACbkF,QAAM,EACNtC,aAAcA,GACdK,eAAgBA,GAChBN,WAAYA,GACZ8B,YAAY,sEAIxB,kBAAC,IAAD,CACID,MAAM,eACNC,YAAY,0DACZ/B,MAAOxC,EACPwE,SAAU,SAACtC,GAAD,OAAOjC,EAAeiC,EAAEC,OAAOK,UAE7C,kBAAC,IAAD,CACI8B,MAAM,2BACNC,YAAY,sEACZ/B,MAAOhD,EACPgF,SAAU,SAACtC,GAAD,OAAOzC,EAAeyC,EAAEC,OAAOK,UAE7C,kBAAC,IAAD,CAAYiC,KAAG,GACX,kBAAC,IAAD,CAAMC,GAAG,IAAIC,MAAM,SACf,2BAAOd,KAAK,gBAAZ,uBAEJ,yBAAKe,MAAO,CAAEC,WAAY,SACtB,2BAAOI,KAAK,OAAOC,OAAO,UAAUV,SAAUtB,UAMlE,kBAAC,IAAD,CAAeiC,aArN3B,WAEI,IADA,IAAIL,EAAO,GACFnC,EAAI,EAAGA,EAAI7C,EAAImD,OAAQN,IAC5BmC,GAAQhF,EAAI6C,GAAGyC,KACfN,GAAQ,IAEZA,EAAOA,EAAKO,UAAU,EAAGP,EAAK7B,OAAS,GACnCvB,YAAQxC,EAAQoG,QAChBpE,MAAM,yEAGNQ,YAAQtC,EAAQkG,QAChBpE,MAAM,yEAGNQ,YAAQpC,EAAWgG,QACnBpE,MAAM,wEAGNQ,YAAQhC,EAAc4F,QACtBpE,MAAM,yEAGNQ,YAAQ9B,EAAS0F,QACjBpE,MAAM,4DAGNQ,YAAQoD,EAAKQ,QACbpE,MAAM,4DAGNQ,YAAQ1B,EAAYsF,QACpBpE,MAAM,4DAGLQ,YAAQlC,EAAY8F,SAAYC,YAAmB/F,EAAY8F,QAIhE5D,YAAQxB,EAAaoF,QACrBpE,MAAM,4DAINsE,OAAOC,QAAQ,sDAvGC,4CAmHhBC,CAXmB,CACfxG,QAASA,EAAQoG,OACjBlG,QAASA,EAAQkG,OACjBK,SAAUrG,EAAWgG,OACrB5F,cAAeA,EAAc4F,OAC7B1F,SAAUA,EAAS0F,OACnBxF,IAAKgF,EAAKQ,OACVtF,YAAaA,EAAYsF,OACzB9F,YAAaA,EAAY8F,OACzBpF,aAAcA,EAAaoF,SAEJvD,OApB3Bb,MAAM,4F,iCC3GlB,6BAIM0E,EAAa,SAACC,GAAW,IACnBvB,EAAmBuB,EAAnBvB,MAAOwB,EAAYD,EAAZC,QAEf,OACI,kBAAC,IAAD,CAASC,MAAM,UAAUC,MAAM,SAASC,KAAK,IAAIH,QAASA,GACrDxB,GAAS,6BAMhB4B,EAAe,SAACL,GAAW,IACrBvB,EAAmBuB,EAAnBvB,MAAOwB,EAAYD,EAAZC,QAEf,OACI,kBAAC,IAAD,CAASC,MAAM,SAASC,MAAM,SAASC,KAAK,IAAIH,QAASA,GACpDxB,GAAS,8BAMhB6B,EAAc,SAACN,GAAW,IACpBvB,EAAmBuB,EAAnBvB,MAAOwB,EAAYD,EAAZC,QAEf,OACI,kBAAC,IAAD,CAASC,MAAM,UAAUC,MAAM,SAASC,KAAK,IAAIH,QAASA,GACrDxB,GAAS,6BAMhB8B,EAAe,SAACP,GAAW,IACrBvB,EAAmBuB,EAAnBvB,MAAOwB,EAAYD,EAAZC,QAEf,OACI,kBAAC,IAAD,CAASC,MAAM,UAAUC,MAAM,SAASC,KAAK,IAAIH,QAASA,GACrDxB,GAAS,8BAMhB+B,EAAc,SAACR,GAAW,IACpBvB,EAAmBuB,EAAnBvB,MAAOwB,EAAYD,EAAZC,QAEf,OACI,kBAAC,IAAD,CAASC,MAAM,UAAUC,MAAM,SAASC,KAAK,IAAIH,QAASA,GACrDxB,GAAS,iBAMhBgC,EAAa,SAACT,GAAW,IACnBvB,EAAmBuB,EAAnBvB,MAAOwB,EAAYD,EAAZC,QAEf,OACI,kBAAC,IAAD,CAASC,MAAM,UAAUC,MAAM,SAASC,KAAK,IAAIH,QAASA,GACrDxB,GAAS,sDAMhBiC,EAAiB,SAACV,GAAW,IACvBvB,EAAmBuB,EAAnBvB,MAAOwB,EAAYD,EAAZC,QAEf,OACI,kBAAC,IAAD,CAASC,MAAM,UAAUC,MAAM,SAASC,KAAK,IAAIH,QAASA,GACrDxB,GAAS,6BAMhBkC,EAAc,SAACX,GAAW,IACpBvB,EAAmBuB,EAAnBvB,MAAOwB,EAAYD,EAAZC,QAEf,OACI,kBAAC,IAAD,CAASC,MAAM,UAAUC,MAAM,SAASC,KAAK,IAAIH,QAASA,GACrDxB,GAAS,6BAMhBmC,EAAe,SAACZ,GAAW,IACrBvB,EAAmBuB,EAAnBvB,MAAOwB,EAAYD,EAAZC,QAEf,OACI,kBAAC,IAAD,CAASC,MAAM,SAASC,MAAM,SAASC,KAAK,IAAIH,QAASA,GACpDxB,GAAS,6BAkEPoC,IA5DO,SAACb,GAAW,IAE1BV,EAiBAU,EAjBAV,aACAwB,EAgBAd,EAhBAc,cACAC,EAeAf,EAfAe,cACAC,EAcAhB,EAdAgB,YACAC,EAaAjB,EAbAiB,YACAC,EAYAlB,EAZAkB,aACAC,EAWAnB,EAXAmB,cACAC,EAUApB,EAVAoB,UACAC,EASArB,EATAqB,UACAC,EAQAtB,EARAsB,WACAC,EAOAvB,EAPAuB,WACAC,EAMAxB,EANAwB,YACAC,EAKAzB,EALAyB,YACAC,EAIA1B,EAJA0B,YACAC,EAGA3B,EAHA2B,cACAC,EAEA5B,EAFA4B,aACAC,EACA7B,EADA6B,gBAGJ,OACI,kBAAC,IAAD,KACKb,EACG,kBAAC,IAAD,CAAMlC,MAAM,QACR,kBAACiB,EAAD,CAAYtB,MAAO2C,EAAWnB,QAASe,KAG3C,4BAEHY,EACG,kBAAC,IAAD,CAAM9C,MAAM,QACR,kBAAC0B,EAAD,CAAa/B,MAAO2C,EAAWnB,QAAS2B,KAG5C,4BAEJ,kBAAC,IAAD,CAAM9C,MAAM,SACPiC,GAAiB,kBAACR,EAAD,CAAc9B,MAAOiD,EAAazB,QAASc,IADjE,WAGKD,GAAiB,kBAACT,EAAD,CAAc5B,MAAOgD,EAAaxB,QAASa,IAHjE,WAKKG,GAAe,kBAACR,EAAD,CAAYhC,MAAO4C,EAAWpB,QAASgB,IAL3D,WAOK3B,GAAgB,kBAACgB,EAAD,CAAa7B,MAAO6C,EAAYrB,QAASX,IAP9D,WASK4B,GAAgB,kBAACP,EAAD,CAAalC,MAAO8C,EAAYtB,QAASiB,IAT9D,WAWKW,GACG,kBAACnB,EAAD,CAAgBjC,MAAOkD,EAAe1B,QAAS4B,IAElDV,GAAiB,kBAACP,EAAD,CAAcnC,MAAO+C,EAAavB,QAASkB,KAEjE,6BACA,6BACA,gC,iCC9JZ,6BAyBeW,IAtBE,SAAA9B,GAAU,IACnBZ,EAA6CY,EAA7CZ,KAAMX,EAAuCuB,EAAvCvB,MAAOC,EAAgCsB,EAAhCtB,YAAa/B,EAAmBqD,EAAnBrD,MAAOgC,EAAYqB,EAAZrB,SAExC,OACC,kBAAC,IAAD,CAAYC,KAAG,GACd,kBAAC,IAAD,CAAMC,GAAG,IAAIC,MAAM,SAClB,kBAAC,IAAD,CAAQiD,QAAQ,cAActD,IAE/B,kBAAC,IAAD,KACC,kBAAC,IAAD,CACMW,KAAMA,GAAQ,OACd4C,aAAuB,aAAT5C,EAAsB,KAAO,MAChD6C,UAAWtD,EACXD,YAAaA,EACb/B,MAAOA,GAAS,GAChBgC,SAAUA,Q,iCClBf,kCAAO,IAAMuD,EAAiB,CAC1BC,OAAQ,0CACRC,WAAY,qCACZC,UAAW,qBACXC,cAAe,iCACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,iB,iCCPnB,wDAIAC,IAASC,cAAcT,KACLQ,IAASE,WAApB,IACMC,EAAUH,IAASG,UAEzB,SAAS9E,EAAqB+E,EAAMC,EAAUC,GACjD,OAAO,IAAIC,SAAQ,SAAUC,EAASC,GACfN,EAAQO,IAAR,UAAeN,EAAf,YAAuBC,IAAYM,IAAIL,GAC/CM,GACP,iBACA,eACA,SAACC,GACG/H,QAAQC,IAAI8H,GACZJ,OAEJ,WACIN,EACKO,IADL,UACYN,IACPU,MAAMT,GACNU,iBACAvH,MAAK,SAACnB,GACHmI,EAAQnI,c,uDCxBhC,6BAwBe2I,IArBM,SAAC1D,GAAW,IACrBvB,EAAwCuB,EAAxCvB,MAAOC,EAAiCsB,EAAjCtB,YAAa/B,EAAoBqD,EAApBrD,MAAOgC,EAAaqB,EAAbrB,SAEnC,OACI,kBAAC,IAAD,CAAYC,KAAG,GACX,kBAAC,IAAD,CAAMC,GAAG,IAAIC,MAAM,SACf,kBAAC,IAAD,CAAQiD,QAAQ,cAActD,IAElC,kBAAC,IAAD,KACI,kBAAC,IAAD,CACIkF,KAAK,KACL1B,UAAWtD,EACXD,YAAaA,EACb/B,MAAOA,EACPgC,SAAUA","file":"static/js/12.d4587eb6.chunk.js","sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport { CCard, CCardBody, CCol, CRow, CFormGroup } from '@coreui/react';\nimport TempAdminApi, { EndPoint, HttpMethod } from '../../constant/TempAdminApi';\nimport { isEmpty, isValidPhoneNumber } from '../../utils/common/commonFunction';\nimport { useHistory } from 'react-router-dom';\nimport { handleFirebaseUpload } from '../../utils/firebase/uploadFirebase';\nimport TextCell from '../component/cell/TextCell';\nimport TextareaCell from '../component/cell/TextareaCell';\nimport BottomButtons from '../component/Button';\nimport { WithContext as ReactTags } from 'react-tag-input';\nimport tagStyles from '../../scss/tag.scss';\n\nconst AddEnterprise = () => {\n    const history = useHistory();\n    const [korName, setKorName] = useState('');\n    const [engName, setEngName] = useState('');\n    const [categoryId, setCategoryId] = useState('1');\n    const [phoneNumber, setPhoneNumber] = useState('');\n    const [primeLocation, setPrimeLocation] = useState('');\n    const [location, setLocation] = useState('');\n    const [tag, setTag] = useState([]);\n    const [description, setDescription] = useState('');\n    const [thumbnailURL, setThumbnailURL] = useState('');\n    const [file, setFile] = useState(null);\n\n    // 업체 상세 조회 API 요청\n    useEffect(() => {\n        const getEnterprise = async () => {\n            try {\n                const { data: res } = await TempAdminApi.request({\n                    method: HttpMethod.GET,\n                    url: EndPoint.GET_STATUS,\n                });\n\n                if (!res?.isSuccess || isEmpty(res?.result) || res.result.status != 0) {\n                    alert('관리자만 업체를 추가할 수 있습니다.');\n                    history.push('/users');\n                    return;\n                }\n            } catch (error) {\n                console.log(error);\n                alert('네트워크 통신 실패. 잠시후 다시 시도해주세요.');\n                history.push('/users');\n            }\n        };\n\n        getEnterprise().then();\n    }, []);\n    // 사용자 추가 API 요청\n    async function postEnterprise(parameters) {\n        try {\n            const { data: res } = await TempAdminApi.request({\n                method: HttpMethod.POST,\n                url: EndPoint.POST_ENTERPRISE,\n                data: parameters,\n            });\n\n            if (!res?.isSuccess) {\n                alert(res.message);\n                return;\n            }\n\n            alert('업체 추가에 성공하였습니다.');\n            history.go(0);\n        } catch (error) {\n            console.log(error);\n            alert('네트워크 통신 실패. 잠시후 다시 시도해주세요.');\n        }\n    }\n\n    // 추가 버튼 onClick\n    function onPostButtonClick() {\n        let tags = '';\n        for (let i = 0; i < tag.length; i++) {\n            tags += tag[i].text;\n            tags += '|';\n        }\n        tags = tags.substring(0, tags.length - 1);\n        if (isEmpty(korName.trim())) {\n            alert('한글 이름을 입력해주세요.');\n            return;\n        }\n        if (isEmpty(engName.trim())) {\n            alert('영어 이름을 입력해주세요.');\n            return;\n        }\n        if (isEmpty(categoryId.trim())) {\n            alert('카테고리를 입력해주세요.');\n            return;\n        }\n        if (isEmpty(primeLocation.trim())) {\n            alert('대표 주소를 입력해주세요.');\n            return;\n        }\n        if (isEmpty(location.trim())) {\n            alert('주소를 입력해주세요.');\n            return;\n        }\n        if (isEmpty(tags.trim())) {\n            alert('태그를 입력해주세요.');\n            return;\n        }\n        if (isEmpty(description.trim())) {\n            alert('설명을 입력해주세요.');\n            return;\n        }\n        if (!isEmpty(phoneNumber.trim()) && !isValidPhoneNumber(phoneNumber.trim())) {\n            alert('전화번호 형식을 확인해주세요.');\n            return;\n        }\n        if (isEmpty(thumbnailURL.trim())) {\n            alert('이미지를 넣어주세요.');\n            return;\n        }\n\n        if (window.confirm('추가하시겠습니까?')) {\n            const parameters = {\n                korName: korName.trim(),\n                engName: engName.trim(),\n                category: categoryId.trim(),\n                primeLocation: primeLocation.trim(),\n                location: location.trim(),\n                tag: tags.trim(),\n                description: description.trim(),\n                phoneNumber: phoneNumber.trim(),\n                thumbnailURL: thumbnailURL.trim(),\n            };\n            postEnterprise(parameters).then();\n        }\n    }\n\n    const onChangeCategory = useCallback((e) => {\n        let target = document.getElementById('categoryId');\n        setCategoryId(target.options[target.selectedIndex].value);\n    }, []);\n\n    const KeyCodes = {\n        comma: 188,\n        enter: 13,\n    };\n\n    const delimiters = [KeyCodes.comma, KeyCodes.enter];\n\n    const handleDelete = useCallback(\n        (i) => {\n            setTag(tag.filter((onetag, index) => index !== i));\n        },\n        [tag],\n    );\n\n    const handleAddition = useCallback(\n        (oneTag) => {\n            if (tag.length == 5) {\n                alert('태그는 5개 이상 입력하실 수 없습니다.');\n            } else {\n                setTag([...tag, oneTag]);\n            }\n            // let jsonData = new Object()\n            // jsonData.id = tag.length + 1\n            // jsonData.text = oneTag\n            // let testTag = jsonData\n        },\n        [tag],\n    );\n\n    const onFileChange = useCallback(async (event) => {\n        const previewImage = document.getElementById('thumbnailImg');\n        // const {\n        //     target: { files, value },\n        // } = event;\n        const theFile = event.target.files[0];\n        let reader = new FileReader();\n        setFile(event.target.files[0]);\n        reader.onload = (e) => {\n            previewImage.setAttribute('src', e.target.result);\n        };\n        reader.readAsDataURL(theFile);\n        let firebaseURL = await handleFirebaseUpload(\n            'enterprise',\n            theFile.name,\n            event.target.files[0],\n        );\n        setThumbnailURL(firebaseURL);\n    }, []);\n\n    return (\n        <CRow>\n            <CCol>\n                <CCard>\n                    <CCardBody>\n                        <p>\n                            <div class=\"text-center\">\n                                <img\n                                    id=\"thumbnailImg\"\n                                    src={thumbnailURL}\n                                    alt=\"\"\n                                    class=\"img-thumbnail\"\n                                    width=\"300px\"\n                                    height=\"300px\"\n                                ></img>\n                            </div>\n                        </p>\n                        <div className=\"form-group\">\n                            <TextCell\n                                label=\"한글 이름\"\n                                placeholder=\"한글 이름을 입력해주세요\"\n                                value={korName}\n                                onChange={(e) => setKorName(e.target.value)}\n                            />\n                            <TextCell\n                                label=\"영어 이름\"\n                                placeholder=\"영어 이름을 입력해주세요\"\n                                value={engName}\n                                onChange={(e) => setEngName(e.target.value)}\n                            />\n                            <CFormGroup row>\n                                <CCol md=\"2\" align=\"right\">\n                                    <label name=\"category\">카테고리</label>\n                                </CCol>\n                                <div style={{ marginLeft: '15px' }}>\n                                    <select\n                                        id=\"categoryId\"\n                                        value={categoryId}\n                                        onChange={onChangeCategory}\n                                        style={{ width: '100px', height: '30px' }}\n                                    >\n                                        <option value=\"1\">단식원</option>\n                                        <option value=\"2\">템플스테이</option>\n                                        <option value=\"3\">힐링캠프</option>\n                                        <option value=\"4\">산후조리원</option>\n                                    </select>\n                                </div>\n                            </CFormGroup>\n                            <TextCell\n                                label=\"대표 주소\"\n                                placeholder=\"대표 주소를 입력해주세요\"\n                                value={primeLocation}\n                                onChange={(e) => setPrimeLocation(e.target.value)}\n                            />\n                            <TextCell\n                                label=\"주소\"\n                                placeholder=\"주소를 입력해주세요\"\n                                value={location}\n                                onChange={(e) => setLocation(e.target.value)}\n                            />\n                            <CFormGroup row>\n                                <CCol md=\"2\" align=\"right\">\n                                    <label name=\"tag\">태그</label>\n                                </CCol>\n                                <div className=\"app\" style={{ marginLeft: '15px' }}>\n                                    <ReactTags\n                                        tags={tag}\n                                        suggestions={tag}\n                                        inline\n                                        handleDelete={handleDelete}\n                                        handleAddition={handleAddition}\n                                        delimiters={delimiters}\n                                        placeholder=\"입력후 엔터 눌러주세요.\"\n                                    />\n                                </div>\n                            </CFormGroup>\n                            <TextareaCell\n                                label=\"설명\"\n                                placeholder=\"설명을 입력해주세요\"\n                                value={description}\n                                onChange={(e) => setDescription(e.target.value)}\n                            />\n                            <TextCell\n                                label=\"전화번호\"\n                                placeholder=\"전화번호를 입력해주세요\"\n                                value={phoneNumber}\n                                onChange={(e) => setPhoneNumber(e.target.value)}\n                            />\n                            <CFormGroup row>\n                                <CCol md=\"2\" align=\"right\">\n                                    <label name=\"thumbnailImg\">이미지</label>\n                                </CCol>\n                                <div style={{ marginLeft: '15px' }}>\n                                    <input type=\"file\" accept=\"image/*\" onChange={onFileChange} />\n                                </div>\n                            </CFormGroup>\n                        </div>\n                    </CCardBody>\n                </CCard>\n                <BottomButtons onAdminClick={onPostButtonClick} />\n            </CCol>\n        </CRow>\n    );\n};\n\nexport default AddEnterprise;\n","import { CButton, CCol, CRow } from '@coreui/react';\nimport React from 'react';\n\n// 뒤로가기 버튼\nconst BackButton = (props) => {\n    const { label, onClick } = props;\n\n    return (\n        <CButton color=\"success\" shape=\"square\" size=\"m\" onClick={onClick}>\n            {label || '뒤로가기'}\n        </CButton>\n    );\n};\n\n// 취소 버튼\nconst CancleButton = (props) => {\n    const { label, onClick } = props;\n\n    return (\n        <CButton color=\"danger\" shape=\"square\" size=\"m\" onClick={onClick}>\n            {label || '예약 취소'}\n        </CButton>\n    );\n};\n\n// 관리자 추가 버튼\nconst AdminButton = (props) => {\n    const { label, onClick } = props;\n\n    return (\n        <CButton color=\"success\" shape=\"square\" size=\"m\" onClick={onClick}>\n            {label || '추가하기'}\n        </CButton>\n    );\n};\n\n// 승인 버튼\nconst RegistButton = (props) => {\n    const { label, onClick } = props;\n\n    return (\n        <CButton color=\"success\" shape=\"square\" size=\"m\" onClick={onClick}>\n            {label || '예약 승인'}\n        </CButton>\n    );\n};\n\n// 닫기 버튼\nconst CloseButton = (props) => {\n    const { label, onClick } = props;\n\n    return (\n        <CButton color=\"success\" shape=\"square\" size=\"m\" onClick={onClick}>\n            {label || '닫기'}\n        </CButton>\n    );\n};\n\n// 추가하기 버튼\nconst PostButton = (props) => {\n    const { label, onClick } = props;\n\n    return (\n        <CButton color=\"success\" shape=\"square\" size=\"m\" onClick={onClick}>\n            {label || '프로그램 추가하기'}\n        </CButton>\n    );\n};\n\n// 가격 추가하기 버튼\nconst RoomPostButton = (props) => {\n    const { label, onClick } = props;\n\n    return (\n        <CButton color=\"success\" shape=\"square\" size=\"m\" onClick={onClick}>\n            {label || '추가하기'}\n        </CButton>\n    );\n};\n\n// 수정하기 버튼\nconst PatchButton = (props) => {\n    const { label, onClick } = props;\n\n    return (\n        <CButton color=\"primary\" shape=\"square\" size=\"m\" onClick={onClick}>\n            {label || '수정하기'}\n        </CButton>\n    );\n};\n\n// 삭제하기 버튼\nconst DeleteButton = (props) => {\n    const { label, onClick } = props;\n\n    return (\n        <CButton color=\"danger\" shape=\"square\" size=\"m\" onClick={onClick}>\n            {label || '삭제하기'}\n        </CButton>\n    );\n};\n\n// 하단 버튼 모듈\nconst BottomButtons = (props) => {\n    const {\n        onAdminClick,\n        onCancleClick,\n        onRegistClick,\n        onBackClick,\n        onPostClick,\n        onPatchClick,\n        onDeleteClick,\n        backLabel,\n        postLabel,\n        adminLabel,\n        patchLabel,\n        deleteLabel,\n        cancleLabel,\n        registLabel,\n        RoomPostLabel,\n        onCloseClick,\n        onRoomPostClick,\n    } = props;\n\n    return (\n        <CRow>\n            {onBackClick ? (\n                <CCol align=\"left\">\n                    <BackButton label={backLabel} onClick={onBackClick} />\n                </CCol>\n            ) : (\n                <p />\n            )}\n            {onCloseClick ? (\n                <CCol align=\"left\">\n                    <CloseButton label={backLabel} onClick={onCloseClick} />\n                </CCol>\n            ) : (\n                <p />\n            )}\n            <CCol align=\"right\">\n                {onRegistClick && <RegistButton label={registLabel} onClick={onRegistClick} />}\n                &nbsp;&nbsp;\n                {onCancleClick && <CancleButton label={cancleLabel} onClick={onCancleClick} />}\n                &nbsp;&nbsp;\n                {onPostClick && <PostButton label={postLabel} onClick={onPostClick} />}\n                &nbsp;&nbsp;\n                {onAdminClick && <AdminButton label={adminLabel} onClick={onAdminClick} />}\n                &nbsp;&nbsp;\n                {onPatchClick && <PatchButton label={patchLabel} onClick={onPatchClick} />}\n                &nbsp;&nbsp;\n                {onRoomPostClick && (\n                    <RoomPostButton label={RoomPostLabel} onClick={onRoomPostClick} />\n                )}\n                {onDeleteClick && <DeleteButton label={deleteLabel} onClick={onDeleteClick} />}\n            </CCol>\n            <br />\n            <br />\n            <br />\n        </CRow>\n    );\n};\n\nexport default BottomButtons;\n","import React from \"react\"\nimport {CCol, CFormGroup, CInput, CLabel} from \"@coreui/react\"\n\nconst TextCell = props => {\n\tconst {type, label, placeholder, value, onChange} = props\n\n\treturn (\n\t\t<CFormGroup row>\n\t\t\t<CCol md=\"2\" align=\"right\">\n\t\t\t\t<CLabel htmlFor=\"text-input\">{label}</CLabel>\n\t\t\t</CCol>\n\t\t\t<CCol>\n\t\t\t\t<CInput\n          type={type || \"text\"}\n          autoComplete={type === \"password\" ? \"on\" : \"off\"}\n\t\t\t\t\tdisabled={!onChange}\n\t\t\t\t\tplaceholder={placeholder}\n\t\t\t\t\tvalue={value || \"\"}\n\t\t\t\t\tonChange={onChange}\n\t\t\t\t/>\n\t\t\t</CCol>\n    </CFormGroup>\n\t)\n}\n\nexport default TextCell\n","export const firebaseConfig = {\n    apiKey: 'AIzaSyAc5JubmtbofQUZ-3cLmq9oWGjysVUdtRQ',\n    authDomain: 'formestay-21-71170.firebaseapp.com',\n    projectId: 'formestay-21-71170',\n    storageBucket: 'formestay-21-71170.appspot.com',\n    messagingSenderId: '127128062403',\n    appId: '1:127128062403:web:d54bd60b7c0f90b6415576',\n    measurementId: 'G-1H3NF6W7VM',\n};\n","import firebase from 'firebase';\nimport { firebaseConfig } from './configFirebase';\n\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\nexport const db = firebase.database();\nexport const storage = firebase.storage();\n\nexport function handleFirebaseUpload(path, filename, file) {\n    return new Promise(function (resolve, reject) {\n        const uploadTask = storage.ref(`${path}/${filename}`).put(file);\n        uploadTask.on(\n            'state_changed',\n            () => {},\n            (error) => {\n                console.log(error);\n                reject();\n            },\n            () => {\n                storage\n                    .ref(`${path}`)\n                    .child(filename)\n                    .getDownloadURL()\n                    .then((url) => {\n                        resolve(url);\n                    });\n            },\n        );\n    });\n}\n","import React from 'react';\nimport { CCol, CFormGroup, CLabel, CTextarea } from '@coreui/react';\n\nconst TextareaCell = (props) => {\n    const { label, placeholder, value, onChange } = props;\n\n    return (\n        <CFormGroup row>\n            <CCol md=\"2\" align=\"right\">\n                <CLabel htmlFor=\"text-input\">{label}</CLabel>\n            </CCol>\n            <CCol>\n                <CTextarea\n                    rows=\"10\"\n                    disabled={!onChange}\n                    placeholder={placeholder}\n                    value={value}\n                    onChange={onChange}\n                />\n            </CCol>\n        </CFormGroup>\n    );\n};\n\nexport default TextareaCell;\n"],"sourceRoot":""}