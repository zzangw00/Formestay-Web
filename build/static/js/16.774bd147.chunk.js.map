{"version":3,"sources":["views/boards/AddBoard.js","views/component/Button.js","views/component/cell/TextCell.js","utils/firebase/configFirebase.js","utils/firebase/uploadFirebase.js","views/component/cell/TextareaCell.js","views/component/cell/ImageCell.js"],"names":["AddBoard","history","useHistory","useState","userIdx","setUserIdx","title","setTitle","contents","setContents","imageURLs","setImageURLs","parameters","a","TempAdminApi","request","method","HttpMethod","POST","url","EndPoint","POST_BOARD","data","res","isSuccess","isEmpty","result","alert","message","push","console","log","className","label","placeholder","value","onChange","e","target","multiple","src","input","files","forEach","file","index","filename","Date","getTime","name","handleFirebaseUpload","then","sort","onPostClick","trim","window","confirm","postUser","imageUrls","BackButton","props","onClick","color","shape","size","CancleButton","RegistButton","CloseButton","PostButton","RoomPostButton","PatchButton","DeleteButton","BottomButtons","onCancleClick","onRegistClick","onBackClick","onPatchClick","onDeleteClick","backLabel","postLabel","patchLabel","deleteLabel","cancleLabel","registLabel","RoomPostLabel","onCloseClick","onRoomPostClick","align","TextCell","type","row","md","htmlFor","autoComplete","disabled","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firebase","initializeApp","database","storage","path","Promise","resolve","reject","ref","put","on","error","child","getDownloadURL","TextareaCell","rows","ImageCell","isLoading","accept","map","imageURL","key","height","fluid","style","width"],"mappings":"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","file":"static/js/16.774bd147.chunk.js","sourcesContent":["import React, {useState} from \"react\"\nimport {CCard, CCardBody, CCol, CRow} from \"@coreui/react\"\nimport TempAdminApi, {EndPoint, HttpMethod} from \"../../constant/TempAdminApi\"\nimport {isEmpty} from \"../../utils/common/commonFunction\"\nimport {useHistory} from \"react-router-dom\"\nimport {handleFirebaseUpload} from \"../../utils/firebase/uploadFirebase\"\nimport TextCell from \"../component/cell/TextCell\"\nimport TextareaCell from \"../component/cell/TextareaCell\"\nimport BottomButtons from \"../component/Button\"\nimport ImageCell from \"../component/cell/ImageCell\"\n\nconst AddBoard = () => {\n  const history = useHistory()\n\n  const [userIdx, setUserIdx] = useState(0)\n  const [title, setTitle] = useState(\"\")\n  const [contents, setContents] = useState(\"\")\n  const [imageURLs, setImageURLs] = useState([])\n\n  // 사용자 추가 API 요청\n  async function postUser(parameters) {\n    try {\n      const {data: res} = await TempAdminApi.request({\n        method: HttpMethod.POST,\n        url: EndPoint.POST_BOARD,\n        data: parameters\n      })\n\n      if (!res?.isSuccess || isEmpty(res?.result)) {\n        alert(res.message)\n        return\n      }\n\n      alert(\"게시물 추가에 성공하였습니다.\")\n      history.push(\"/boards\")\n    } catch (error) {\n      console.log(error)\n      alert(\"네트워크 통신 실패. 잠시후 다시 시도해주세요.\")\n    }\n  }\n\n  // 추가 버튼 onClick\n  function onPostButtonClick() {\n    if (isEmpty(title.trim())) {\n      alert(\"제목을 입력해주세요.\")\n    }\n    if (isEmpty(contents.trim())) {\n      alert(\"내용을 입력해주세요.\")\n    }\n\n    if (window.confirm(\"추가하시겠습니까?\")) {\n      const parameters = {\n        title: title.trim(),\n        contents: contents,\n        imageUrls: imageURLs\n      }\n      postUser(parameters).then()\n    }\n  }\n\n  // 이미지 추가 onClick\n  function onImageChange(input) {\n    setImageURLs(() => [])\n    input.target.files.forEach( (file, index) => {\n      const filename = `${new Date().getTime()}_${index}_${file.name}`\n      handleFirebaseUpload(\"web-admin/boards\", filename, file).then(url => {\n        setImageURLs(imageURLs => [...imageURLs, url].sort())\n      })\n    })\n  }\n\n  return (\n    <CRow>\n      <CCol>\n        <CCard>\n          <CCardBody>\n            <div className=\"form-group\">\n              <TextCell\n                label=\"사용자 고유번호\"\n                placeholder=\"사용자 고유번호를 입력해주세요\"\n                value={userIdx}\n                onChange={e => setUserIdx(e.target.value)}\n              />\n              <TextCell\n                label=\"제목\"\n                placeholder=\"제목을 입력해주세요\"\n                value={title}\n                onChange={e => setTitle(e.target.value)}\n              />\n              <TextareaCell\n                label=\"내용\"\n                placeholder=\"내용을 입력해주세요\"\n                value={contents}\n                onChange={e => setContents(e.target.value)}\n              />\n              <ImageCell\n                multiple\n                label=\"이미지\"\n                src={imageURLs}\n                onChange={onImageChange}\n              />\n            </div>\n          </CCardBody>\n        </CCard>\n        <BottomButtons onPostClick={onPostButtonClick}/>\n      </CCol>\n    </CRow>\n  )\n}\n\nexport default AddBoard\n","import { CButton, CCol, CRow } from '@coreui/react';\nimport React from 'react';\n\n// 뒤로가기 버튼\nconst BackButton = (props) => {\n    const { label, onClick } = props;\n\n    return (\n        <CButton color=\"success\" shape=\"square\" size=\"m\" onClick={onClick}>\n            {label || '뒤로가기'}\n        </CButton>\n    );\n};\n\n// 취소 버튼\nconst CancleButton = (props) => {\n    const { label, onClick } = props;\n\n    return (\n        <CButton color=\"danger\" shape=\"square\" size=\"m\" onClick={onClick}>\n            {label || '예약 취소'}\n        </CButton>\n    );\n};\n\n// 승인 버튼\nconst RegistButton = (props) => {\n    const { label, onClick } = props;\n\n    return (\n        <CButton color=\"success\" shape=\"square\" size=\"m\" onClick={onClick}>\n            {label || '예약 승인'}\n        </CButton>\n    );\n};\n\n// 닫기 버튼\nconst CloseButton = (props) => {\n    const { label, onClick } = props;\n\n    return (\n        <CButton color=\"success\" shape=\"square\" size=\"m\" onClick={onClick}>\n            {label || '닫기'}\n        </CButton>\n    );\n};\n\n// 추가하기 버튼\nconst PostButton = (props) => {\n    const { label, onClick } = props;\n\n    return (\n        <CButton color=\"success\" shape=\"square\" size=\"m\" onClick={onClick}>\n            {label || '프로그램 추가하기'}\n        </CButton>\n    );\n};\n\n// 가격 추가하기 버튼\nconst RoomPostButton = (props) => {\n    const { label, onClick } = props;\n\n    return (\n        <CButton color=\"success\" shape=\"square\" size=\"m\" onClick={onClick}>\n            {label || '추가하기'}\n        </CButton>\n    );\n};\n\n// 수정하기 버튼\nconst PatchButton = (props) => {\n    const { label, onClick } = props;\n\n    return (\n        <CButton color=\"primary\" shape=\"square\" size=\"m\" onClick={onClick}>\n            {label || '수정하기'}\n        </CButton>\n    );\n};\n\n// 삭제하기 버튼\nconst DeleteButton = (props) => {\n    const { label, onClick } = props;\n\n    return (\n        <CButton color=\"danger\" shape=\"square\" size=\"m\" onClick={onClick}>\n            {label || '삭제하기'}\n        </CButton>\n    );\n};\n\n// 하단 버튼 모듈\nconst BottomButtons = (props) => {\n    const {\n        onCancleClick,\n        onRegistClick,\n        onBackClick,\n        onPostClick,\n        onPatchClick,\n        onDeleteClick,\n        backLabel,\n        postLabel,\n        patchLabel,\n        deleteLabel,\n        cancleLabel,\n        registLabel,\n        RoomPostLabel,\n        onCloseClick,\n        onRoomPostClick,\n    } = props;\n\n    return (\n        <CRow>\n            {onBackClick ? (\n                <CCol align=\"left\">\n                    <BackButton label={backLabel} onClick={onBackClick} />\n                </CCol>\n            ) : (\n                <p />\n            )}\n            {onCloseClick ? (\n                <CCol align=\"left\">\n                    <CloseButton label={backLabel} onClick={onCloseClick} />\n                </CCol>\n            ) : (\n                <p />\n            )}\n            <CCol align=\"right\">\n                {onRoomPostClick && (\n                    <RoomPostButton label={RoomPostLabel} onClick={onRoomPostClick} />\n                )}\n                &nbsp;&nbsp;\n                {onRegistClick && <RegistButton label={registLabel} onClick={onRegistClick} />}\n                &nbsp;&nbsp;\n                {onCancleClick && <CancleButton label={cancleLabel} onClick={onCancleClick} />}\n                &nbsp;&nbsp;\n                {onPostClick && <PostButton label={postLabel} onClick={onPostClick} />}\n                &nbsp;&nbsp;\n                {onPatchClick && <PatchButton label={patchLabel} onClick={onPatchClick} />}\n                &nbsp;&nbsp;\n                {onDeleteClick && <DeleteButton label={deleteLabel} onClick={onDeleteClick} />}\n            </CCol>\n            <br />\n            <br />\n            <br />\n        </CRow>\n    );\n};\n\nexport default BottomButtons;\n","import React from \"react\"\nimport {CCol, CFormGroup, CInput, CLabel} from \"@coreui/react\"\n\nconst TextCell = props => {\n\tconst {type, label, placeholder, value, onChange} = props\n\n\treturn (\n\t\t<CFormGroup row>\n\t\t\t<CCol md=\"2\" align=\"right\">\n\t\t\t\t<CLabel htmlFor=\"text-input\">{label}</CLabel>\n\t\t\t</CCol>\n\t\t\t<CCol>\n\t\t\t\t<CInput\n          type={type || \"text\"}\n          autoComplete={type === \"password\" ? \"on\" : \"off\"}\n\t\t\t\t\tdisabled={!onChange}\n\t\t\t\t\tplaceholder={placeholder}\n\t\t\t\t\tvalue={value || \"\"}\n\t\t\t\t\tonChange={onChange}\n\t\t\t\t/>\n\t\t\t</CCol>\n    </CFormGroup>\n\t)\n}\n\nexport default TextCell\n","export const firebaseConfig = {\n    apiKey: 'AIzaSyAc5JubmtbofQUZ-3cLmq9oWGjysVUdtRQ',\n    authDomain: 'formestay-21-71170.firebaseapp.com',\n    projectId: 'formestay-21-71170',\n    storageBucket: 'formestay-21-71170.appspot.com',\n    messagingSenderId: '127128062403',\n    appId: '1:127128062403:web:d54bd60b7c0f90b6415576',\n    measurementId: 'G-1H3NF6W7VM',\n};\n","import firebase from 'firebase';\nimport { firebaseConfig } from './configFirebase';\n\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\nexport const db = firebase.database();\nexport const storage = firebase.storage();\n\nexport function handleFirebaseUpload(path, filename, file) {\n    return new Promise(function (resolve, reject) {\n        const uploadTask = storage.ref(`${path}/${filename}`).put(file);\n        uploadTask.on(\n            'state_changed',\n            () => {},\n            (error) => {\n                console.log(error);\n                reject();\n            },\n            () => {\n                storage\n                    .ref(`${path}`)\n                    .child(filename)\n                    .getDownloadURL()\n                    .then((url) => {\n                        resolve(url);\n                    });\n            },\n        );\n    });\n}\n","import React from 'react';\nimport { CCol, CFormGroup, CLabel, CTextarea } from '@coreui/react';\n\nconst TextareaCell = (props) => {\n    const { label, placeholder, value, onChange } = props;\n\n    return (\n        <CFormGroup row>\n            <CCol md=\"2\" align=\"right\">\n                <CLabel htmlFor=\"text-input\">{label}</CLabel>\n            </CCol>\n            <CCol>\n                <CTextarea\n                    rows=\"10\"\n                    disabled={!onChange}\n                    placeholder={placeholder}\n                    value={value}\n                    onChange={onChange}\n                />\n            </CCol>\n        </CFormGroup>\n    );\n};\n\nexport default TextareaCell;\n","import React from \"react\"\nimport {CCol, CFormGroup, CImg, CInputFile, CLabel, CSpinner} from \"@coreui/react\"\n\nconst ImageCell = props => {\n\tconst {multiple, label, src, isLoading, onChange} = props\n\n\treturn (\n\t\t<CFormGroup row>\n\t\t\t<CCol md=\"2\" align=\"right\">\n\t\t\t\t<CLabel htmlFor=\"text-input\">{label}</CLabel>\n\t\t\t</CCol>\n\t\t\t<CCol>\n\t\t\t\t{onChange && <>\n          <CInputFile multiple={multiple || false} accept=\"image/*\" onChange={onChange}/>\n          <br/>\n        </>}\n        {multiple\n          ? src.map((imageURL, index) => (\n            <CImg key={`image_${index}`} src={imageURL} height=\"150\" fluid/>\n          ))\n          : isLoading\n            ? <CSpinner style={{width: 120, height: 120}}/>\n            : <CImg src={src} height=\"150\" fluid/>\n        }\n\t\t\t</CCol>\n\t\t</CFormGroup>\n\t)\n}\n\nexport default ImageCell\n"],"sourceRoot":""}