{"version":3,"sources":["views/users/User.js","views/component/Button.js","views/component/cell/TextCell.js"],"names":["User","match","history","useHistory","useState","params","userId","email","setEmail","nickname","setNickname","name","setName","phoneNumber","setPhoneNumber","isEditing","setIsEditing","showGender","setShowGender","birthday","setBirthday","snsId","setSnsId","profileImgURL","setProfileImgURL","createdAt","setCreatedAt","parameters","a","TempAdminApi","request","method","HttpMethod","PATCH","url","EndPoint","PATCH_USER","path","data","res","isSuccess","alert","message","go","console","log","PATCH_USER_STATUS","status","push","useEffect","GET","GET_USER","isEmpty","result","user1","user","gender","getUser","then","class","src","alt","width","height","className","label","value","placeholder","onChange","e","target","onBackClick","onPatchClick","trim","window","confirm","patchUser","onDeleteClick","patchUserStatus","patchLabel","BackButton","props","onClick","color","shape","size","CancleButton","AdminButton","RegistButton","CloseButton","PostButton","RoomPostButton","PatchButton","DeleteButton","BottomButtons","onAdminClick","onCancleClick","onRegistClick","onPostClick","backLabel","postLabel","adminLabel","deleteLabel","cancleLabel","registLabel","RoomPostLabel","onCloseClick","onRoomPostClick","align","TextCell","type","row","md","htmlFor","autoComplete","disabled"],"mappings":"kSAoNeA,UA5MF,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACNC,EAAUC,cADQ,EAEPC,mBAASH,EAAMI,OAAOC,QAAhCA,EAFiB,sBAGEF,mBAAS,IAHX,mBAGjBG,EAHiB,KAGVC,EAHU,OAIQJ,mBAAS,IAJjB,mBAIjBK,EAJiB,KAIPC,EAJO,OAKAN,mBAAS,IALT,mBAKjBO,EALiB,KAKXC,EALW,OAMcR,mBAAS,IANvB,mBAMjBS,EANiB,KAMJC,EANI,OAOUV,oBAAS,GAPnB,mBAOjBW,EAPiB,KAONC,EAPM,OAQYZ,mBAAS,MARrB,mBAQjBa,EARiB,KAQLC,EARK,OASQd,mBAAS,IATjB,mBASjBe,EATiB,KASPC,EATO,OAUEhB,mBAAS,MAVX,mBAUjBiB,EAViB,KAUVC,EAVU,OAWkBlB,mBAAS,IAX3B,mBAWjBmB,EAXiB,KAWFC,EAXE,OAYUpB,mBAAS,IAZnB,mBAYjBqB,GAZiB,KAYNC,GAZM,mDAgExB,WAAyBC,GAAzB,iBAAAC,EAAA,+EAEoCC,IAAaC,QAAQ,CAC7CC,OAAQC,IAAWC,MACnBC,IAAKC,IAASC,WACdC,KAAM,CAAE/B,OAAQA,GAChBgC,KAAMX,IANlB,2BAEsBY,EAFtB,EAEgBD,YAFhB,IASaC,OATb,EASaA,EAAKC,UATlB,uBAUYC,MAAMF,EAAIG,SAVtB,0BAaQD,MAAM,qFACNvC,EAAQyC,GAAG,GAdnB,kDAgBQC,QAAQC,IAAR,MACAJ,MAAM,6HAjBd,2DAhEwB,oEAsFxB,WAA+BnC,GAA/B,iBAAAsB,EAAA,+EAEoCC,IAAaC,QAAQ,CAC7CC,OAAQC,IAAWC,MACnBC,IAAKC,IAASW,kBACdT,KAAM,CAAE/B,OAAQA,GAChBgC,KAAM,CAAES,OAAQ,cAN5B,oBAEsBR,EAFtB,EAEgBD,MAMCE,UARjB,uBASYC,MAAMF,EAAIG,SATtB,0BAaQD,MAAM,qFACNvC,EAAQ8C,KAAK,UAdrB,kDAgBQJ,QAAQC,IAAR,MACAJ,MAAM,6HAjBd,2DAtFwB,sBAuJxB,OAxIAQ,qBAAU,YACO,uCAAG,kCAAArB,EAAA,+EAEoBC,IAAaC,QAAQ,CAC7CC,OAAQC,IAAWkB,IACnBhB,IAAKC,IAASgB,SACdd,KAAM,CAAE/B,OAAQA,KALZ,oBAQJ,QANUiC,EAFN,EAEAD,YAMJ,IAACC,OAAD,EAACA,EAAKC,aAAaY,YAAO,OAACb,QAAD,IAACA,OAAD,EAACA,EAAKc,QAR5B,uBASJZ,MAAMF,EAAIG,SACVxC,EAAQ8C,KAAK,UAVT,0BAcFM,EAAQf,EAAIc,OACZE,EAAOD,EAAM,GACnB9C,EAAS+C,EAAKhD,OACdG,EAAY6C,EAAK9C,UACjBK,EAAeyC,EAAK1C,aACpBD,EAAQ2C,EAAK5C,MACM,GAAf4C,EAAKC,OACLtC,EAAc,gBAEdA,EAAc,gBAElBE,EAAYmC,EAAKpC,UACC,GAAdoC,EAAKlC,MACLC,EAAS,gBAETA,EAAS,sBAEbI,GAAa6B,EAAK9B,WACb8B,EAAKhC,cAGNC,EAAiB+B,EAAKhC,eAFtBC,EAAiB,IAjCb,kDAsCRoB,QAAQC,IAAR,MACAJ,MAAM,6HACNvC,EAAQ8C,KAAK,UAxCL,0DAAH,qDA4CbS,GAAUC,SACX,IA2FC,kBAAC,IAAD,KACI,kBAAC,IAAD,KACI,kBAAC,IAAD,KACI,2BACI,yBAAKC,MAAM,eACP,yBACIC,IAAKrC,EACLsC,IAAI,GACJF,MAAM,gBACNG,MAAM,QACNC,OAAO,YAInB,yBAAKC,UAAU,cACX,kBAAC,IAAD,CAAUC,MAAM,wCAAUC,MAAO5D,IACjC,kBAAC,IAAD,CACI2D,MAAM,qBAENC,MAAO3D,IAGX,kBAAC,IAAD,CAAU0D,MAAM,eAAKC,MAAOvD,IAC5B,kBAAC,IAAD,CACIsD,MAAM,qBACNE,YAAY,gEACZD,MAAOzD,EACP2D,SAAUrD,EAAY,SAACsD,GAAD,OAAO3D,EAAY2D,EAAEC,OAAOJ,QAAS,OAE/D,kBAAC,IAAD,CACID,MAAM,2BAENC,MAAOrD,IAGX,kBAAC,IAAD,CAAUoD,MAAM,eAAKC,MAAOjD,IAC5B,kBAAC,IAAD,CAAUgD,MAAM,2BAAOC,MAAO/C,IAC9B,kBAAC,IAAD,CAAU8C,MAAM,kCAASC,MAAO7C,IAChC,kBAAC,IAAD,CAAU4C,MAAM,4BAAQC,MAAOzC,QAI3C,kBAAC,IAAD,CACI8C,YAvFZ,WACIrE,EAAQ8C,KAAR,WAuFQwB,aAnFZ,WACSzD,EAaDqC,YAAQ3C,EAASgE,QACjBhC,MAAM,kEAQNiC,OAAOC,QAAQ,sDAxIC,4CA4IhBC,CAHmB,CACfnE,SAAUA,EAASgE,SAEDf,OAzBtB1C,GAAa,IAkFT6D,cApDZ,WACQH,OAAOC,QAAQ,yEAlJC,4CAmJhBG,CAAgBxE,GAAQoD,MAAK,gBAmDzBqB,WAAYhE,EAAY,2BAAS,gC,iCC9MjD,6BAIMiE,EAAa,SAACC,GAAW,IACnBhB,EAAmBgB,EAAnBhB,MAAOiB,EAAYD,EAAZC,QAEf,OACI,kBAAC,IAAD,CAASC,MAAM,UAAUC,MAAM,SAASC,KAAK,IAAIH,QAASA,GACrDjB,GAAS,6BAMhBqB,EAAe,SAACL,GAAW,IACrBhB,EAAmBgB,EAAnBhB,MAAOiB,EAAYD,EAAZC,QAEf,OACI,kBAAC,IAAD,CAASC,MAAM,SAASC,MAAM,SAASC,KAAK,IAAIH,QAASA,GACpDjB,GAAS,8BAMhBsB,EAAc,SAACN,GAAW,IACpBhB,EAAmBgB,EAAnBhB,MAAOiB,EAAYD,EAAZC,QAEf,OACI,kBAAC,IAAD,CAASC,MAAM,UAAUC,MAAM,SAASC,KAAK,IAAIH,QAASA,GACrDjB,GAAS,6BAMhBuB,EAAe,SAACP,GAAW,IACrBhB,EAAmBgB,EAAnBhB,MAAOiB,EAAYD,EAAZC,QAEf,OACI,kBAAC,IAAD,CAASC,MAAM,UAAUC,MAAM,SAASC,KAAK,IAAIH,QAASA,GACrDjB,GAAS,8BAMhBwB,EAAc,SAACR,GAAW,IACpBhB,EAAmBgB,EAAnBhB,MAAOiB,EAAYD,EAAZC,QAEf,OACI,kBAAC,IAAD,CAASC,MAAM,UAAUC,MAAM,SAASC,KAAK,IAAIH,QAASA,GACrDjB,GAAS,iBAMhByB,EAAa,SAACT,GAAW,IACnBhB,EAAmBgB,EAAnBhB,MAAOiB,EAAYD,EAAZC,QAEf,OACI,kBAAC,IAAD,CAASC,MAAM,UAAUC,MAAM,SAASC,KAAK,IAAIH,QAASA,GACrDjB,GAAS,sDAMhB0B,EAAiB,SAACV,GAAW,IACvBhB,EAAmBgB,EAAnBhB,MAAOiB,EAAYD,EAAZC,QAEf,OACI,kBAAC,IAAD,CAASC,MAAM,UAAUC,MAAM,SAASC,KAAK,IAAIH,QAASA,GACrDjB,GAAS,6BAMhB2B,EAAc,SAACX,GAAW,IACpBhB,EAAmBgB,EAAnBhB,MAAOiB,EAAYD,EAAZC,QAEf,OACI,kBAAC,IAAD,CAASC,MAAM,UAAUC,MAAM,SAASC,KAAK,IAAIH,QAASA,GACrDjB,GAAS,6BAMhB4B,EAAe,SAACZ,GAAW,IACrBhB,EAAmBgB,EAAnBhB,MAAOiB,EAAYD,EAAZC,QAEf,OACI,kBAAC,IAAD,CAASC,MAAM,SAASC,MAAM,SAASC,KAAK,IAAIH,QAASA,GACpDjB,GAAS,6BAkEP6B,IA5DO,SAACb,GAAW,IAE1Bc,EAiBAd,EAjBAc,aACAC,EAgBAf,EAhBAe,cACAC,EAeAhB,EAfAgB,cACA1B,EAcAU,EAdAV,YACA2B,EAaAjB,EAbAiB,YACA1B,EAYAS,EAZAT,aACAK,EAWAI,EAXAJ,cACAsB,EAUAlB,EAVAkB,UACAC,EASAnB,EATAmB,UACAC,EAQApB,EARAoB,WACAtB,EAOAE,EAPAF,WACAuB,EAMArB,EANAqB,YACAC,EAKAtB,EALAsB,YACAC,EAIAvB,EAJAuB,YACAC,EAGAxB,EAHAwB,cACAC,EAEAzB,EAFAyB,aACAC,EACA1B,EADA0B,gBAGJ,OACI,kBAAC,IAAD,KACKpC,EACG,kBAAC,IAAD,CAAMqC,MAAM,QACR,kBAAC5B,EAAD,CAAYf,MAAOkC,EAAWjB,QAASX,KAG3C,4BAEHmC,EACG,kBAAC,IAAD,CAAME,MAAM,QACR,kBAACnB,EAAD,CAAaxB,MAAOkC,EAAWjB,QAASwB,KAG5C,4BAEJ,kBAAC,IAAD,CAAME,MAAM,SACPX,GAAiB,kBAACT,EAAD,CAAcvB,MAAOuC,EAAatB,QAASe,IADjE,WAGKD,GAAiB,kBAACV,EAAD,CAAcrB,MAAOsC,EAAarB,QAASc,IAHjE,WAKKE,GAAe,kBAACR,EAAD,CAAYzB,MAAOmC,EAAWlB,QAASgB,IAL3D,WAOKH,GAAgB,kBAACR,EAAD,CAAatB,MAAOoC,EAAYnB,QAASa,IAP9D,WASKvB,GAAgB,kBAACoB,EAAD,CAAa3B,MAAOc,EAAYG,QAASV,IAT9D,WAWKmC,GACG,kBAAChB,EAAD,CAAgB1B,MAAOwC,EAAevB,QAASyB,IAElD9B,GAAiB,kBAACgB,EAAD,CAAc5B,MAAOqC,EAAapB,QAASL,KAEjE,6BACA,6BACA,gC,iCC9JZ,6BAyBegC,IAtBE,SAAA5B,GAAU,IACnB6B,EAA6C7B,EAA7C6B,KAAM7C,EAAuCgB,EAAvChB,MAAOE,EAAgCc,EAAhCd,YAAaD,EAAmBe,EAAnBf,MAAOE,EAAYa,EAAZb,SAExC,OACC,kBAAC,IAAD,CAAY2C,KAAG,GACd,kBAAC,IAAD,CAAMC,GAAG,IAAIJ,MAAM,SAClB,kBAAC,IAAD,CAAQK,QAAQ,cAAchD,IAE/B,kBAAC,IAAD,KACC,kBAAC,IAAD,CACM6C,KAAMA,GAAQ,OACdI,aAAuB,aAATJ,EAAsB,KAAO,MAChDK,UAAW/C,EACXD,YAAaA,EACbD,MAAOA,GAAS,GAChBE,SAAUA","file":"static/js/22.ebca949f.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { CCard, CCardBody, CCol } from '@coreui/react';\nimport TempAdminApi, { EndPoint, HttpMethod } from '../../constant/TempAdminApi';\nimport { isEmpty, isValidEmail, isValidPhoneNumber } from '../../utils/common/commonFunction';\nimport { useHistory } from 'react-router-dom';\nimport TextCell from '../component/cell/TextCell';\nimport BottomButtons from '../component/Button';\n\nconst User = ({ match }) => {\n    const history = useHistory();\n    const [userId] = useState(match.params.userId);\n    const [email, setEmail] = useState('');\n    const [nickname, setNickname] = useState('');\n    const [name, setName] = useState('');\n    const [phoneNumber, setPhoneNumber] = useState('');\n    const [isEditing, setIsEditing] = useState(false);\n    const [showGender, setShowGender] = useState(null);\n    const [birthday, setBirthday] = useState('');\n    const [snsId, setSnsId] = useState(null);\n    const [profileImgURL, setProfileImgURL] = useState('');\n    const [createdAt, setCreatedAt] = useState('');\n    const nullImage = <i class=\"cis-file-image\"></i>;\n    // 사용자 상세 조회 API 요청\n    useEffect(() => {\n        const getUser = async () => {\n            try {\n                const { data: res } = await TempAdminApi.request({\n                    method: HttpMethod.GET,\n                    url: EndPoint.GET_USER,\n                    path: { userId: userId },\n                });\n\n                if (!res?.isSuccess || isEmpty(res?.result)) {\n                    alert(res.message);\n                    history.push('/users');\n                    return;\n                }\n\n                const user1 = res.result;\n                const user = user1[0];\n                setEmail(user.email);\n                setNickname(user.nickname);\n                setPhoneNumber(user.phoneNumber);\n                setName(user.name);\n                if (user.gender == 1) {\n                    setShowGender('남자');\n                } else {\n                    setShowGender('여자');\n                }\n                setBirthday(user.birthday);\n                if (user.snsId == 0) {\n                    setSnsId('일반');\n                } else {\n                    setSnsId('카카오');\n                }\n                setCreatedAt(user.createdAt);\n                if (!user.profileImgURL) {\n                    setProfileImgURL('');\n                } else {\n                    setProfileImgURL(user.profileImgURL);\n                }\n            } catch (error) {\n                console.log(error);\n                alert('네트워크 통신 실패. 잠시후 다시 시도해주세요.');\n                history.push('/users');\n            }\n        };\n\n        getUser().then();\n    }, []);\n\n    // 사용자 수정 API 요청\n    async function patchUser(parameters) {\n        try {\n            const { data: res } = await TempAdminApi.request({\n                method: HttpMethod.PATCH,\n                url: EndPoint.PATCH_USER,\n                path: { userId: userId },\n                data: parameters,\n            });\n\n            if (!res?.isSuccess) {\n                alert(res.message);\n                return;\n            }\n            alert('사용자 수정에 성공하였습니다.');\n            history.go(0);\n        } catch (error) {\n            console.log(error);\n            alert('네트워크 통신 실패. 잠시후 다시 시도해주세요.');\n        }\n    }\n\n    // 회원 탈퇴 API 요청\n    async function patchUserStatus(userId) {\n        try {\n            const { data: res } = await TempAdminApi.request({\n                method: HttpMethod.PATCH,\n                url: EndPoint.PATCH_USER_STATUS,\n                path: { userId: userId },\n                data: { status: 'INACTIVE' },\n            });\n            if (!res.isSuccess) {\n                alert(res.message);\n                return;\n            }\n\n            alert('사용자 삭제에 성공하였습니다.');\n            history.push('/users');\n        } catch (error) {\n            console.log(error);\n            alert('네트워크 통신 실패. 잠시후 다시 시도해주세요.');\n        }\n    }\n\n    // 뒤로가기 버튼 onClick\n    function onBackButtonClick() {\n        history.push(`/users`);\n    }\n\n    // 수정 버튼 onClick\n    function onPatchButtonClick() {\n        if (!isEditing) {\n            setIsEditing(true);\n            return;\n        }\n\n        // if (isEmpty(email.trim())) {\n        //     alert('이메일을 입력해주세요.');\n        //     return;\n        // }\n        // if (!isValidEmail(email.trim())) {\n        //     alert('이메일 형식을 확인해주세요.');\n        //     return;\n        // }\n        if (isEmpty(nickname.trim())) {\n            alert('닉네임을 입력해주세요.');\n            return;\n        }\n        // if (!isEmpty(phoneNumber.trim()) && !isValidPhoneNumber(phoneNumber.trim())) {\n        //     alert('전화번호 형식을 확인해주세요.');\n        //     return;\n        // }\n\n        if (window.confirm('수정하시겠습니까?')) {\n            const parameters = {\n                nickname: nickname.trim(),\n            };\n            patchUser(parameters).then();\n        }\n    }\n\n    // 삭제 버튼 onClick\n    function onDeleteButtonClick() {\n        if (window.confirm('정말로 삭제하시겠습니까?')) {\n            patchUserStatus(userId).then(() => {});\n        }\n    }\n\n    return (\n        <CCol>\n            <CCard>\n                <CCardBody>\n                    <p>\n                        <div class=\"text-center\">\n                            <img\n                                src={profileImgURL}\n                                alt=\"\"\n                                class=\"img-thumbnail\"\n                                width=\"300px\"\n                                height=\"300px\"\n                            ></img>\n                        </div>\n                    </p>\n                    <div className=\"form-group\">\n                        <TextCell label=\"유저 고유번호\" value={userId} />\n                        <TextCell\n                            label=\"이메일\"\n                            // placeholder=\"이메일 주소를 입력해주세요\"\n                            value={email}\n                            // onChange={isEditing ? (e) => setEmail(e.target.value) : null}\n                        />\n                        <TextCell label=\"이름\" value={name} />\n                        <TextCell\n                            label=\"닉네임\"\n                            placeholder=\"닉네임을 입력해주세요\"\n                            value={nickname}\n                            onChange={isEditing ? (e) => setNickname(e.target.value) : null}\n                        />\n                        <TextCell\n                            label=\"전화번호\"\n                            // placeholder=\"전화번호를 입력해주세요\"\n                            value={phoneNumber}\n                            // onChange={isEditing ? (e) => setPhoneNumber(e.target.value) : null}\n                        />\n                        <TextCell label=\"성별\" value={showGender} />\n                        <TextCell label=\"생년월일\" value={birthday} />\n                        <TextCell label=\"로그인 유형\" value={snsId} />\n                        <TextCell label=\"가입 날짜\" value={createdAt} />\n                    </div>\n                </CCardBody>\n            </CCard>\n            <BottomButtons\n                onBackClick={onBackButtonClick}\n                onPatchClick={onPatchButtonClick}\n                onDeleteClick={onDeleteButtonClick}\n                patchLabel={isEditing ? '수정완료' : '수정하기'}\n            />\n        </CCol>\n    );\n};\n\nexport default User;\n","import { CButton, CCol, CRow } from '@coreui/react';\nimport React from 'react';\n\n// 뒤로가기 버튼\nconst BackButton = (props) => {\n    const { label, onClick } = props;\n\n    return (\n        <CButton color=\"success\" shape=\"square\" size=\"m\" onClick={onClick}>\n            {label || '뒤로가기'}\n        </CButton>\n    );\n};\n\n// 취소 버튼\nconst CancleButton = (props) => {\n    const { label, onClick } = props;\n\n    return (\n        <CButton color=\"danger\" shape=\"square\" size=\"m\" onClick={onClick}>\n            {label || '예약 취소'}\n        </CButton>\n    );\n};\n\n// 관리자 추가 버튼\nconst AdminButton = (props) => {\n    const { label, onClick } = props;\n\n    return (\n        <CButton color=\"success\" shape=\"square\" size=\"m\" onClick={onClick}>\n            {label || '추가하기'}\n        </CButton>\n    );\n};\n\n// 승인 버튼\nconst RegistButton = (props) => {\n    const { label, onClick } = props;\n\n    return (\n        <CButton color=\"success\" shape=\"square\" size=\"m\" onClick={onClick}>\n            {label || '예약 승인'}\n        </CButton>\n    );\n};\n\n// 닫기 버튼\nconst CloseButton = (props) => {\n    const { label, onClick } = props;\n\n    return (\n        <CButton color=\"success\" shape=\"square\" size=\"m\" onClick={onClick}>\n            {label || '닫기'}\n        </CButton>\n    );\n};\n\n// 추가하기 버튼\nconst PostButton = (props) => {\n    const { label, onClick } = props;\n\n    return (\n        <CButton color=\"success\" shape=\"square\" size=\"m\" onClick={onClick}>\n            {label || '프로그램 추가하기'}\n        </CButton>\n    );\n};\n\n// 가격 추가하기 버튼\nconst RoomPostButton = (props) => {\n    const { label, onClick } = props;\n\n    return (\n        <CButton color=\"success\" shape=\"square\" size=\"m\" onClick={onClick}>\n            {label || '추가하기'}\n        </CButton>\n    );\n};\n\n// 수정하기 버튼\nconst PatchButton = (props) => {\n    const { label, onClick } = props;\n\n    return (\n        <CButton color=\"primary\" shape=\"square\" size=\"m\" onClick={onClick}>\n            {label || '수정하기'}\n        </CButton>\n    );\n};\n\n// 삭제하기 버튼\nconst DeleteButton = (props) => {\n    const { label, onClick } = props;\n\n    return (\n        <CButton color=\"danger\" shape=\"square\" size=\"m\" onClick={onClick}>\n            {label || '삭제하기'}\n        </CButton>\n    );\n};\n\n// 하단 버튼 모듈\nconst BottomButtons = (props) => {\n    const {\n        onAdminClick,\n        onCancleClick,\n        onRegistClick,\n        onBackClick,\n        onPostClick,\n        onPatchClick,\n        onDeleteClick,\n        backLabel,\n        postLabel,\n        adminLabel,\n        patchLabel,\n        deleteLabel,\n        cancleLabel,\n        registLabel,\n        RoomPostLabel,\n        onCloseClick,\n        onRoomPostClick,\n    } = props;\n\n    return (\n        <CRow>\n            {onBackClick ? (\n                <CCol align=\"left\">\n                    <BackButton label={backLabel} onClick={onBackClick} />\n                </CCol>\n            ) : (\n                <p />\n            )}\n            {onCloseClick ? (\n                <CCol align=\"left\">\n                    <CloseButton label={backLabel} onClick={onCloseClick} />\n                </CCol>\n            ) : (\n                <p />\n            )}\n            <CCol align=\"right\">\n                {onRegistClick && <RegistButton label={registLabel} onClick={onRegistClick} />}\n                &nbsp;&nbsp;\n                {onCancleClick && <CancleButton label={cancleLabel} onClick={onCancleClick} />}\n                &nbsp;&nbsp;\n                {onPostClick && <PostButton label={postLabel} onClick={onPostClick} />}\n                &nbsp;&nbsp;\n                {onAdminClick && <AdminButton label={adminLabel} onClick={onAdminClick} />}\n                &nbsp;&nbsp;\n                {onPatchClick && <PatchButton label={patchLabel} onClick={onPatchClick} />}\n                &nbsp;&nbsp;\n                {onRoomPostClick && (\n                    <RoomPostButton label={RoomPostLabel} onClick={onRoomPostClick} />\n                )}\n                {onDeleteClick && <DeleteButton label={deleteLabel} onClick={onDeleteClick} />}\n            </CCol>\n            <br />\n            <br />\n            <br />\n        </CRow>\n    );\n};\n\nexport default BottomButtons;\n","import React from \"react\"\nimport {CCol, CFormGroup, CInput, CLabel} from \"@coreui/react\"\n\nconst TextCell = props => {\n\tconst {type, label, placeholder, value, onChange} = props\n\n\treturn (\n\t\t<CFormGroup row>\n\t\t\t<CCol md=\"2\" align=\"right\">\n\t\t\t\t<CLabel htmlFor=\"text-input\">{label}</CLabel>\n\t\t\t</CCol>\n\t\t\t<CCol>\n\t\t\t\t<CInput\n          type={type || \"text\"}\n          autoComplete={type === \"password\" ? \"on\" : \"off\"}\n\t\t\t\t\tdisabled={!onChange}\n\t\t\t\t\tplaceholder={placeholder}\n\t\t\t\t\tvalue={value || \"\"}\n\t\t\t\t\tonChange={onChange}\n\t\t\t\t/>\n\t\t\t</CCol>\n    </CFormGroup>\n\t)\n}\n\nexport default TextCell\n"],"sourceRoot":""}