{"version":3,"sources":["views/programs/AddProgram.js","views/component/Button.js","views/component/cell/TextCell.js","utils/firebase/configFirebase.js","utils/firebase/uploadFirebase.js","views/component/cell/TextareaCell.js"],"names":["styled","div","customStyles","content","width","top","left","right","bottom","marginRight","transform","AddProgram","match","history","useHistory","useState","params","enterpriseId","name","setName","description","setDescription","tag","setTag","modalIsOpen","setIsOpen","checkIn","setCheckIn","checkOut","setCheckOut","EditorState","createEmpty","programInfo","mealInfo","thumbnailURL","setThumbnailURL","setFile","person","setPerson","price","setPrice","showRoomPrice","setShowRoomPrice","roomPrice","setRoomPrice","getRoomPrice","useCallback","parameters","tempString","String","inRoom","closeModal","a","TempAdminApi","request","method","HttpMethod","POST","url","EndPoint","POST_PROGRAM","data","res","isSuccess","alert","message","go","console","log","delimiters","handleDelete","i","filter","onetag","index","handleAddition","oneTag","onFileChange","event","previewImage","document","getElementById","theFile","target","files","reader","FileReader","onload","e","setAttribute","result","readAsDataURL","handleFirebaseUpload","firebaseURL","class","id","src","alt","height","className","label","placeholder","value","onChange","style","float","marginTop","onClick","isOpen","onRequestClose","onRoomPostClick","isEmpty","window","confirm","onCloseClick","row","md","align","htmlFor","disabled","marginLeft","tags","suggestions","inline","type","accept","onPostClick","length","text","substring","programInfoToHtml","draftToHtml","convertToRaw","getCurrentContent","mealInfoToHtml","trim","postProgram","then","onBackClick","push","BackButton","props","color","shape","size","CancleButton","AdminButton","RegistButton","CloseButton","PostButton","RoomPostButton","PatchButton","DeleteButton","BottomButtons","onAdminClick","onCancleClick","onRegistClick","onPatchClick","onDeleteClick","backLabel","postLabel","adminLabel","patchLabel","deleteLabel","cancleLabel","registLabel","RoomPostLabel","TextCell","autoComplete","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firebase","initializeApp","database","storage","path","filename","file","Promise","resolve","reject","ref","put","on","error","child","getDownloadURL","TextareaCell","rows"],"mappings":"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","file":"static/js/14.ee37e19b.chunk.js","sourcesContent":["import React, { useState, useCallback, useEffect } from 'react';\nimport { CCard, CCardBody, CCol, CRow, CFormGroup, CInput, CLabel } from '@coreui/react';\nimport TempAdminApi, { EndPoint, HttpMethod } from '../../constant/TempAdminApi';\nimport { isEmpty, isValidPhoneNumber } from '../../utils/common/commonFunction';\nimport { useHistory } from 'react-router-dom';\nimport { handleFirebaseUpload } from '../../utils/firebase/uploadFirebase';\nimport TextCell from '../component/cell/TextCell';\nimport TextareaCell from '../component/cell/TextareaCell';\nimport BottomButtons from '../component/Button';\nimport { WithContext as ReactTags } from 'react-tag-input';\nimport tagStyles from '../../scss/tag.scss';\nimport { program } from '@babel/types';\nimport { Editor } from 'react-draft-wysiwyg';\nimport { EditorState, convertToRaw, ContentState } from 'draft-js';\nimport htmlToDraft from 'html-to-draftjs';\nimport draftToHtml from 'draftjs-to-html';\nimport styled from 'styled-components';\nimport Modal from 'react-modal';\nimport 'react-draft-wysiwyg/dist/react-draft-wysiwyg.css';\n\nconst MyBlock = styled.div`\n    .wrapper-class {\n        width: 100%;\n        margin: 0 auto;\n        margin-bottom: 4rem;\n    }\n    .editor {\n        height: 500px !important;\n        border: 1px solid #f1f1f1 !important;\n        padding: 5px !important;\n        border-radius: 2px !important;\n    }\n`;\n\nconst IntroduceContent = styled.div`\n    position: relative;\n    border: 0.0625rem solid #d7e2eb;\n    border-radius: 0.75rem;\n    overflow: hidden;\n    padding: 1.5rem;\n    width: 50%;\n    margin: 0 auto;\n    margin-bottom: 4rem;\n`;\nconst customStyles = {\n    content: {\n        width: '700px',\n        top: '50%',\n        left: '50%',\n        right: 'auto',\n        bottom: 'auto',\n        marginRight: '-50%',\n        transform: 'translate(-50%, -50%)',\n    },\n};\nconst AddProgram = ({ match }) => {\n    const history = useHistory();\n    const [enterpriseId] = useState(match.params.enterpriseId);\n    const [name, setName] = useState('');\n    const [description, setDescription] = useState('');\n    const [tag, setTag] = useState([]);\n    const [modalIsOpen, setIsOpen] = useState(false);\n    const [checkIn, setCheckIn] = useState('');\n    const [checkOut, setCheckOut] = useState('');\n    const [programInfo, setProgramInfo] = useState(EditorState.createEmpty());\n    const [mealInfo, setMealInfo] = useState(EditorState.createEmpty());\n    const [thumbnailURL, setThumbnailURL] = useState('');\n    const [file, setFile] = useState(null);\n    const [person, setPerson] = useState(null);\n    const [price, setPrice] = useState(null);\n    const [showRoomPrice, setShowRoomPrice] = useState([]);\n    const [roomPrice, setRoomPrice] = useState([]);\n\n    const getRoomPrice = useCallback(\n        (parameters) => {\n            let tempString = '';\n            tempString = String(parameters.inRoom) + '인실: ' + String(parameters.price) + '원';\n\n            setShowRoomPrice([...showRoomPrice, tempString]);\n        },\n        [roomPrice],\n    );\n    function openModal() {\n        setIsOpen(true);\n    }\n\n    function closeModal() {\n        setIsOpen(false);\n    }\n    // 프로그램 추가 API 요청\n    async function postProgram(parameters) {\n        try {\n            const { data: res } = await TempAdminApi.request({\n                method: HttpMethod.POST,\n                url: EndPoint.POST_PROGRAM,\n                data: parameters,\n            });\n\n            if (!res?.isSuccess) {\n                alert(res.message);\n                return;\n            }\n\n            alert('프로그램 추가에 성공하였습니다.');\n            history.go(0);\n        } catch (error) {\n            console.log(error);\n            alert('네트워크 통신 실패. 잠시후 다시 시도해주세요.');\n        }\n    }\n    // 가격정보 추가 버튼 onClick\n    function onPostRoomButtonClick() {\n        if (isEmpty(person)) {\n            alert('인수를 입력해주세요.');\n            return;\n        }\n        if (isEmpty(price)) {\n            alert('가격을 입력해주세요.');\n            return;\n        }\n        if (window.confirm('추가하시겠습니까?')) {\n            const parameters = {\n                inRoom: person,\n                price: price,\n            };\n            setRoomPrice([...roomPrice, parameters]);\n            getRoomPrice(parameters);\n            closeModal();\n        }\n    }\n\n    // 추가 버튼 onClick\n    function onPostButtonClick() {\n        let tags = '';\n        for (let i = 0; i < tag.length; i++) {\n            tags += tag[i].text;\n            tags += '|';\n        }\n        tags = tags.substring(0, tags.length - 1);\n        const programInfoToHtml = draftToHtml(convertToRaw(programInfo.getCurrentContent()));\n        const mealInfoToHtml = draftToHtml(convertToRaw(mealInfo.getCurrentContent()));\n        if (isEmpty(name.trim())) {\n            alert('프로그램명을 입력해주세요.');\n            return;\n        }\n        if (isEmpty(description.trim())) {\n            alert('설명을 입력해주세요.');\n            return;\n        }\n        if (isEmpty(tags.trim())) {\n            alert('태그를 입력해주세요.');\n            return;\n        }\n        if (isEmpty(thumbnailURL.trim())) {\n            alert('이미지를 입력해주세요.');\n            return;\n        }\n        if (isEmpty(checkIn.trim())) {\n            alert('체크인 시간을 입력해주세요.');\n            return;\n        }\n        if (isEmpty(checkOut.trim())) {\n            alert('체크아웃 시간을 입력해주세요.');\n            return;\n        }\n        if (isEmpty(programInfo)) {\n            alert('프로그램 설명을 입력해주세요.');\n            return;\n        }\n        if (isEmpty(mealInfo)) {\n            alert('식단 설명을 입력해주세요.');\n            return;\n        }\n        if (window.confirm('추가하시겠습니까?')) {\n            const parameters = {\n                enterpriseId: enterpriseId,\n                name: name.trim(),\n                description: description.trim(),\n                tag: tags.trim(),\n                thumbnailURL: thumbnailURL.trim(),\n                checkIn: checkIn.trim(),\n                checkOut: checkOut.trim(),\n                programInfo: programInfoToHtml,\n                mealInfo: mealInfoToHtml,\n                roomPrice: roomPrice,\n            };\n            postProgram(parameters).then();\n        }\n    }\n\n    const KeyCodes = {\n        comma: 188,\n        enter: 13,\n    };\n\n    const delimiters = [KeyCodes.comma, KeyCodes.enter];\n\n    const handleDelete = useCallback(\n        (i) => {\n            setTag(tag.filter((onetag, index) => index !== i));\n        },\n        [tag],\n    );\n\n    const handleAddition = useCallback(\n        (oneTag) => {\n            // let jsonData = new Object()\n            // jsonData.id = tag.length + 1\n            // jsonData.text = oneTag\n            // let testTag = jsonData\n            setTag([...tag, oneTag]);\n        },\n        [tag],\n    );\n\n    const onFileChange = useCallback(async (event) => {\n        const previewImage = document.getElementById('thumbnailImg');\n        // const {\n        //     target: { files, value },\n        // } = event;\n        const theFile = event.target.files[0];\n        let reader = new FileReader();\n        setFile(event.target.files[0]);\n        reader.onload = (e) => {\n            previewImage.setAttribute('src', e.target.result);\n        };\n        reader.readAsDataURL(theFile);\n        let firebaseURL = await handleFirebaseUpload(\n            'program',\n            theFile.name,\n            event.target.files[0],\n        );\n        setThumbnailURL(firebaseURL);\n    }, []);\n\n    function onChangecheckOut(e) {\n        setCheckOut(e.target.value);\n    }\n    function onChangecheckIn(e) {\n        setCheckIn(e.target.value);\n    }\n    function onProgramInfoChange(e) {\n        setProgramInfo(e);\n    }\n    function onMealInfoChange(e) {\n        setMealInfo(e);\n    }\n\n    // 뒤로가기 버튼 onClick\n    function onBackButtonClick() {\n        history.push(`/enterprises`);\n    }\n\n    return (\n        <CRow>\n            <CCol>\n                <CCard>\n                    <CCardBody>\n                        <p>\n                            <div class=\"text-center\">\n                                <img\n                                    id=\"thumbnailImg\"\n                                    src={thumbnailURL}\n                                    alt=\"\"\n                                    class=\"img-thumbnail\"\n                                    width=\"300px\"\n                                    height=\"300px\"\n                                ></img>\n                            </div>\n                        </p>\n                        <div className=\"form-group\">\n                            <TextCell\n                                label=\"프로그램명\"\n                                placeholder=\"프로그램명을 입력해주세요\"\n                                value={name}\n                                onChange={(e) => setName(e.target.value)}\n                            />\n                            <TextareaCell\n                                label=\"설명\"\n                                placeholder=\"설명을 입력해주세요\"\n                                value={description}\n                                onChange={(e) => setDescription(e.target.value)}\n                            />\n                            <div style={{ float: 'right', marginTop: '3px', marginRight: '20px' }}>\n                                <button onClick={openModal}>추가</button>\n                                <Modal\n                                    isOpen={modalIsOpen}\n                                    onRequestClose={closeModal}\n                                    // classNames={{\n                                    //     overlay: 'customOverlay',\n                                    //     modal: 'customModal',\n                                    // }}\n                                    style={customStyles}\n                                >\n                                    <div className=\"form-group\">\n                                        <TextCell\n                                            label=\"인실\"\n                                            placeholder=\"인실을 입력해주세요\"\n                                            value={person}\n                                            onChange={(e) => setPerson(e.target.value)}\n                                        />\n                                        <TextCell\n                                            label=\"가격\"\n                                            placeholder=\"가격을 입력해주세요\"\n                                            value={price}\n                                            onChange={(e) => setPrice(e.target.value)}\n                                        />\n                                        <BottomButtons\n                                            onRoomPostClick={onPostRoomButtonClick}\n                                            onCloseClick={closeModal}\n                                        />\n                                    </div>\n                                </Modal>\n                            </div>\n                            <CFormGroup row>\n                                <CCol md=\"2\" align=\"right\">\n                                    <CLabel htmlFor=\"text-input\">가격 정보</CLabel>\n                                </CCol>\n                                <CCol>\n                                    <CInput\n                                        placeholder=\"가격 정보를 입력 해주세요\"\n                                        value={showRoomPrice}\n                                        disabled\n                                    />\n                                </CCol>\n                            </CFormGroup>\n                            <CFormGroup row>\n                                <CCol md=\"2\" align=\"right\">\n                                    <label name=\"tag\">태그</label>\n                                </CCol>\n                                <div className=\"app\" style={{ marginLeft: '15px' }}>\n                                    <ReactTags\n                                        tags={tag}\n                                        suggestions={tag}\n                                        inline\n                                        handleDelete={handleDelete}\n                                        handleAddition={handleAddition}\n                                        delimiters={delimiters}\n                                        placeholder=\"입력후 엔터 눌러주세요.\"\n                                    />\n                                </div>\n                            </CFormGroup>\n                            <CFormGroup row>\n                                <CCol md=\"2\" align=\"right\">\n                                    <label name=\"tag\">체크인 시간</label>\n                                </CCol>\n                                <div className=\"app\" style={{ marginLeft: '15px' }}>\n                                    <input\n                                        type=\"time\"\n                                        id=\"checkInInput\"\n                                        onChange={onChangecheckIn}\n                                    />\n                                </div>\n                            </CFormGroup>\n                            <CFormGroup row>\n                                <CCol md=\"2\" align=\"right\">\n                                    <label name=\"tag\">체크아웃 시간</label>\n                                </CCol>\n                                <div className=\"app\" style={{ marginLeft: '15px' }}>\n                                    <input\n                                        type=\"time\"\n                                        id=\"checkOutInput\"\n                                        onChange={onChangecheckOut}\n                                    />\n                                </div>\n                            </CFormGroup>\n                            <TextCell\n                                label=\"프로그램 정보\"\n                                value=\"프로그램 수정하기를 통해 넣어주세요\"\n                            />\n                            <TextCell\n                                label=\"식단 정보\"\n                                value=\"프로그램 수정하기를 통해 넣어주세요\"\n                            />\n                            <CFormGroup row>\n                                <CCol md=\"2\" align=\"right\">\n                                    <label name=\"thumbnailImg\">썸네일 이미지</label>\n                                </CCol>\n                                <div style={{ marginLeft: '15px' }}>\n                                    <input type=\"file\" accept=\"image/*\" onChange={onFileChange} />\n                                </div>\n                            </CFormGroup>\n                            <TextCell label=\"이미지\" value=\"프로그램 수정하기를 통해 넣어주세요\" />\n                        </div>\n                    </CCardBody>\n                </CCard>\n                <BottomButtons onPostClick={onPostButtonClick} onBackClick={onBackButtonClick} />\n            </CCol>\n        </CRow>\n    );\n};\n\nexport default AddProgram;\n","import { CButton, CCol, CRow } from '@coreui/react';\nimport React from 'react';\n\n// 뒤로가기 버튼\nconst BackButton = (props) => {\n    const { label, onClick } = props;\n\n    return (\n        <CButton color=\"success\" shape=\"square\" size=\"m\" onClick={onClick}>\n            {label || '뒤로가기'}\n        </CButton>\n    );\n};\n\n// 취소 버튼\nconst CancleButton = (props) => {\n    const { label, onClick } = props;\n\n    return (\n        <CButton color=\"danger\" shape=\"square\" size=\"m\" onClick={onClick}>\n            {label || '예약 취소'}\n        </CButton>\n    );\n};\n\n// 관리자 추가 버튼\nconst AdminButton = (props) => {\n    const { label, onClick } = props;\n\n    return (\n        <CButton color=\"success\" shape=\"square\" size=\"m\" onClick={onClick}>\n            {label || '추가하기'}\n        </CButton>\n    );\n};\n\n// 승인 버튼\nconst RegistButton = (props) => {\n    const { label, onClick } = props;\n\n    return (\n        <CButton color=\"success\" shape=\"square\" size=\"m\" onClick={onClick}>\n            {label || '예약 승인'}\n        </CButton>\n    );\n};\n\n// 닫기 버튼\nconst CloseButton = (props) => {\n    const { label, onClick } = props;\n\n    return (\n        <CButton color=\"success\" shape=\"square\" size=\"m\" onClick={onClick}>\n            {label || '닫기'}\n        </CButton>\n    );\n};\n\n// 추가하기 버튼\nconst PostButton = (props) => {\n    const { label, onClick } = props;\n\n    return (\n        <CButton color=\"success\" shape=\"square\" size=\"m\" onClick={onClick}>\n            {label || '프로그램 추가하기'}\n        </CButton>\n    );\n};\n\n// 가격 추가하기 버튼\nconst RoomPostButton = (props) => {\n    const { label, onClick } = props;\n\n    return (\n        <CButton color=\"success\" shape=\"square\" size=\"m\" onClick={onClick}>\n            {label || '추가하기'}\n        </CButton>\n    );\n};\n\n// 수정하기 버튼\nconst PatchButton = (props) => {\n    const { label, onClick } = props;\n\n    return (\n        <CButton color=\"primary\" shape=\"square\" size=\"m\" onClick={onClick}>\n            {label || '수정하기'}\n        </CButton>\n    );\n};\n\n// 삭제하기 버튼\nconst DeleteButton = (props) => {\n    const { label, onClick } = props;\n\n    return (\n        <CButton color=\"danger\" shape=\"square\" size=\"m\" onClick={onClick}>\n            {label || '삭제하기'}\n        </CButton>\n    );\n};\n\n// 하단 버튼 모듈\nconst BottomButtons = (props) => {\n    const {\n        onAdminClick,\n        onCancleClick,\n        onRegistClick,\n        onBackClick,\n        onPostClick,\n        onPatchClick,\n        onDeleteClick,\n        backLabel,\n        postLabel,\n        adminLabel,\n        patchLabel,\n        deleteLabel,\n        cancleLabel,\n        registLabel,\n        RoomPostLabel,\n        onCloseClick,\n        onRoomPostClick,\n    } = props;\n\n    return (\n        <CRow>\n            {onBackClick ? (\n                <CCol align=\"left\">\n                    <BackButton label={backLabel} onClick={onBackClick} />\n                </CCol>\n            ) : (\n                <p />\n            )}\n            {onCloseClick ? (\n                <CCol align=\"left\">\n                    <CloseButton label={backLabel} onClick={onCloseClick} />\n                </CCol>\n            ) : (\n                <p />\n            )}\n            <CCol align=\"right\">\n                {onRegistClick && <RegistButton label={registLabel} onClick={onRegistClick} />}\n                &nbsp;&nbsp;\n                {onCancleClick && <CancleButton label={cancleLabel} onClick={onCancleClick} />}\n                &nbsp;&nbsp;\n                {onPostClick && <PostButton label={postLabel} onClick={onPostClick} />}\n                &nbsp;&nbsp;\n                {onAdminClick && <AdminButton label={adminLabel} onClick={onAdminClick} />}\n                &nbsp;&nbsp;\n                {onPatchClick && <PatchButton label={patchLabel} onClick={onPatchClick} />}\n                &nbsp;&nbsp;\n                {onRoomPostClick && (\n                    <RoomPostButton label={RoomPostLabel} onClick={onRoomPostClick} />\n                )}\n                {onDeleteClick && <DeleteButton label={deleteLabel} onClick={onDeleteClick} />}\n            </CCol>\n            <br />\n            <br />\n            <br />\n        </CRow>\n    );\n};\n\nexport default BottomButtons;\n","import React from \"react\"\nimport {CCol, CFormGroup, CInput, CLabel} from \"@coreui/react\"\n\nconst TextCell = props => {\n\tconst {type, label, placeholder, value, onChange} = props\n\n\treturn (\n\t\t<CFormGroup row>\n\t\t\t<CCol md=\"2\" align=\"right\">\n\t\t\t\t<CLabel htmlFor=\"text-input\">{label}</CLabel>\n\t\t\t</CCol>\n\t\t\t<CCol>\n\t\t\t\t<CInput\n          type={type || \"text\"}\n          autoComplete={type === \"password\" ? \"on\" : \"off\"}\n\t\t\t\t\tdisabled={!onChange}\n\t\t\t\t\tplaceholder={placeholder}\n\t\t\t\t\tvalue={value || \"\"}\n\t\t\t\t\tonChange={onChange}\n\t\t\t\t/>\n\t\t\t</CCol>\n    </CFormGroup>\n\t)\n}\n\nexport default TextCell\n","export const firebaseConfig = {\n    apiKey: 'AIzaSyAc5JubmtbofQUZ-3cLmq9oWGjysVUdtRQ',\n    authDomain: 'formestay-21-71170.firebaseapp.com',\n    projectId: 'formestay-21-71170',\n    storageBucket: 'formestay-21-71170.appspot.com',\n    messagingSenderId: '127128062403',\n    appId: '1:127128062403:web:d54bd60b7c0f90b6415576',\n    measurementId: 'G-1H3NF6W7VM',\n};\n","import firebase from 'firebase';\nimport { firebaseConfig } from './configFirebase';\n\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\nexport const db = firebase.database();\nexport const storage = firebase.storage();\n\nexport function handleFirebaseUpload(path, filename, file) {\n    return new Promise(function (resolve, reject) {\n        const uploadTask = storage.ref(`${path}/${filename}`).put(file);\n        uploadTask.on(\n            'state_changed',\n            () => {},\n            (error) => {\n                console.log(error);\n                reject();\n            },\n            () => {\n                storage\n                    .ref(`${path}`)\n                    .child(filename)\n                    .getDownloadURL()\n                    .then((url) => {\n                        resolve(url);\n                    });\n            },\n        );\n    });\n}\n","import React from 'react';\nimport { CCol, CFormGroup, CLabel, CTextarea } from '@coreui/react';\n\nconst TextareaCell = (props) => {\n    const { label, placeholder, value, onChange } = props;\n\n    return (\n        <CFormGroup row>\n            <CCol md=\"2\" align=\"right\">\n                <CLabel htmlFor=\"text-input\">{label}</CLabel>\n            </CCol>\n            <CCol>\n                <CTextarea\n                    rows=\"10\"\n                    disabled={!onChange}\n                    placeholder={placeholder}\n                    value={value}\n                    onChange={onChange}\n                />\n            </CCol>\n        </CFormGroup>\n    );\n};\n\nexport default TextareaCell;\n"],"sourceRoot":""}