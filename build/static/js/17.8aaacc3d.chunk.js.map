{"version":3,"sources":["views/boards/Board.js","views/component/Button.js","views/component/cell/TextCell.js","utils/firebase/configFirebase.js","utils/firebase/uploadFirebase.js","views/component/cell/TextareaCell.js","views/component/cell/ImageCell.js"],"names":["Board","match","history","useHistory","useState","params","boardIdx","userIdx","setUserIdx","title","setTitle","contents","setContents","imageURLs","setImageURLs","isEditing","setIdEditing","parameters","a","TempAdminApi","request","method","HttpMethod","PATCH","url","EndPoint","PATCH_BOARD","path","data","res","isSuccess","isEmpty","result","alert","message","go","console","log","PATCH_BOARD_STATUS","status","push","useEffect","GET","GET_BOARD","board","imageUrls","getBoard","then","className","label","value","placeholder","onChange","e","target","multiple","src","input","files","forEach","file","index","handleFirebaseUpload","Date","getTime","name","sort","onBackClick","onPatchClick","trim","patchBoard","onDeleteClick","window","confirm","patchBoardStatus","patchLabel","BackButton","props","onClick","color","shape","size","CancleButton","RegistButton","CloseButton","PostButton","RoomPostButton","PatchButton","DeleteButton","BottomButtons","onCancleClick","onRegistClick","onPostClick","backLabel","postLabel","deleteLabel","cancleLabel","registLabel","RoomPostLabel","onCloseClick","onRoomPostClick","align","TextCell","type","row","md","htmlFor","autoComplete","disabled","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firebase","initializeApp","database","storage","filename","Promise","resolve","reject","ref","put","on","error","child","getDownloadURL","TextareaCell","rows","ImageCell","isLoading","accept","map","imageURL","key","height","fluid","style","width"],"mappings":"sUAqLeA,UA1KD,SAAC,GAAa,IAAZC,EAAW,EAAXA,MACRC,EAAUC,cADS,EAENC,mBAASH,EAAMI,OAAOC,UAAlCA,EAFkB,sBAGKF,mBAAS,GAHd,mBAGlBG,EAHkB,KAGTC,EAHS,OAICJ,mBAAS,IAJV,mBAIlBK,EAJkB,KAIXC,EAJW,OAKON,mBAAS,IALhB,mBAKlBO,EALkB,KAKRC,EALQ,OAMSR,mBAAS,IANlB,mBAMlBS,EANkB,KAMPC,EANO,OAOSV,oBAAS,GAPlB,mBAOlBW,EAPkB,KAOPC,EAPO,iDAyCzB,WAA0BC,GAA1B,iBAAAC,EAAA,+EAE8BC,IAAaC,QAAQ,CAC7CC,OAAQC,IAAWC,MACnBC,IAAKC,IAASC,YACdC,KAAM,CAACrB,SAAUA,GACjBsB,KAAMX,IANZ,oBASQ,QAPSY,EAFjB,EAEWD,YAOH,IAACC,OAAD,EAACA,EAAKC,aAAaC,YAAO,OAACF,QAAD,IAACA,OAAD,EAACA,EAAKG,QATxC,uBAUMC,MAAMJ,EAAIK,SAVhB,0BAcID,MAAM,qFACN/B,EAAQiC,GAAG,GAff,kDAiBIC,QAAQC,IAAR,MACAJ,MAAM,6HAlBV,2DAzCyB,kEAgEzB,WAAgC3B,GAAhC,iBAAAY,EAAA,+EAE8BC,IAAaC,QAAQ,CAC7CC,OAAQC,IAAWC,MACnBC,IAAKC,IAASa,mBACdX,KAAM,CAACrB,SAAUA,GACjBsB,KAAM,CAACW,OAAQ,cANrB,oBAEiBV,EAFjB,EAEWD,MAOEE,UATb,uBAUMG,MAAMJ,EAAIK,SAVhB,0BAcID,MAAM,qFACN/B,EAAQsC,KAAK,WAfjB,kDAiBIJ,QAAQC,IAAR,MACAJ,MAAM,6HAlBV,2DAhEyB,sBAkIzB,OAxHAQ,qBAAU,YACM,uCAAG,gCAAAvB,EAAA,+EAEaC,IAAaC,QAAQ,CAC7CC,OAAQC,IAAWoB,IACnBlB,IAAKC,IAASkB,UACdhB,KAAM,CAACrB,SAAUA,KALN,oBAQT,QANSuB,EAFA,EAEND,YAMH,IAACC,OAAD,EAACA,EAAKC,aAAaC,YAAO,OAACF,QAAD,IAACA,OAAD,EAACA,EAAKG,QARvB,uBASXC,MAAMJ,EAAIK,SACVhC,EAAQsC,KAAK,WAVF,0BAcPI,EAAQf,EAAIG,OAClBxB,EAAWoC,EAAMrC,SACjBG,EAASkC,EAAMnC,OACfG,EAAYgC,EAAMjC,UAClBG,EAAa8B,EAAMC,WAlBN,kDAoBbT,QAAQC,IAAR,MACAJ,MAAM,6HACN/B,EAAQsC,KAAK,WAtBA,0DAAH,qDA0BdM,GAAWC,SACV,IA6FD,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,yBAAKC,UAAU,cACb,kBAAC,IAAD,CACEC,MAAM,8CACNC,MAAO5C,IACT,kBAAC,IAAD,CACE2C,MAAM,8CACNC,MAAO3C,IACT,kBAAC,IAAD,CACE0C,MAAM,eACNE,YAAY,0DACZD,MAAOzC,EACP2C,SAAUrC,EAAY,SAAAsC,GAAC,OAAI3C,EAAS2C,EAAEC,OAAOJ,QAAS,OACxD,kBAAC,IAAD,CACED,MAAM,eACNE,YAAY,0DACZD,MAAOvC,EACPyC,SAAUrC,EAAY,SAAAsC,GAAC,OAAIzC,EAAYyC,EAAEC,OAAOJ,QAAS,OAC3D,kBAAC,IAAD,CACEK,UAAQ,EACRN,MAAM,qBACNO,IAAK3C,EACLuC,SAAUrC,EAlCtB,SAAuB0C,GACrB3C,GAAa,iBAAM,MACnB2C,EAAMH,OAAOI,MAAMC,SAAS,SAACC,EAAMC,GACjCC,YAAqB,SAAD,WAAc,IAAIC,MAAOC,UAAzB,YAAsCH,EAAtC,YAA+CD,EAAKK,MAAQL,GAAMb,MAAK,SAAAvB,GACzFV,GAAa,SAAAD,GAAS,MAAI,sBAAIA,GAAJ,CAAeW,IAAK0C,iBA8BF,UAK9C,kBAAC,IAAD,CACEC,YA1EN,WACEjE,EAAQsC,KAAR,YA0EI4B,aAtEN,WACOrD,GAKDgB,YAAQtB,EAAM4D,SAChBpC,MAAM,4DAEJF,YAAQpB,EAAS0D,SACnBpC,MAAM,4DAtGe,2CA8GvBqC,CALmB,CACjB7D,MAAOA,EACPE,SAAUA,EACVkC,UAAWhC,IAEUkC,QAhBrB/B,GAAa,IAqEXuD,cAjDN,WACMC,OAAOC,QAAQ,yEAnHI,2CAoHrBC,CAAiBpE,GAAUyC,MAAK,gBAgD9B4B,WAAY5D,EAAY,2BAAS,gC,iCC/KzC,6BAIM6D,EAAa,SAACC,GAAW,IACnB5B,EAAmB4B,EAAnB5B,MAAO6B,EAAYD,EAAZC,QAEf,OACI,kBAAC,IAAD,CAASC,MAAM,UAAUC,MAAM,SAASC,KAAK,IAAIH,QAASA,GACrD7B,GAAS,6BAMhBiC,EAAe,SAACL,GAAW,IACrB5B,EAAmB4B,EAAnB5B,MAAO6B,EAAYD,EAAZC,QAEf,OACI,kBAAC,IAAD,CAASC,MAAM,SAASC,MAAM,SAASC,KAAK,IAAIH,QAASA,GACpD7B,GAAS,8BAMhBkC,EAAe,SAACN,GAAW,IACrB5B,EAAmB4B,EAAnB5B,MAAO6B,EAAYD,EAAZC,QAEf,OACI,kBAAC,IAAD,CAASC,MAAM,UAAUC,MAAM,SAASC,KAAK,IAAIH,QAASA,GACrD7B,GAAS,8BAMhBmC,EAAc,SAACP,GAAW,IACpB5B,EAAmB4B,EAAnB5B,MAAO6B,EAAYD,EAAZC,QAEf,OACI,kBAAC,IAAD,CAASC,MAAM,UAAUC,MAAM,SAASC,KAAK,IAAIH,QAASA,GACrD7B,GAAS,iBAMhBoC,EAAa,SAACR,GAAW,IACnB5B,EAAmB4B,EAAnB5B,MAAO6B,EAAYD,EAAZC,QAEf,OACI,kBAAC,IAAD,CAASC,MAAM,UAAUC,MAAM,SAASC,KAAK,IAAIH,QAASA,GACrD7B,GAAS,sDAMhBqC,EAAiB,SAACT,GAAW,IACvB5B,EAAmB4B,EAAnB5B,MAAO6B,EAAYD,EAAZC,QAEf,OACI,kBAAC,IAAD,CAASC,MAAM,UAAUC,MAAM,SAASC,KAAK,IAAIH,QAASA,GACrD7B,GAAS,6BAMhBsC,EAAc,SAACV,GAAW,IACpB5B,EAAmB4B,EAAnB5B,MAAO6B,EAAYD,EAAZC,QAEf,OACI,kBAAC,IAAD,CAASC,MAAM,UAAUC,MAAM,SAASC,KAAK,IAAIH,QAASA,GACrD7B,GAAS,6BAMhBuC,EAAe,SAACX,GAAW,IACrB5B,EAAmB4B,EAAnB5B,MAAO6B,EAAYD,EAAZC,QAEf,OACI,kBAAC,IAAD,CAASC,MAAM,SAASC,MAAM,SAASC,KAAK,IAAIH,QAASA,GACpD7B,GAAS,6BA+DPwC,IAzDO,SAACZ,GAAW,IAE1Ba,EAeAb,EAfAa,cACAC,EAcAd,EAdAc,cACAxB,EAaAU,EAbAV,YACAyB,EAYAf,EAZAe,YACAxB,EAWAS,EAXAT,aACAG,EAUAM,EAVAN,cACAsB,EASAhB,EATAgB,UACAC,EAQAjB,EARAiB,UACAnB,EAOAE,EAPAF,WACAoB,EAMAlB,EANAkB,YACAC,EAKAnB,EALAmB,YACAC,EAIApB,EAJAoB,YACAC,EAGArB,EAHAqB,cACAC,EAEAtB,EAFAsB,aACAC,EACAvB,EADAuB,gBAGJ,OACI,kBAAC,IAAD,KACKjC,EACG,kBAAC,IAAD,CAAMkC,MAAM,QACR,kBAACzB,EAAD,CAAY3B,MAAO4C,EAAWf,QAASX,KAG3C,4BAEHgC,EACG,kBAAC,IAAD,CAAME,MAAM,QACR,kBAACjB,EAAD,CAAanC,MAAO4C,EAAWf,QAASqB,KAG5C,4BAEJ,kBAAC,IAAD,CAAME,MAAM,SACPD,GACG,kBAACd,EAAD,CAAgBrC,MAAOiD,EAAepB,QAASsB,IAFvD,WAKKT,GAAiB,kBAACR,EAAD,CAAclC,MAAOgD,EAAanB,QAASa,IALjE,WAOKD,GAAiB,kBAACR,EAAD,CAAcjC,MAAO+C,EAAalB,QAASY,IAPjE,WASKE,GAAe,kBAACP,EAAD,CAAYpC,MAAO6C,EAAWhB,QAASc,IAT3D,WAWKxB,GAAgB,kBAACmB,EAAD,CAAatC,MAAO0B,EAAYG,QAASV,IAX9D,WAaKG,GAAiB,kBAACiB,EAAD,CAAcvC,MAAO8C,EAAajB,QAASP,KAEjE,6BACA,6BACA,gC,iCChJZ,6BAyBe+B,IAtBE,SAAAzB,GAAU,IACnB0B,EAA6C1B,EAA7C0B,KAAMtD,EAAuC4B,EAAvC5B,MAAOE,EAAgC0B,EAAhC1B,YAAaD,EAAmB2B,EAAnB3B,MAAOE,EAAYyB,EAAZzB,SAExC,OACC,kBAAC,IAAD,CAAYoD,KAAG,GACd,kBAAC,IAAD,CAAMC,GAAG,IAAIJ,MAAM,SAClB,kBAAC,IAAD,CAAQK,QAAQ,cAAczD,IAE/B,kBAAC,IAAD,KACC,kBAAC,IAAD,CACMsD,KAAMA,GAAQ,OACdI,aAAuB,aAATJ,EAAsB,KAAO,MAChDK,UAAWxD,EACXD,YAAaA,EACbD,MAAOA,GAAS,GAChBE,SAAUA,Q,iCClBf,kCAAO,IAAMyD,EAAiB,CAC1BC,OAAQ,0CACRC,WAAY,qCACZC,UAAW,qBACXC,cAAe,iCACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,iB,iCCPnB,wDAIAC,IAASC,cAAcT,KACLQ,IAASE,WAApB,IACMC,EAAUH,IAASG,UAEzB,SAAS1D,EAAqBnC,EAAM8F,EAAU7D,GACjD,OAAO,IAAI8D,SAAQ,SAAUC,EAASC,GACfJ,EAAQK,IAAR,UAAelG,EAAf,YAAuB8F,IAAYK,IAAIlE,GAC/CmE,GACP,iBACA,eACA,SAACC,GACG5F,QAAQC,IAAI2F,GACZJ,OAEJ,WACIJ,EACKK,IADL,UACYlG,IACPsG,MAAMR,GACNS,iBACAnF,MAAK,SAACvB,GACHmG,EAAQnG,c,iCCxBhC,6BAwBe2G,IArBM,SAACtD,GAAW,IACrB5B,EAAwC4B,EAAxC5B,MAAOE,EAAiC0B,EAAjC1B,YAAaD,EAAoB2B,EAApB3B,MAAOE,EAAayB,EAAbzB,SAEnC,OACI,kBAAC,IAAD,CAAYoD,KAAG,GACX,kBAAC,IAAD,CAAMC,GAAG,IAAIJ,MAAM,SACf,kBAAC,IAAD,CAAQK,QAAQ,cAAczD,IAElC,kBAAC,IAAD,KACI,kBAAC,IAAD,CACImF,KAAK,KACLxB,UAAWxD,EACXD,YAAaA,EACbD,MAAOA,EACPE,SAAUA,Q,iCCjB9B,6BA6BeiF,IA1BG,SAAAxD,GAAU,IACpBtB,EAA6CsB,EAA7CtB,SAAUN,EAAmC4B,EAAnC5B,MAAOO,EAA4BqB,EAA5BrB,IAAK8E,EAAuBzD,EAAvByD,UAAWlF,EAAYyB,EAAZzB,SAExC,OACC,kBAAC,IAAD,CAAYoD,KAAG,GACd,kBAAC,IAAD,CAAMC,GAAG,IAAIJ,MAAM,SAClB,kBAAC,IAAD,CAAQK,QAAQ,cAAczD,IAE/B,kBAAC,IAAD,KACEG,GAAY,oCACP,kBAAC,IAAD,CAAYG,SAAUA,IAAY,EAAOgF,OAAO,UAAUnF,SAAUA,IACpE,8BAEDG,EACGC,EAAIgF,KAAI,SAACC,EAAU5E,GAAX,OACR,kBAAC,IAAD,CAAM6E,IAAG,gBAAW7E,GAASL,IAAKiF,EAAUE,OAAO,MAAMC,OAAK,OAE9DN,EACE,kBAAC,IAAD,CAAUO,MAAO,CAACC,MAAO,IAAKH,OAAQ,OACtC,kBAAC,IAAD,CAAMnF,IAAKA,EAAKmF,OAAO,MAAMC,OAAK","file":"static/js/17.8aaacc3d.chunk.js","sourcesContent":["import React, {useEffect, useState} from \"react\"\nimport {CCard, CCardBody, CCol} from \"@coreui/react\"\nimport TempAdminApi, {EndPoint, HttpMethod} from \"../../constant/TempAdminApi\"\nimport {isEmpty} from \"../../utils/common/commonFunction\"\nimport {useHistory} from \"react-router-dom\"\nimport {handleFirebaseUpload} from \"../../utils/firebase/uploadFirebase\"\nimport TextCell from \"../component/cell/TextCell\"\nimport TextareaCell from \"../component/cell/TextareaCell\"\nimport BottomButtons from \"../component/Button\"\nimport ImageCell from \"../component/cell/ImageCell\"\n\nconst Board = ({match}) => {\n  const history = useHistory()\n  const [boardIdx] = useState(match.params.boardIdx)\n  const [userIdx, setUserIdx] = useState(0)\n  const [title, setTitle] = useState(\"\")\n  const [contents, setContents] = useState(\"\")\n  const [imageURLs, setImageURLs] = useState([])\n  const [isEditing, setIdEditing] = useState(false)\n\n  // 게시물 상세 조회 API 요청\n  useEffect(() => {\n    const getBoard = async () => {\n      try {\n        const {data: res} = await TempAdminApi.request({\n          method: HttpMethod.GET,\n          url: EndPoint.GET_BOARD,\n          path: {boardIdx: boardIdx}\n        })\n\n        if (!res?.isSuccess || isEmpty(res?.result)) {\n          alert(res.message)\n          history.push(\"/boards\")\n          return\n        }\n\n        const board = res.result\n        setUserIdx(board.userIdx)\n        setTitle(board.title)\n        setContents(board.contents)\n        setImageURLs(board.imageUrls)\n      } catch (error) {\n        console.log(error)\n        alert(\"네트워크 통신 실패. 잠시후 다시 시도해주세요.\")\n        history.push(\"/boards\")\n      }\n    }\n\n    getBoard().then()\n  }, [])\n\n  // 게시물 수정 API 요청\n  async function patchBoard(parameters) {\n    try {\n      const {data: res} = await TempAdminApi.request({\n        method: HttpMethod.PATCH,\n        url: EndPoint.PATCH_BOARD,\n        path: {boardIdx: boardIdx},\n        data: parameters\n      })\n\n      if (!res?.isSuccess || isEmpty(res?.result)) {\n        alert(res.message)\n        return\n      }\n\n      alert(\"게시물 수정에 성공하였습니다.\")\n      history.go(0)\n    } catch (error) {\n      console.log(error)\n      alert(\"네트워크 통신 실패. 잠시후 다시 시도해주세요.\")\n    }\n  }\n\n  // 게시물 삭제 API 요청\n  async function patchBoardStatus(boardIdx) {\n    try {\n      const {data: res} = await TempAdminApi.request({\n        method: HttpMethod.PATCH,\n        url: EndPoint.PATCH_BOARD_STATUS,\n        path: {boardIdx: boardIdx},\n        data: {status: \"INACTIVE\"}\n      })\n\n      if (!res.isSuccess) {\n        alert(res.message)\n        return\n      }\n\n      alert(\"게시물 삭제에 성공하였습니다.\")\n      history.push(\"/boards\")\n    } catch (error) {\n      console.log(error)\n      alert(\"네트워크 통신 실패. 잠시후 다시 시도해주세요.\")\n    }\n  }\n\n  // 뒤로가기 버튼 onClick\n  function onBackButtonClick() {\n    history.push(`/boards`)\n  }\n\n  // 수정 버튼 onClick\n  function onPatchButtonClick() {\n    if (!isEditing) {\n      setIdEditing(true)\n      return\n    }\n\n    if (isEmpty(title.trim())) {\n      alert(\"제목을 입력해주세요.\")\n    }\n    if (isEmpty(contents.trim())) {\n      alert(\"내용을 입력해주세요.\")\n    }\n\n    const parameters = {\n      title: title,\n      contents: contents,\n      imageUrls: imageURLs\n    }\n    patchBoard(parameters).then()\n  }\n\n  // 삭제 버튼 onClick\n  function onDeleteButtonClick() {\n    if (window.confirm(\"정말로 삭제하시겠습니까?\")) {\n      patchBoardStatus(boardIdx).then(() => {})\n    }\n  }\n\n  // 이미지 추가 onClick\n  function onImageChange(input) {\n    setImageURLs(() => [])\n    input.target.files.forEach( (file, index) => {\n      handleFirebaseUpload(\"boards\", `${new Date().getTime()}_${index}_${file.name}`, file).then(url => {\n        setImageURLs(imageURLs => [...imageURLs, url].sort())\n      })\n    })\n  }\n\n  return (\n    <CCol>\n      <CCard>\n        <CCardBody>\n          <div className=\"form-group\">\n            <TextCell\n              label=\"게시물 고유번호\"\n              value={boardIdx}/>\n            <TextCell\n              label=\"사용자 고유번호\"\n              value={userIdx}/>\n            <TextCell\n              label=\"제목\"\n              placeholder=\"제목을 입력해주세요\"\n              value={title}\n              onChange={isEditing ? e => setTitle(e.target.value) : null}/>\n            <TextareaCell\n              label=\"내용\"\n              placeholder=\"내용을 입력해주세요\"\n              value={contents}\n              onChange={isEditing ? e => setContents(e.target.value) : null}/>\n            <ImageCell\n              multiple\n              label=\"이미지\"\n              src={imageURLs}\n              onChange={isEditing ? onImageChange : null}\n            />\n          </div>\n        </CCardBody>\n      </CCard>\n      <BottomButtons\n        onBackClick={onBackButtonClick}\n        onPatchClick={onPatchButtonClick}\n        onDeleteClick={onDeleteButtonClick}\n        patchLabel={isEditing ? \"수정완료\" : \"수정하기\"}\n      />\n    </CCol>\n  )\n}\n\nexport default Board\n","import { CButton, CCol, CRow } from '@coreui/react';\nimport React from 'react';\n\n// 뒤로가기 버튼\nconst BackButton = (props) => {\n    const { label, onClick } = props;\n\n    return (\n        <CButton color=\"success\" shape=\"square\" size=\"m\" onClick={onClick}>\n            {label || '뒤로가기'}\n        </CButton>\n    );\n};\n\n// 취소 버튼\nconst CancleButton = (props) => {\n    const { label, onClick } = props;\n\n    return (\n        <CButton color=\"danger\" shape=\"square\" size=\"m\" onClick={onClick}>\n            {label || '예약 취소'}\n        </CButton>\n    );\n};\n\n// 승인 버튼\nconst RegistButton = (props) => {\n    const { label, onClick } = props;\n\n    return (\n        <CButton color=\"success\" shape=\"square\" size=\"m\" onClick={onClick}>\n            {label || '예약 승인'}\n        </CButton>\n    );\n};\n\n// 닫기 버튼\nconst CloseButton = (props) => {\n    const { label, onClick } = props;\n\n    return (\n        <CButton color=\"success\" shape=\"square\" size=\"m\" onClick={onClick}>\n            {label || '닫기'}\n        </CButton>\n    );\n};\n\n// 추가하기 버튼\nconst PostButton = (props) => {\n    const { label, onClick } = props;\n\n    return (\n        <CButton color=\"success\" shape=\"square\" size=\"m\" onClick={onClick}>\n            {label || '프로그램 추가하기'}\n        </CButton>\n    );\n};\n\n// 가격 추가하기 버튼\nconst RoomPostButton = (props) => {\n    const { label, onClick } = props;\n\n    return (\n        <CButton color=\"success\" shape=\"square\" size=\"m\" onClick={onClick}>\n            {label || '추가하기'}\n        </CButton>\n    );\n};\n\n// 수정하기 버튼\nconst PatchButton = (props) => {\n    const { label, onClick } = props;\n\n    return (\n        <CButton color=\"primary\" shape=\"square\" size=\"m\" onClick={onClick}>\n            {label || '수정하기'}\n        </CButton>\n    );\n};\n\n// 삭제하기 버튼\nconst DeleteButton = (props) => {\n    const { label, onClick } = props;\n\n    return (\n        <CButton color=\"danger\" shape=\"square\" size=\"m\" onClick={onClick}>\n            {label || '삭제하기'}\n        </CButton>\n    );\n};\n\n// 하단 버튼 모듈\nconst BottomButtons = (props) => {\n    const {\n        onCancleClick,\n        onRegistClick,\n        onBackClick,\n        onPostClick,\n        onPatchClick,\n        onDeleteClick,\n        backLabel,\n        postLabel,\n        patchLabel,\n        deleteLabel,\n        cancleLabel,\n        registLabel,\n        RoomPostLabel,\n        onCloseClick,\n        onRoomPostClick,\n    } = props;\n\n    return (\n        <CRow>\n            {onBackClick ? (\n                <CCol align=\"left\">\n                    <BackButton label={backLabel} onClick={onBackClick} />\n                </CCol>\n            ) : (\n                <p />\n            )}\n            {onCloseClick ? (\n                <CCol align=\"left\">\n                    <CloseButton label={backLabel} onClick={onCloseClick} />\n                </CCol>\n            ) : (\n                <p />\n            )}\n            <CCol align=\"right\">\n                {onRoomPostClick && (\n                    <RoomPostButton label={RoomPostLabel} onClick={onRoomPostClick} />\n                )}\n                &nbsp;&nbsp;\n                {onRegistClick && <RegistButton label={registLabel} onClick={onRegistClick} />}\n                &nbsp;&nbsp;\n                {onCancleClick && <CancleButton label={cancleLabel} onClick={onCancleClick} />}\n                &nbsp;&nbsp;\n                {onPostClick && <PostButton label={postLabel} onClick={onPostClick} />}\n                &nbsp;&nbsp;\n                {onPatchClick && <PatchButton label={patchLabel} onClick={onPatchClick} />}\n                &nbsp;&nbsp;\n                {onDeleteClick && <DeleteButton label={deleteLabel} onClick={onDeleteClick} />}\n            </CCol>\n            <br />\n            <br />\n            <br />\n        </CRow>\n    );\n};\n\nexport default BottomButtons;\n","import React from \"react\"\nimport {CCol, CFormGroup, CInput, CLabel} from \"@coreui/react\"\n\nconst TextCell = props => {\n\tconst {type, label, placeholder, value, onChange} = props\n\n\treturn (\n\t\t<CFormGroup row>\n\t\t\t<CCol md=\"2\" align=\"right\">\n\t\t\t\t<CLabel htmlFor=\"text-input\">{label}</CLabel>\n\t\t\t</CCol>\n\t\t\t<CCol>\n\t\t\t\t<CInput\n          type={type || \"text\"}\n          autoComplete={type === \"password\" ? \"on\" : \"off\"}\n\t\t\t\t\tdisabled={!onChange}\n\t\t\t\t\tplaceholder={placeholder}\n\t\t\t\t\tvalue={value || \"\"}\n\t\t\t\t\tonChange={onChange}\n\t\t\t\t/>\n\t\t\t</CCol>\n    </CFormGroup>\n\t)\n}\n\nexport default TextCell\n","export const firebaseConfig = {\n    apiKey: 'AIzaSyAc5JubmtbofQUZ-3cLmq9oWGjysVUdtRQ',\n    authDomain: 'formestay-21-71170.firebaseapp.com',\n    projectId: 'formestay-21-71170',\n    storageBucket: 'formestay-21-71170.appspot.com',\n    messagingSenderId: '127128062403',\n    appId: '1:127128062403:web:d54bd60b7c0f90b6415576',\n    measurementId: 'G-1H3NF6W7VM',\n};\n","import firebase from 'firebase';\nimport { firebaseConfig } from './configFirebase';\n\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\nexport const db = firebase.database();\nexport const storage = firebase.storage();\n\nexport function handleFirebaseUpload(path, filename, file) {\n    return new Promise(function (resolve, reject) {\n        const uploadTask = storage.ref(`${path}/${filename}`).put(file);\n        uploadTask.on(\n            'state_changed',\n            () => {},\n            (error) => {\n                console.log(error);\n                reject();\n            },\n            () => {\n                storage\n                    .ref(`${path}`)\n                    .child(filename)\n                    .getDownloadURL()\n                    .then((url) => {\n                        resolve(url);\n                    });\n            },\n        );\n    });\n}\n","import React from 'react';\nimport { CCol, CFormGroup, CLabel, CTextarea } from '@coreui/react';\n\nconst TextareaCell = (props) => {\n    const { label, placeholder, value, onChange } = props;\n\n    return (\n        <CFormGroup row>\n            <CCol md=\"2\" align=\"right\">\n                <CLabel htmlFor=\"text-input\">{label}</CLabel>\n            </CCol>\n            <CCol>\n                <CTextarea\n                    rows=\"10\"\n                    disabled={!onChange}\n                    placeholder={placeholder}\n                    value={value}\n                    onChange={onChange}\n                />\n            </CCol>\n        </CFormGroup>\n    );\n};\n\nexport default TextareaCell;\n","import React from \"react\"\nimport {CCol, CFormGroup, CImg, CInputFile, CLabel, CSpinner} from \"@coreui/react\"\n\nconst ImageCell = props => {\n\tconst {multiple, label, src, isLoading, onChange} = props\n\n\treturn (\n\t\t<CFormGroup row>\n\t\t\t<CCol md=\"2\" align=\"right\">\n\t\t\t\t<CLabel htmlFor=\"text-input\">{label}</CLabel>\n\t\t\t</CCol>\n\t\t\t<CCol>\n\t\t\t\t{onChange && <>\n          <CInputFile multiple={multiple || false} accept=\"image/*\" onChange={onChange}/>\n          <br/>\n        </>}\n        {multiple\n          ? src.map((imageURL, index) => (\n            <CImg key={`image_${index}`} src={imageURL} height=\"150\" fluid/>\n          ))\n          : isLoading\n            ? <CSpinner style={{width: 120, height: 120}}/>\n            : <CImg src={src} height=\"150\" fluid/>\n        }\n\t\t\t</CCol>\n\t\t</CFormGroup>\n\t)\n}\n\nexport default ImageCell\n"],"sourceRoot":""}