{"version":3,"sources":["views/admin/AddAdmin.js","views/component/Button.js","views/component/cell/TextCell.js"],"names":["AddAdmin","history","useHistory","useState","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","nickname","setNickname","phoneNumber","setPhoneNumber","enterpriseId","setEnterpriseId","parameters","a","TempAdminApi","request","method","HttpMethod","POST","url","EndPoint","POST_ADMIN","data","res","isSuccess","alert","message","push","console","log","useEffect","GET","GET_STATUS","isEmpty","result","status","getEnterprise","then","className","label","placeholder","value","onChange","e","target","type","onAdminClick","trim","isValidEmail","isValidPhoneNumber","window","confirm","postAdmin","BackButton","props","onClick","color","shape","size","CancleButton","AdminButton","RegistButton","CloseButton","PostButton","RoomPostButton","PatchButton","DeleteButton","BottomButtons","onCancleClick","onRegistClick","onBackClick","onPostClick","onPatchClick","onDeleteClick","backLabel","postLabel","adminLabel","patchLabel","deleteLabel","cancleLabel","registLabel","RoomPostLabel","onCloseClick","onRoomPostClick","align","TextCell","row","md","htmlFor","autoComplete","disabled"],"mappings":"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","file":"static/js/21.fef9a890.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { CCard, CCardBody, CCol } from '@coreui/react';\nimport TempAdminApi, { EndPoint, HttpMethod } from '../../constant/TempAdminApi';\nimport { isEmpty, isValidEmail, isValidPhoneNumber } from '../../utils/common/commonFunction';\nimport { useHistory } from 'react-router-dom';\nimport TextCell from '../component/cell/TextCell';\nimport BottomButtons from '../component/Button';\n\nconst AddAdmin = () => {\n    const history = useHistory();\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const [confirmPassword, setConfirmPassword] = useState('');\n    const [nickname, setNickname] = useState('');\n    const [phoneNumber, setPhoneNumber] = useState('');\n    const [enterpriseId, setEnterpriseId] = useState(null);\n\n    // 업체 상세 조회 API 요청\n    useEffect(() => {\n        const getEnterprise = async () => {\n            try {\n                const { data: res } = await TempAdminApi.request({\n                    method: HttpMethod.GET,\n                    url: EndPoint.GET_STATUS,\n                });\n                if (!res?.isSuccess || isEmpty(res?.result) || res.result.status != 0) {\n                    alert('관리자만 관계자를 추가할 수 있습니다.');\n                    history.push('/users');\n                    return;\n                }\n            } catch (error) {\n                console.log(error);\n                alert('네트워크 통신 실패. 잠시후 다시 시도해주세요.');\n                history.push('/users');\n            }\n        };\n\n        getEnterprise().then();\n    }, []);\n    // 관리자 추가 API 요청\n    async function postAdmin(parameters) {\n        try {\n            const { data: res } = await TempAdminApi.request({\n                method: HttpMethod.POST,\n                url: EndPoint.POST_ADMIN,\n                data: parameters,\n            });\n\n            if (!res?.isSuccess) {\n                alert(res.message);\n                return;\n            }\n\n            alert('관계자 추가에 성공하였습니다.');\n            history.push('/users');\n        } catch (error) {\n            console.log(error);\n            alert('네트워크 통신 실패. 잠시후 다시 시도해주세요.');\n        }\n    }\n\n    // 추가 버튼 onClick\n    function onPostButtonClick() {\n        if (isEmpty(email.trim())) {\n            alert('이메일을 입력해주세요.');\n            return;\n        }\n        if (!isValidEmail(email.trim())) {\n            alert('이메일 형식을 확인해주세요.');\n            return;\n        }\n        if (isEmpty(password)) {\n            alert('비밀번호를 입력해주세요.');\n            return;\n        }\n        if (isEmpty(confirmPassword)) {\n            alert('비밀번호 확인을 입력해주세요.');\n            return;\n        }\n        if (password !== confirmPassword) {\n            alert('비밀번호가 일치하지 않습니다.');\n            return;\n        }\n        if (isEmpty(nickname.trim())) {\n            alert('닉네임을 입력해주세요.');\n            return;\n        }\n        if (!isEmpty(phoneNumber.trim()) && !isValidPhoneNumber(phoneNumber.trim())) {\n            alert('전화번호 형식을 확인해주세요.');\n            return;\n        }\n        if (isEmpty(enterpriseId)) {\n            alert('업체 고유번호를 입력해주세요.');\n            return;\n        }\n        if (window.confirm('추가하시겠습니까?')) {\n            const parameters = {\n                email: email.trim(),\n                password: password,\n                confirmPassword: confirmPassword,\n                nickname: nickname.trim(),\n                phoneNumber: phoneNumber.trim(),\n                enterpriseId: enterpriseId,\n            };\n            postAdmin(parameters).then();\n        }\n    }\n\n    return (\n        <CCol>\n            <CCard>\n                <CCardBody>\n                    <div className=\"form-group\">\n                        <TextCell\n                            label=\"이메일\"\n                            placeholder=\"이메일 주소를 입력해주세요\"\n                            value={email}\n                            onChange={(e) => setEmail(e.target.value)}\n                        />\n                        <TextCell\n                            type=\"password\"\n                            label=\"비밀번호\"\n                            placeholder=\"비밀번호를 입력해주세요\"\n                            value={password}\n                            onChange={(e) => setPassword(e.target.value)}\n                        />\n                        <TextCell\n                            type=\"password\"\n                            label=\"비밀번호 확인\"\n                            placeholder=\"비밀번호를 한번 더 입력해주세요\"\n                            value={confirmPassword}\n                            onChange={(e) => setConfirmPassword(e.target.value)}\n                        />\n                        <TextCell\n                            label=\"닉네임\"\n                            placeholder=\"닉네임을 입력해주세요\"\n                            value={nickname}\n                            onChange={(e) => setNickname(e.target.value)}\n                        />\n                        <TextCell\n                            label=\"전화번호\"\n                            placeholder=\"전화번호를 입력해주세요\"\n                            value={phoneNumber}\n                            onChange={(e) => setPhoneNumber(e.target.value)}\n                        />\n                        <TextCell\n                            label=\"업체 고유번호\"\n                            placeholder=\"업체 고유번호를 입력해주세요\"\n                            value={enterpriseId}\n                            onChange={(e) => setEnterpriseId(e.target.value)}\n                        />\n                    </div>\n                </CCardBody>\n            </CCard>\n            <BottomButtons onAdminClick={onPostButtonClick} />\n        </CCol>\n    );\n};\n\nexport default AddAdmin;\n","import { CButton, CCol, CRow } from '@coreui/react';\nimport React from 'react';\n\n// 뒤로가기 버튼\nconst BackButton = (props) => {\n    const { label, onClick } = props;\n\n    return (\n        <CButton color=\"success\" shape=\"square\" size=\"m\" onClick={onClick}>\n            {label || '뒤로가기'}\n        </CButton>\n    );\n};\n\n// 취소 버튼\nconst CancleButton = (props) => {\n    const { label, onClick } = props;\n\n    return (\n        <CButton color=\"danger\" shape=\"square\" size=\"m\" onClick={onClick}>\n            {label || '예약 취소'}\n        </CButton>\n    );\n};\n\n// 관리자 추가 버튼\nconst AdminButton = (props) => {\n    const { label, onClick } = props;\n\n    return (\n        <CButton color=\"success\" shape=\"square\" size=\"m\" onClick={onClick}>\n            {label || '추가하기'}\n        </CButton>\n    );\n};\n\n// 승인 버튼\nconst RegistButton = (props) => {\n    const { label, onClick } = props;\n\n    return (\n        <CButton color=\"success\" shape=\"square\" size=\"m\" onClick={onClick}>\n            {label || '예약 승인'}\n        </CButton>\n    );\n};\n\n// 닫기 버튼\nconst CloseButton = (props) => {\n    const { label, onClick } = props;\n\n    return (\n        <CButton color=\"success\" shape=\"square\" size=\"m\" onClick={onClick}>\n            {label || '닫기'}\n        </CButton>\n    );\n};\n\n// 추가하기 버튼\nconst PostButton = (props) => {\n    const { label, onClick } = props;\n\n    return (\n        <CButton color=\"success\" shape=\"square\" size=\"m\" onClick={onClick}>\n            {label || '프로그램 추가하기'}\n        </CButton>\n    );\n};\n\n// 가격 추가하기 버튼\nconst RoomPostButton = (props) => {\n    const { label, onClick } = props;\n\n    return (\n        <CButton color=\"success\" shape=\"square\" size=\"m\" onClick={onClick}>\n            {label || '추가하기'}\n        </CButton>\n    );\n};\n\n// 수정하기 버튼\nconst PatchButton = (props) => {\n    const { label, onClick } = props;\n\n    return (\n        <CButton color=\"primary\" shape=\"square\" size=\"m\" onClick={onClick}>\n            {label || '수정하기'}\n        </CButton>\n    );\n};\n\n// 삭제하기 버튼\nconst DeleteButton = (props) => {\n    const { label, onClick } = props;\n\n    return (\n        <CButton color=\"danger\" shape=\"square\" size=\"m\" onClick={onClick}>\n            {label || '삭제하기'}\n        </CButton>\n    );\n};\n\n// 하단 버튼 모듈\nconst BottomButtons = (props) => {\n    const {\n        onAdminClick,\n        onCancleClick,\n        onRegistClick,\n        onBackClick,\n        onPostClick,\n        onPatchClick,\n        onDeleteClick,\n        backLabel,\n        postLabel,\n        adminLabel,\n        patchLabel,\n        deleteLabel,\n        cancleLabel,\n        registLabel,\n        RoomPostLabel,\n        onCloseClick,\n        onRoomPostClick,\n    } = props;\n\n    return (\n        <CRow>\n            {onBackClick ? (\n                <CCol align=\"left\">\n                    <BackButton label={backLabel} onClick={onBackClick} />\n                </CCol>\n            ) : (\n                <p />\n            )}\n            {onCloseClick ? (\n                <CCol align=\"left\">\n                    <CloseButton label={backLabel} onClick={onCloseClick} />\n                </CCol>\n            ) : (\n                <p />\n            )}\n            <CCol align=\"right\">\n                {onRegistClick && <RegistButton label={registLabel} onClick={onRegistClick} />}\n                &nbsp;&nbsp;\n                {onCancleClick && <CancleButton label={cancleLabel} onClick={onCancleClick} />}\n                &nbsp;&nbsp;\n                {onPostClick && <PostButton label={postLabel} onClick={onPostClick} />}\n                &nbsp;&nbsp;\n                {onAdminClick && <AdminButton label={adminLabel} onClick={onAdminClick} />}\n                &nbsp;&nbsp;\n                {onPatchClick && <PatchButton label={patchLabel} onClick={onPatchClick} />}\n                &nbsp;&nbsp;\n                {onRoomPostClick && (\n                    <RoomPostButton label={RoomPostLabel} onClick={onRoomPostClick} />\n                )}\n                {onDeleteClick && <DeleteButton label={deleteLabel} onClick={onDeleteClick} />}\n            </CCol>\n            <br />\n            <br />\n            <br />\n        </CRow>\n    );\n};\n\nexport default BottomButtons;\n","import React from \"react\"\nimport {CCol, CFormGroup, CInput, CLabel} from \"@coreui/react\"\n\nconst TextCell = props => {\n\tconst {type, label, placeholder, value, onChange} = props\n\n\treturn (\n\t\t<CFormGroup row>\n\t\t\t<CCol md=\"2\" align=\"right\">\n\t\t\t\t<CLabel htmlFor=\"text-input\">{label}</CLabel>\n\t\t\t</CCol>\n\t\t\t<CCol>\n\t\t\t\t<CInput\n          type={type || \"text\"}\n          autoComplete={type === \"password\" ? \"on\" : \"off\"}\n\t\t\t\t\tdisabled={!onChange}\n\t\t\t\t\tplaceholder={placeholder}\n\t\t\t\t\tvalue={value || \"\"}\n\t\t\t\t\tonChange={onChange}\n\t\t\t\t/>\n\t\t\t</CCol>\n    </CFormGroup>\n\t)\n}\n\nexport default TextCell\n"],"sourceRoot":""}