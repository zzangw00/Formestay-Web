{"version":3,"sources":["views/programs/AddProgram.js","views/component/Button.js","views/component/cell/TextCell.js","utils/firebase/configFirebase.js","utils/firebase/uploadFirebase.js","views/component/cell/TextareaCell.js"],"names":["MyBlock","styled","div","AddProgram","match","history","useHistory","useState","params","enterpriseId","name","setName","description","setDescription","tag","setTag","checkIn","setCheckIn","checkOut","setCheckOut","EditorState","createEmpty","programInfo","setProgramInfo","mealInfo","setMealInfo","thumbnailURL","setThumbnailURL","setFile","parameters","a","TempAdminApi","request","method","HttpMethod","POST","url","EndPoint","POST_PROGRAM","data","res","isSuccess","alert","message","go","console","log","delimiters","handleDelete","useCallback","i","filter","onetag","index","handleAddition","oneTag","onFileChange","event","previewImage","document","getElementById","theFile","target","files","reader","FileReader","onload","e","setAttribute","result","readAsDataURL","handleFirebaseUpload","firebaseURL","class","id","src","alt","width","height","className","label","placeholder","value","onChange","row","md","align","style","marginLeft","tags","suggestions","inline","type","wrapperClassName","editorClassName","toolbarClassName","toolbar","list","inDropdown","textAlign","link","localization","locale","editorState","onEditorStateChange","accept","onPostClick","length","text","substring","programInfoToHtml","draftToHtml","convertToRaw","getCurrentContent","mealInfoToHtml","isEmpty","trim","window","confirm","postProgram","then","onBackClick","push","BackButton","props","onClick","color","shape","size","CancleButton","RegistButton","CloseButton","PostButton","RoomPostButton","PatchButton","DeleteButton","BottomButtons","onCancleClick","onRegistClick","onPatchClick","onDeleteClick","backLabel","postLabel","patchLabel","deleteLabel","cancleLabel","registLabel","RoomPostLabel","onCloseClick","onRoomPostClick","TextCell","htmlFor","autoComplete","disabled","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firebase","initializeApp","database","storage","path","filename","file","Promise","resolve","reject","ref","put","on","error","child","getDownloadURL","TextareaCell","rows"],"mappings":"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","file":"static/js/15.7b4de89d.chunk.js","sourcesContent":["import React, { useState, useCallback } from 'react';\nimport { CCard, CCardBody, CCol, CRow, CFormGroup } from '@coreui/react';\nimport TempAdminApi, { EndPoint, HttpMethod } from '../../constant/TempAdminApi';\nimport { isEmpty, isValidPhoneNumber } from '../../utils/common/commonFunction';\nimport { useHistory } from 'react-router-dom';\nimport { handleFirebaseUpload } from '../../utils/firebase/uploadFirebase';\nimport TextCell from '../component/cell/TextCell';\nimport TextareaCell from '../component/cell/TextareaCell';\nimport BottomButtons from '../component/Button';\nimport { WithContext as ReactTags } from 'react-tag-input';\nimport tagStyles from '../../scss/tag.scss';\nimport { program } from '@babel/types';\nimport { Editor } from 'react-draft-wysiwyg';\nimport { EditorState, convertToRaw, ContentState } from 'draft-js';\nimport htmlToDraft from 'html-to-draftjs';\nimport draftToHtml from 'draftjs-to-html';\nimport styled from 'styled-components';\n\nconst MyBlock = styled.div`\n    .wrapper-class {\n        width: 100%;\n        margin: 0 auto;\n        margin-bottom: 4rem;\n    }\n    .editor {\n        height: 500px !important;\n        border: 1px solid #f1f1f1 !important;\n        padding: 5px !important;\n        border-radius: 2px !important;\n    }\n`;\n\nconst IntroduceContent = styled.div`\n    position: relative;\n    border: 0.0625rem solid #d7e2eb;\n    border-radius: 0.75rem;\n    overflow: hidden;\n    padding: 1.5rem;\n    width: 50%;\n    margin: 0 auto;\n    margin-bottom: 4rem;\n`;\nconst AddProgram = ({ match }) => {\n    const history = useHistory();\n    const [enterpriseId] = useState(match.params.enterpriseId);\n    const [name, setName] = useState('');\n    const [description, setDescription] = useState('');\n    const [tag, setTag] = useState([]);\n    const [checkIn, setCheckIn] = useState('');\n    const [checkOut, setCheckOut] = useState('');\n    const [programInfo, setProgramInfo] = useState(EditorState.createEmpty());\n    const [mealInfo, setMealInfo] = useState(EditorState.createEmpty());\n    const [thumbnailURL, setThumbnailURL] = useState('');\n    const [file, setFile] = useState(null);\n\n    // 프로그램 추가 API 요청\n    async function postProgram(parameters) {\n        try {\n            const { data: res } = await TempAdminApi.request({\n                method: HttpMethod.POST,\n                url: EndPoint.POST_PROGRAM,\n                data: parameters,\n            });\n\n            if (!res?.isSuccess) {\n                alert(res.message);\n                return;\n            }\n\n            alert('프로그램 추가에 성공하였습니다.');\n            history.go(0);\n        } catch (error) {\n            console.log(error);\n            alert('네트워크 통신 실패. 잠시후 다시 시도해주세요.');\n        }\n    }\n\n    // 추가 버튼 onClick\n    function onPostButtonClick() {\n        let tags = '';\n        for (let i = 0; i < tag.length; i++) {\n            tags += tag[i].text;\n            tags += '|';\n        }\n        tags = tags.substring(0, tags.length - 1);\n        const programInfoToHtml = draftToHtml(convertToRaw(programInfo.getCurrentContent()));\n        const mealInfoToHtml = draftToHtml(convertToRaw(mealInfo.getCurrentContent()));\n        if (isEmpty(name.trim())) {\n            alert('프로그램명을 입력해주세요.');\n            return;\n        }\n        if (isEmpty(description.trim())) {\n            alert('설명을 입력해주세요.');\n            return;\n        }\n        if (isEmpty(tags.trim())) {\n            alert('태그를 입력해주세요.');\n            return;\n        }\n        if (isEmpty(thumbnailURL.trim())) {\n            alert('이미지를 입력해주세요.');\n            return;\n        }\n        if (isEmpty(checkIn.trim())) {\n            alert('체크인 시간을 입력해주세요.');\n            return;\n        }\n        if (isEmpty(checkOut.trim())) {\n            alert('체크아웃 시간을 입력해주세요.');\n            return;\n        }\n        if (isEmpty(programInfo)) {\n            alert('프로그램 설명을 입력해주세요.');\n            return;\n        }\n        if (isEmpty(mealInfo)) {\n            alert('식단 설명을 입력해주세요.');\n            return;\n        }\n        if (window.confirm('추가하시겠습니까?')) {\n            const parameters = {\n                enterpriseId: enterpriseId,\n                name: name.trim(),\n                description: description.trim(),\n                tag: tags.trim(),\n                thumbnailURL: thumbnailURL.trim(),\n                checkIn: checkIn.trim(),\n                checkOut: checkOut.trim(),\n                programInfo: programInfoToHtml,\n                mealInfo: mealInfoToHtml,\n            };\n            postProgram(parameters).then();\n        }\n    }\n\n    const KeyCodes = {\n        comma: 188,\n        enter: 13,\n    };\n\n    const delimiters = [KeyCodes.comma, KeyCodes.enter];\n\n    const handleDelete = useCallback(\n        (i) => {\n            setTag(tag.filter((onetag, index) => index !== i));\n        },\n        [tag],\n    );\n\n    const handleAddition = useCallback(\n        (oneTag) => {\n            // let jsonData = new Object()\n            // jsonData.id = tag.length + 1\n            // jsonData.text = oneTag\n            // let testTag = jsonData\n            setTag([...tag, oneTag]);\n        },\n        [tag],\n    );\n\n    const onFileChange = useCallback(async (event) => {\n        const previewImage = document.getElementById('thumbnailImg');\n        // const {\n        //     target: { files, value },\n        // } = event;\n        const theFile = event.target.files[0];\n        let reader = new FileReader();\n        setFile(event.target.files[0]);\n        reader.onload = (e) => {\n            previewImage.setAttribute('src', e.target.result);\n        };\n        reader.readAsDataURL(theFile);\n        let firebaseURL = await handleFirebaseUpload(\n            'program',\n            theFile.name,\n            event.target.files[0],\n        );\n        setThumbnailURL(firebaseURL);\n    }, []);\n\n    function onChangecheckOut(e) {\n        setCheckOut(e.target.value);\n    }\n    function onChangecheckIn(e) {\n        setCheckIn(e.target.value);\n    }\n    function onProgramInfoChange(e) {\n        setProgramInfo(e);\n    }\n    function onMealInfoChange(e) {\n        setMealInfo(e);\n    }\n\n    // 뒤로가기 버튼 onClick\n    function onBackButtonClick() {\n        history.push(`/enterprises`);\n    }\n\n    return (\n        <CRow>\n            <CCol>\n                <CCard>\n                    <CCardBody>\n                        <p>\n                            <div class=\"text-center\">\n                                <img\n                                    id=\"thumbnailImg\"\n                                    src={thumbnailURL}\n                                    alt=\"\"\n                                    class=\"img-thumbnail\"\n                                    width=\"300px\"\n                                    height=\"300px\"\n                                ></img>\n                            </div>\n                        </p>\n                        <div className=\"form-group\">\n                            <TextCell\n                                label=\"프로그램명\"\n                                placeholder=\"프로그램명을 입력해주세요\"\n                                value={name}\n                                onChange={(e) => setName(e.target.value)}\n                            />\n                            <TextareaCell\n                                label=\"설명\"\n                                placeholder=\"설명을 입력해주세요\"\n                                value={description}\n                                onChange={(e) => setDescription(e.target.value)}\n                            />\n                            <TextCell label=\"가격 정보\" placeholder=\"수정하기를 통해 넣어주세요\" />\n                            <CFormGroup row>\n                                <CCol md=\"2\" align=\"right\">\n                                    <label name=\"tag\">태그</label>\n                                </CCol>\n                                <div className=\"app\" style={{ marginLeft: '15px' }}>\n                                    <ReactTags\n                                        tags={tag}\n                                        suggestions={tag}\n                                        inline\n                                        handleDelete={handleDelete}\n                                        handleAddition={handleAddition}\n                                        delimiters={delimiters}\n                                        placeholder=\"입력후 엔터 눌러주세요.\"\n                                    />\n                                </div>\n                            </CFormGroup>\n                            <CFormGroup row>\n                                <CCol md=\"2\" align=\"right\">\n                                    <label name=\"tag\">체크인 시간</label>\n                                </CCol>\n                                <div className=\"app\" style={{ marginLeft: '15px' }}>\n                                    <input\n                                        type=\"time\"\n                                        id=\"checkInInput\"\n                                        onChange={onChangecheckIn}\n                                    />\n                                </div>\n                            </CFormGroup>\n                            <CFormGroup row>\n                                <CCol md=\"2\" align=\"right\">\n                                    <label name=\"tag\">체크아웃 시간</label>\n                                </CCol>\n                                <div className=\"app\" style={{ marginLeft: '15px' }}>\n                                    <input\n                                        type=\"time\"\n                                        id=\"checkOutInput\"\n                                        onChange={onChangecheckOut}\n                                    />\n                                </div>\n                            </CFormGroup>\n                            <CFormGroup row>\n                                <CCol md=\"2\" align=\"right\">\n                                    <label name=\"tag\">프로그램 정보</label>\n                                </CCol>\n                                <div className=\"app\" style={{ marginLeft: '15px' }}>\n                                    <MyBlock>\n                                        <Editor\n                                            // 에디터와 툴바 모두에 적용되는 클래스\n                                            wrapperClassName=\"wrapper-class\"\n                                            // 에디터 주변에 적용된 클래스\n                                            editorClassName=\"editor\"\n                                            // 툴바 주위에 적용된 클래스\n                                            toolbarClassName=\"toolbar-class\"\n                                            // 툴바 설정\n                                            toolbar={{\n                                                // inDropdown: 해당 항목과 관련된 항목을 드롭다운으로 나타낼것인지\n                                                list: { inDropdown: true },\n                                                textAlign: { inDropdown: true },\n                                                link: { inDropdown: true },\n                                                history: { inDropdown: false },\n                                            }}\n                                            placeholder=\"내용을 작성해주세요.\"\n                                            // 한국어 설정\n                                            localization={{\n                                                locale: 'ko',\n                                            }}\n                                            // 초기값 설정\n                                            editorState={programInfo}\n                                            // 에디터의 값이 변경될 때마다 onEditorStateChange 호출\n                                            onEditorStateChange={onProgramInfoChange}\n                                        />\n                                    </MyBlock>\n                                </div>\n                            </CFormGroup>\n                            <CFormGroup row>\n                                <CCol md=\"2\" align=\"right\">\n                                    <label name=\"tag\">식단 정보</label>\n                                </CCol>\n                                <div className=\"app\" style={{ marginLeft: '15px' }}>\n                                    <MyBlock>\n                                        <Editor\n                                            // 에디터와 툴바 모두에 적용되는 클래스\n                                            wrapperClassName=\"wrapper-class\"\n                                            // 에디터 주변에 적용된 클래스\n                                            editorClassName=\"editor\"\n                                            // 툴바 주위에 적용된 클래스\n                                            toolbarClassName=\"toolbar-class\"\n                                            // 툴바 설정\n                                            toolbar={{\n                                                // inDropdown: 해당 항목과 관련된 항목을 드롭다운으로 나타낼것인지\n                                                list: { inDropdown: true },\n                                                textAlign: { inDropdown: true },\n                                                link: { inDropdown: true },\n                                                history: { inDropdown: false },\n                                            }}\n                                            placeholder=\"내용을 작성해주세요.\"\n                                            // 한국어 설정\n                                            localization={{\n                                                locale: 'ko',\n                                            }}\n                                            // 초기값 설정\n                                            editorState={mealInfo}\n                                            // 에디터의 값이 변경될 때마다 onEditorStateChange 호출\n                                            onEditorStateChange={onMealInfoChange}\n                                        />\n                                    </MyBlock>\n                                </div>\n                            </CFormGroup>\n                            <CFormGroup row>\n                                <CCol md=\"2\" align=\"right\">\n                                    <label name=\"thumbnailImg\">썸네일 이미지</label>\n                                </CCol>\n                                <div style={{ marginLeft: '15px' }}>\n                                    <input type=\"file\" accept=\"image/*\" onChange={onFileChange} />\n                                </div>\n                            </CFormGroup>\n                            <TextCell label=\"이미지\" value=\"프로그램 수정하기를 통해 넣어주세요\" />\n                        </div>\n                    </CCardBody>\n                </CCard>\n                <BottomButtons onPostClick={onPostButtonClick} onBackClick={onBackButtonClick} />\n            </CCol>\n        </CRow>\n    );\n};\n\nexport default AddProgram;\n","import { CButton, CCol, CRow } from '@coreui/react';\nimport React from 'react';\n\n// 뒤로가기 버튼\nconst BackButton = (props) => {\n    const { label, onClick } = props;\n\n    return (\n        <CButton color=\"success\" shape=\"square\" size=\"m\" onClick={onClick}>\n            {label || '뒤로가기'}\n        </CButton>\n    );\n};\n\n// 취소 버튼\nconst CancleButton = (props) => {\n    const { label, onClick } = props;\n\n    return (\n        <CButton color=\"danger\" shape=\"square\" size=\"m\" onClick={onClick}>\n            {label || '예약 취소'}\n        </CButton>\n    );\n};\n\n// 승인 버튼\nconst RegistButton = (props) => {\n    const { label, onClick } = props;\n\n    return (\n        <CButton color=\"success\" shape=\"square\" size=\"m\" onClick={onClick}>\n            {label || '예약 승인'}\n        </CButton>\n    );\n};\n\n// 닫기 버튼\nconst CloseButton = (props) => {\n    const { label, onClick } = props;\n\n    return (\n        <CButton color=\"success\" shape=\"square\" size=\"m\" onClick={onClick}>\n            {label || '닫기'}\n        </CButton>\n    );\n};\n\n// 추가하기 버튼\nconst PostButton = (props) => {\n    const { label, onClick } = props;\n\n    return (\n        <CButton color=\"success\" shape=\"square\" size=\"m\" onClick={onClick}>\n            {label || '프로그램 추가하기'}\n        </CButton>\n    );\n};\n\n// 가격 추가하기 버튼\nconst RoomPostButton = (props) => {\n    const { label, onClick } = props;\n\n    return (\n        <CButton color=\"success\" shape=\"square\" size=\"m\" onClick={onClick}>\n            {label || '추가하기'}\n        </CButton>\n    );\n};\n\n// 수정하기 버튼\nconst PatchButton = (props) => {\n    const { label, onClick } = props;\n\n    return (\n        <CButton color=\"primary\" shape=\"square\" size=\"m\" onClick={onClick}>\n            {label || '수정하기'}\n        </CButton>\n    );\n};\n\n// 삭제하기 버튼\nconst DeleteButton = (props) => {\n    const { label, onClick } = props;\n\n    return (\n        <CButton color=\"danger\" shape=\"square\" size=\"m\" onClick={onClick}>\n            {label || '삭제하기'}\n        </CButton>\n    );\n};\n\n// 하단 버튼 모듈\nconst BottomButtons = (props) => {\n    const {\n        onCancleClick,\n        onRegistClick,\n        onBackClick,\n        onPostClick,\n        onPatchClick,\n        onDeleteClick,\n        backLabel,\n        postLabel,\n        patchLabel,\n        deleteLabel,\n        cancleLabel,\n        registLabel,\n        RoomPostLabel,\n        onCloseClick,\n        onRoomPostClick,\n    } = props;\n\n    return (\n        <CRow>\n            {onBackClick ? (\n                <CCol align=\"left\">\n                    <BackButton label={backLabel} onClick={onBackClick} />\n                </CCol>\n            ) : (\n                <p />\n            )}\n            {onCloseClick ? (\n                <CCol align=\"left\">\n                    <CloseButton label={backLabel} onClick={onCloseClick} />\n                </CCol>\n            ) : (\n                <p />\n            )}\n            <CCol align=\"right\">\n                {onRoomPostClick && (\n                    <RoomPostButton label={RoomPostLabel} onClick={onRoomPostClick} />\n                )}\n                &nbsp;&nbsp;\n                {onRegistClick && <RegistButton label={registLabel} onClick={onRegistClick} />}\n                &nbsp;&nbsp;\n                {onCancleClick && <CancleButton label={cancleLabel} onClick={onCancleClick} />}\n                &nbsp;&nbsp;\n                {onPostClick && <PostButton label={postLabel} onClick={onPostClick} />}\n                &nbsp;&nbsp;\n                {onPatchClick && <PatchButton label={patchLabel} onClick={onPatchClick} />}\n                &nbsp;&nbsp;\n                {onDeleteClick && <DeleteButton label={deleteLabel} onClick={onDeleteClick} />}\n            </CCol>\n            <br />\n            <br />\n            <br />\n        </CRow>\n    );\n};\n\nexport default BottomButtons;\n","import React from \"react\"\nimport {CCol, CFormGroup, CInput, CLabel} from \"@coreui/react\"\n\nconst TextCell = props => {\n\tconst {type, label, placeholder, value, onChange} = props\n\n\treturn (\n\t\t<CFormGroup row>\n\t\t\t<CCol md=\"2\" align=\"right\">\n\t\t\t\t<CLabel htmlFor=\"text-input\">{label}</CLabel>\n\t\t\t</CCol>\n\t\t\t<CCol>\n\t\t\t\t<CInput\n          type={type || \"text\"}\n          autoComplete={type === \"password\" ? \"on\" : \"off\"}\n\t\t\t\t\tdisabled={!onChange}\n\t\t\t\t\tplaceholder={placeholder}\n\t\t\t\t\tvalue={value || \"\"}\n\t\t\t\t\tonChange={onChange}\n\t\t\t\t/>\n\t\t\t</CCol>\n    </CFormGroup>\n\t)\n}\n\nexport default TextCell\n","export const firebaseConfig = {\n    apiKey: 'AIzaSyAc5JubmtbofQUZ-3cLmq9oWGjysVUdtRQ',\n    authDomain: 'formestay-21-71170.firebaseapp.com',\n    projectId: 'formestay-21-71170',\n    storageBucket: 'formestay-21-71170.appspot.com',\n    messagingSenderId: '127128062403',\n    appId: '1:127128062403:web:d54bd60b7c0f90b6415576',\n    measurementId: 'G-1H3NF6W7VM',\n};\n","import firebase from 'firebase';\nimport { firebaseConfig } from './configFirebase';\n\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\nexport const db = firebase.database();\nexport const storage = firebase.storage();\n\nexport function handleFirebaseUpload(path, filename, file) {\n    return new Promise(function (resolve, reject) {\n        const uploadTask = storage.ref(`${path}/${filename}`).put(file);\n        uploadTask.on(\n            'state_changed',\n            () => {},\n            (error) => {\n                console.log(error);\n                reject();\n            },\n            () => {\n                storage\n                    .ref(`${path}`)\n                    .child(filename)\n                    .getDownloadURL()\n                    .then((url) => {\n                        resolve(url);\n                    });\n            },\n        );\n    });\n}\n","import React from 'react';\nimport { CCol, CFormGroup, CLabel, CTextarea } from '@coreui/react';\n\nconst TextareaCell = (props) => {\n    const { label, placeholder, value, onChange } = props;\n\n    return (\n        <CFormGroup row>\n            <CCol md=\"2\" align=\"right\">\n                <CLabel htmlFor=\"text-input\">{label}</CLabel>\n            </CCol>\n            <CCol>\n                <CTextarea\n                    rows=\"10\"\n                    disabled={!onChange}\n                    placeholder={placeholder}\n                    value={value}\n                    onChange={onChange}\n                />\n            </CCol>\n        </CFormGroup>\n    );\n};\n\nexport default TextareaCell;\n"],"sourceRoot":""}