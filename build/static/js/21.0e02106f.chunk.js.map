{"version":3,"sources":["views/boards/BoardsData.js","views/boards/Boards.js","views/component/Button.js","constant/Constants.js","views/component/Badge.js","views/component/Table.js"],"names":["imageUrls","boardsData","boardIdx","userIdx","title","status","Boards","history","useHistory","useState","boards","setBoards","useEffect","a","TempAdminApi","request","method","HttpMethod","GET","url","EndPoint","GET_BOARDS","res","data","isSuccess","isEmpty","result","code","push","alert","message","console","log","getBoards","then","tableFields","key","_classes","label","_style","width","filter","sorter","tableStatusField","align","items","fields","scopedSlots","tableScopedSlots","hover","striped","onRowClick","item","tableFilter","pagination","tablePagination","itemsPerPage","onPostClick","BackButton","props","onClick","color","shape","size","CancleButton","RegistButton","CloseButton","PostButton","RoomPostButton","PatchButton","DeleteButton","BottomButtons","onCancleClick","onRegistClick","onBackClick","onPatchClick","onDeleteClick","backLabel","postLabel","patchLabel","deleteLabel","cancleLabel","registLabel","RoomPostLabel","onCloseClick","onRoomPostClick","getStatusBadgeColor","getDeleteBadgeColor","getSnsIdBadgeColor","snsId","tableEnterpriseAndProgramStatusField","tableSnsIdField","tableStatusScopedSlot","className","style","fontSize","getStatusBadgeText","cellStatusBadge","tableDeleteStatusScopedSlot","getDeleteBadgeText","cellDeleteBadge","tableSnsIdScopedSlot","getSnsIdBadgeText","cellSnsIdBadge","deleteStatus","doubleArrows","placeholder"],"mappings":"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","file":"static/js/21.0e02106f.chunk.js","sourcesContent":["const imageUrls = [\n  \"https://lumiere-a.akamaihd.net/v1/images/ct_frozen_anna_18466_6775584b.jpeg\",\n  \"https://lumiere-a.akamaihd.net/v1/images/ct_frozen_elsa_18466_22a50822.jpeg\",\n  \"https://lumiere-a.akamaihd.net/v1/images/ct_frozen_kristoff_18466_dd7ff541.jpeg\",\n  \"https://lumiere-a.akamaihd.net/v1/images/ct_frozen_sven_18466_49fc954a.jpeg\",\n  \"https://lumiere-a.akamaihd.net/v1/images/ct_frozen_olaf_18466_eabe1344.jpeg\"\n]\n\nconst boardsData = [\n  {boardIdx: 0,  userIdx: 0,  title: \"zero\",   status: \"ACTIVE\",   imageUrls: imageUrls},\n  {boardIdx: 1,  userIdx: 1,  title: \"dory\",   status: \"INACTIVE\", imageUrls: imageUrls},\n  {boardIdx: 2,  userIdx: 2,  title: \"ted\",    status: \"ACTIVE\",   imageUrls: imageUrls},\n  {boardIdx: 3,  userIdx: 3,  title: \"daphne\", status: \"ACTIVE\",   imageUrls: imageUrls},\n  {boardIdx: 4,  userIdx: 4,  title: \"grace\",  status: \"ACTIVE\",   imageUrls: imageUrls},\n  {boardIdx: 5,  userIdx: 5,  title: \"papa\",   status: \"INACTIVE\", imageUrls: imageUrls},\n  {boardIdx: 6,  userIdx: 6,  title: \"yunix\",  status: \"ACTIVE\",   imageUrls: imageUrls},\n  {boardIdx: 7,  userIdx: 7,  title: \"io\",     status: \"ACTIVE\",   imageUrls: imageUrls},\n  {boardIdx: 8,  userIdx: 8,  title: \"radih\",  status: \"ACTIVE\",   imageUrls: imageUrls},\n  {boardIdx: 9,  userIdx: 9,  title: \"cookie\", status: \"ACTIVE\",   imageUrls: imageUrls},\n  {boardIdx: 10, userIdx: 10, title: \"weaver\", status: \"INACTIVE\", imageUrls: imageUrls},\n  {boardIdx: 11, userIdx: 11, title: \"aien\",   status: \"ACTIVE\",   imageUrls: imageUrls},\n  {boardIdx: 12, userIdx: 12, title: \"mary\",   status: \"ACTIVE\",   imageUrls: imageUrls},\n  {boardIdx: 13, userIdx: 13, title: \"haling\", status: \"ACTIVE\",   imageUrls: imageUrls},\n  {boardIdx: 14, userIdx: 14, title: \"zero\",   status: \"ACTIVE\",   imageUrls: imageUrls},\n  {boardIdx: 15, userIdx: 15, title: \"dory\",   status: \"ACTIVE\",   imageUrls: imageUrls},\n  {boardIdx: 16, userIdx: 16, title: \"ted\",    status: \"INACTIVE\", imageUrls: imageUrls},\n  {boardIdx: 17, userIdx: 17, title: \"daphne\", status: \"ACTIVE\",   imageUrls: imageUrls},\n  {boardIdx: 18, userIdx: 18, title: \"grace\",  status: \"ACTIVE\",   imageUrls: imageUrls},\n  {boardIdx: 19, userIdx: 19, title: \"papa\",   status: \"ACTIVE\",   imageUrls: imageUrls},\n  {boardIdx: 20, userIdx: 20, title: \"yunix\",  status: \"ACTIVE\",   imageUrls: imageUrls},\n  {boardIdx: 21, userIdx: 21, title: \"io\",     status: \"INACTIVE\", imageUrls: imageUrls},\n  {boardIdx: 22, userIdx: 22, title: \"radih\",  status: \"ACTIVE\",   imageUrls: imageUrls},\n  {boardIdx: 23, userIdx: 23, title: \"cookie\", status: \"ACTIVE\",   imageUrls: imageUrls},\n  {boardIdx: 24, userIdx: 24, title: \"weaver\", status: \"ACTIVE\",   imageUrls: imageUrls},\n  {boardIdx: 25, userIdx: 25, title: \"aien\",   status: \"ACTIVE\",   imageUrls: imageUrls},\n  {boardIdx: 26, userIdx: 26, title: \"mary\",   status: \"INACTIVE\", imageUrls: imageUrls},\n  {boardIdx: 27, userIdx: 27, title: \"haling\", status: \"ACTIVE\",   imageUrls: imageUrls},\n]\n\nexport default boardsData\n","import React, { useEffect, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport 'react-bootstrap-table/dist//react-bootstrap-table-all.min.css';\nimport { CCard, CCardBody, CCol, CDataTable } from '@coreui/react';\nimport TempAdminApi, { EndPoint, HttpMethod } from '../../constant/TempAdminApi';\nimport { itemsPerPage } from '../../constant/Constants';\nimport { isEmpty } from '../../utils/common/commonFunction';\nimport {\n    tableFilter,\n    tablePagination,\n    tableScopedSlots,\n    tableStatusField,\n} from '../component/Table';\nimport BottomButtons from '../component/Button';\nimport boardsData from './BoardsData';\n\n// Import antd\nimport { Calendar } from 'antd';\nimport 'antd/dist/antd.css';\n\nconst Boards = () => {\n    const history = useHistory();\n\n    const [boards, setBoards] = useState([]);\n\n    // 게시물 전체 조회 API 요청\n    useEffect(() => {\n        const getBoards = async () => {\n            try {\n                const { data: res } = await TempAdminApi.request({\n                    method: HttpMethod.GET,\n                    url: EndPoint.GET_BOARDS,\n                });\n\n                if (!res?.isSuccess || isEmpty(res?.result)) {\n                    if (res?.code === 2002) {\n                        history.push('/login');\n                    } else {\n                        alert(res.message);\n                    }\n                    return;\n                }\n\n                setBoards(res.result);\n            } catch (error) {\n                console.log(error);\n                alert('네트워크 통신 실패. 잠시후 다시 시도해주세요.');\n                setBoards(boardsData);\n            }\n        };\n\n        getBoards().then();\n    }, []);\n\n    // 테이블 속성 - fields\n    const tableFields = [\n        {\n            key: 'boardIdx',\n            _classes: 'font-weight-bold',\n            label: '고유번호',\n            _style: { width: '120px' },\n            filter: false,\n            sorter: true,\n        },\n        {\n            key: 'title',\n            label: '제목',\n            filter: true,\n            sorter: true,\n        },\n        tableStatusField,\n    ];\n\n    // 테이블 셀 onClick\n    function onTableRowClick(item) {\n        history.push(`/boards/${item.boardIdx}`);\n    }\n\n    // 추가 버튼 onClick\n    function onPostButtonClick() {\n        history.push('/add-board');\n    }\n\n    function onPanelChange(value, mode) {\n        console.log(value.format('YYYY-MM-DD'), mode);\n    }\n\n    return (\n        <CCol>\n            <CCard>\n                <CCardBody align=\"center\">\n                    <CDataTable\n                        items={boards}\n                        fields={tableFields}\n                        scopedSlots={tableScopedSlots}\n                        hover\n                        striped\n                        sorter\n                        onRowClick={onTableRowClick}\n                        tableFilter={tableFilter('검색 :  ', '제목을 입력하세요')}\n                        pagination={tablePagination}\n                        itemsPerPage={itemsPerPage}\n                    />\n                </CCardBody>\n            </CCard>\n            <BottomButtons onPostClick={onPostButtonClick} />\n        </CCol>\n    );\n};\n\nexport default Boards;\n","import { CButton, CCol, CRow } from '@coreui/react';\nimport React from 'react';\n\n// 뒤로가기 버튼\nconst BackButton = (props) => {\n    const { label, onClick } = props;\n\n    return (\n        <CButton color=\"success\" shape=\"square\" size=\"m\" onClick={onClick}>\n            {label || '뒤로가기'}\n        </CButton>\n    );\n};\n\n// 취소 버튼\nconst CancleButton = (props) => {\n    const { label, onClick } = props;\n\n    return (\n        <CButton color=\"danger\" shape=\"square\" size=\"m\" onClick={onClick}>\n            {label || '예약 취소'}\n        </CButton>\n    );\n};\n\n// 승인 버튼\nconst RegistButton = (props) => {\n    const { label, onClick } = props;\n\n    return (\n        <CButton color=\"success\" shape=\"square\" size=\"m\" onClick={onClick}>\n            {label || '예약 승인'}\n        </CButton>\n    );\n};\n\n// 닫기 버튼\nconst CloseButton = (props) => {\n    const { label, onClick } = props;\n\n    return (\n        <CButton color=\"success\" shape=\"square\" size=\"m\" onClick={onClick}>\n            {label || '닫기'}\n        </CButton>\n    );\n};\n\n// 추가하기 버튼\nconst PostButton = (props) => {\n    const { label, onClick } = props;\n\n    return (\n        <CButton color=\"success\" shape=\"square\" size=\"m\" onClick={onClick}>\n            {label || '프로그램 추가하기'}\n        </CButton>\n    );\n};\n\n// 가격 추가하기 버튼\nconst RoomPostButton = (props) => {\n    const { label, onClick } = props;\n\n    return (\n        <CButton color=\"success\" shape=\"square\" size=\"m\" onClick={onClick}>\n            {label || '추가하기'}\n        </CButton>\n    );\n};\n\n// 수정하기 버튼\nconst PatchButton = (props) => {\n    const { label, onClick } = props;\n\n    return (\n        <CButton color=\"primary\" shape=\"square\" size=\"m\" onClick={onClick}>\n            {label || '수정하기'}\n        </CButton>\n    );\n};\n\n// 삭제하기 버튼\nconst DeleteButton = (props) => {\n    const { label, onClick } = props;\n\n    return (\n        <CButton color=\"danger\" shape=\"square\" size=\"m\" onClick={onClick}>\n            {label || '삭제하기'}\n        </CButton>\n    );\n};\n\n// 하단 버튼 모듈\nconst BottomButtons = (props) => {\n    const {\n        onCancleClick,\n        onRegistClick,\n        onBackClick,\n        onPostClick,\n        onPatchClick,\n        onDeleteClick,\n        backLabel,\n        postLabel,\n        patchLabel,\n        deleteLabel,\n        cancleLabel,\n        registLabel,\n        RoomPostLabel,\n        onCloseClick,\n        onRoomPostClick,\n    } = props;\n\n    return (\n        <CRow>\n            {onBackClick ? (\n                <CCol align=\"left\">\n                    <BackButton label={backLabel} onClick={onBackClick} />\n                </CCol>\n            ) : (\n                <p />\n            )}\n            {onCloseClick ? (\n                <CCol align=\"left\">\n                    <CloseButton label={backLabel} onClick={onCloseClick} />\n                </CCol>\n            ) : (\n                <p />\n            )}\n            <CCol align=\"right\">\n                {onRoomPostClick && (\n                    <RoomPostButton label={RoomPostLabel} onClick={onRoomPostClick} />\n                )}\n                &nbsp;&nbsp;\n                {onRegistClick && <RegistButton label={registLabel} onClick={onRegistClick} />}\n                &nbsp;&nbsp;\n                {onCancleClick && <CancleButton label={cancleLabel} onClick={onCancleClick} />}\n                &nbsp;&nbsp;\n                {onPostClick && <PostButton label={postLabel} onClick={onPostClick} />}\n                &nbsp;&nbsp;\n                {onPatchClick && <PatchButton label={patchLabel} onClick={onPatchClick} />}\n                &nbsp;&nbsp;\n                {onDeleteClick && <DeleteButton label={deleteLabel} onClick={onDeleteClick} />}\n            </CCol>\n            <br />\n            <br />\n            <br />\n        </CRow>\n    );\n};\n\nexport default BottomButtons;\n","export const itemsPerPage = 10\n","import React from 'react';\nimport { CBadge } from '@coreui/react';\n\nfunction getStatusBadgeColor(status) {\n    switch (status) {\n        case 'ACTIVE':\n            return 'success';\n        case 'DEACTIVATE':\n            return 'secondary';\n        case 'INACTIVE':\n            return 'danger';\n        default:\n            return 'primary';\n    }\n}\n\nfunction getStatusBadgeText(status) {\n    switch (status) {\n        case 'ACTIVE':\n            return '활성';\n        case 'DEACTIVATE':\n            return '비활성';\n        case 'INACTIVE':\n            return '탈퇴';\n        default:\n            return '';\n    }\n}\n\nfunction getDeleteBadgeColor(status) {\n    switch (status) {\n        case 'ACTIVE':\n            return 'success';\n        case 'DEACTIVATE':\n            return 'secondary';\n        case 'INACTIVE':\n            return 'danger';\n        default:\n            return 'primary';\n    }\n}\n\nfunction getDeleteBadgeText(status) {\n    switch (status) {\n        case 'ACTIVE':\n            return '활성';\n        case 'DEACTIVATE':\n            return '비활성';\n        case 'INACTIVE':\n            return '삭제';\n        default:\n            return '';\n    }\n}\n\nfunction getSnsIdBadgeColor(snsId) {\n    switch (snsId) {\n        case 0:\n            return 'light';\n        default:\n            return 'warning';\n    }\n}\n\nfunction getSnsIdBadgeText(snsId) {\n    switch (snsId) {\n        case 0:\n            return '일반';\n        default:\n            return '카카오';\n    }\n}\n\nexport function cellStatusBadge(status) {\n    return <CBadge color={getStatusBadgeColor(status)}>{getStatusBadgeText(status)}</CBadge>;\n}\n\nexport function cellDeleteBadge(status) {\n    return <CBadge color={getDeleteBadgeColor(status)}>{getDeleteBadgeText(status)}</CBadge>;\n}\n\nexport function cellSnsIdBadge(snsId) {\n    return <CBadge color={getSnsIdBadgeColor(snsId)}>{getSnsIdBadgeText(snsId)}</CBadge>;\n}\n","import React from 'react';\nimport { Button } from 'reactstrap';\nimport Moment from 'react-moment';\nimport { SizePerPageDropDown } from 'react-bootstrap-table';\nimport { itemsPerPage } from '../../constant/Constants';\nimport { cellStatusBadge, cellSnsIdBadge, cellDeleteBadge } from './Badge';\nimport { CButton } from '@coreui/react';\n\n// tableField - 상태\nexport const tableStatusField = {\n    key: 'status',\n    label: '상태',\n    _style: { width: '120px' },\n    filter: false,\n    sorter: true,\n};\n\n// tableField - 상태\nexport const tableEnterpriseAndProgramStatusField = {\n    key: 'deleteStatus',\n    label: '상태',\n    _style: { width: '120px' },\n    filter: false,\n    sorter: true,\n};\n\n// tableField - 로그인 유형\nexport const tableSnsIdField = {\n    key: 'snsId',\n    label: '로그인 유형',\n    _style: { width: '120px' },\n    filter: false,\n    sorter: true,\n};\n\n// tableField - 조회\nexport const tableGetField = {\n    key: 'get',\n    label: '',\n    _style: { width: '120px' },\n    filter: false,\n    sorter: false,\n};\n\n// tableField - 수정\nexport const tablePatchField = {\n    key: 'patch',\n    label: '',\n    _style: { width: '120px' },\n    filter: false,\n    sorter: false,\n};\n\n// tableField - 삭제\nexport const tableDeleteField = {\n    key: 'delete',\n    label: '',\n    _style: { width: '120px' },\n    filter: false,\n    sorter: false,\n};\n\n// tableScopedSlot - 상태\nexport function tableStatusScopedSlot(status) {\n    return (\n        <td className=\"py-2\" style={{ fontSize: '18px' }}>\n            {cellStatusBadge(status)}\n        </td>\n    );\n}\n\n// tableScopedSlot - 상태\nexport function tableDeleteStatusScopedSlot(status) {\n    return (\n        <td className=\"py-2\" style={{ fontSize: '18px' }}>\n            {cellDeleteBadge(status)}\n        </td>\n    );\n}\n\n// tableScopedSlot - 로그인 유형\nexport function tableSnsIdScopedSlot(snsId) {\n    return (\n        <td className=\"py-2\" style={{ fontSize: '18px' }}>\n            {cellSnsIdBadge(snsId)}\n        </td>\n    );\n}\n\n// tableScopedSlot - 조회\nexport function tableGetScopedSlot(onClick) {\n    return (\n        <td className=\"py-2\">\n            <CButton color=\"success\" variant=\"outline\" shape=\"square\" size=\"sm\" onClick={onClick}>\n                조회\n            </CButton>\n        </td>\n    );\n}\n\n// tableScopedSlot - 수정\nexport function tablePatchScopedSlot(onClick) {\n    return (\n        <td className=\"py-2\">\n            <CButton color=\"primary\" variant=\"outline\" shape=\"square\" size=\"sm\" onClick={onClick}>\n                수정\n            </CButton>\n        </td>\n    );\n}\n\n// tableScopedSlot - 삭제\nexport function tableDeleteScopedSlot(onClick) {\n    return (\n        <td className=\"py-2\">\n            <CButton color=\"danger\" variant=\"outline\" shape=\"square\" size=\"sm\" onClick={onClick}>\n                삭제\n            </CButton>\n        </td>\n    );\n}\n\n// tableScopedSlots - 기본값\nexport const tableScopedSlots = {\n    status: (item) => tableStatusScopedSlot(item.status),\n    deleteStatus: (item) => tableDeleteStatusScopedSlot(item.status),\n    snsId: (item) => tableSnsIdScopedSlot(item.snsId),\n};\n\n// tablePagination - 기본값\nexport const tablePagination = {\n    doubleArrows: true,\n    align: 'center',\n};\n\n// tableFilter - 기본값\nexport function tableFilter(label, placeholder) {\n    return {\n        label: label,\n        placeholder: placeholder,\n    };\n}\n\nexport const tableOptions = {\n    sortIndicator: true,\n    paginationSize: itemsPerPage,\n    clearSearch: true,\n    withFirstAndLast: true,\n    clearSearchBtn: createCustomClearButton,\n    sizePerPageDropDown: renderSizePerPageDropDown,\n    paginationShowsTotal: renderShowsTotal,\n};\n\nexport const tableCustomOptions = {\n    sortIndicator: true,\n    paginationSize: itemsPerPage,\n    clearSearch: true,\n    withFirstAndLast: true,\n    sizePerPageDropDown: renderSizePerPageDropDown,\n    clearSearchBtn: createCustomClearButton,\n    paginationShowsTotal: renderShowsTotal,\n};\n\nexport function renderShowsTotal(start, to, total) {\n    return (\n        <p style={{ color: 'black' }}>\n            From {start} to {to}, totals is {total}&nbsp;&nbsp;\n        </p>\n    );\n}\n\nexport function renderDate(cell, row, enumObject, rowIndex) {\n    if (!cell) {\n        return cell;\n    }\n    return <Moment format=\"YYYY.MM.DD HH:mm:ss\">{cell}</Moment>;\n}\n\nexport function renderMoney(cell, row, enumObject, rowIndex) {\n    if (!cell) {\n        return cell;\n    }\n    return cell.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',') + '원';\n}\n\n// size per page start\n\n/*\nfunction onToggleDropDown(toggleDropDown) {\n  // do your stuff here\n  //console.log(\"toggle dropdown\")\n  //toggleDropDown()\n}\n */\n\nfunction renderSizePerPageDropDown(props) {\n    return (\n        <SizePerPageDropDown\n            className=\"my-size-per-page\"\n            variation=\"dropup\"\n            {...props}\n            //onClick={() => onToggleDropDown(props.toggleDropDown)}\n        />\n    );\n}\n\n// size per page end\n\n// clear button custom start\nfunction handleClearButtonClick(onClick) {\n    // Custom your onClick event here,\n    // it's not necessary to implement this function if you have no any process before onClick\n    // console.log(\"This is my custom function for ClearSearchButton click event\")\n    onClick();\n}\n\nfunction createCustomClearButton(onClick) {\n    return (\n        <Button\n            className=\"my-custom-class ml-2\"\n            color=\"success\"\n            size=\"sm\"\n            onClick={(e) => handleClearButtonClick(onClick)}\n        >\n            초기화\n        </Button>\n    );\n    // If you want have more power to custom the child of ClearSearchButton,\n    // you can do it like following\n    // return (\n    //   <ClearSearchButton\n    //     btnContextual=\"btn-warning\"\n    //     className=\"my-custom-class\"\n    //     onClick={ () => this.handleClearButtonClick(onClick) }>\n    //     { ... }\n    //   </ClearSearchButton>\n    // )\n}\n\n// clear button custom end\n"],"sourceRoot":""}