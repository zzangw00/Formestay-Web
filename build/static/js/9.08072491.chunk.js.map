{"version":3,"sources":["utils/common/commonFunction.js","constant/TempAdminApiMap.js","constant/TempAdminApi.js","utils/session/sessionManager.js","utils/session/expirySession.js","views/users/UsersData.js","routes.js","containers/TheContent.js","containers/TheHeader.js","containers/_nav.js","containers/TheSidebar.js","containers/TheFooter.js","containers/TheLayout.js"],"names":["isEmpty","value","undefined","Object","keys","length","isValidEmail","email","match","isValidPhoneNumber","phoneNumber","API","process","console","log","EndPoint","POST_ADMIN_LOGIN","GET_USERS","GET_USER","POST_USER","PATCH_USER","PATCH_USER_STATUS","GET_AUTO_LOGIN","POST_ADMIN","GET_ENTERPRISES","GET_ENTERPRISE","GET_PROGRAMS","TempAdminApiMap","get","post","patch","put","delete","HttpMethod","DELETE","GET","POST","PUT","PATCH","TempAdminApi","data","query","path","method","url","Error","entries","key","replace","map","join","headers","getJwt","Axios","err","checkLogin","sessionGet","window","localStorage","clear","a","request","res","isSuccess","result","alert","autoLogin","then","jwt","getItem","JSON","parse","cleanUpSession","expirationInMin","stringValue","expirationDate","Date","getTime","ISODate","moment","format","newValue","setItem","stringify","removeItem","sessionSet","sessionStorage","usersData","userIdx","nickname","status","routes","exact","name","component","React","lazy","loading","className","memo","fluid","fallback","route","idx","render","props","from","to","TheHeader","dispatch","useDispatch","sidebarShow","useSelector","state","useState","info","setInfo","history","useHistory","withSubheader","style","background","inHeader","onClick","val","includes","type","height","alt","color","zIndex","show","onClose","closeButton","push","_tag","icon","_children","onShowChange","items","navigation","components","CSidebarNavDivider","CSidebarNavDropdown","CSidebarNavItem","CSidebarNavTitle","fixed","href","target","rel","TheLayout"],"mappings":"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","file":"static/js/9.08072491.chunk.js","sourcesContent":["export const isEmpty = function (value) {\n  return (value === \"\" || value === null || value === undefined || (typeof value === \"object\" && !Object.keys(value).length))\n}\n\nexport function isValidEmail(email) {\n  return email.match(/^[0-9a-zA-Z]([-_.]?[0-9a-zA-Z])*@[0-9a-zA-Z]([-_.]?[0-9a-zA-Z])*\\.[a-zA-Z]{2,3}$/)\n}\n\nexport function isValidPhoneNumber(phoneNumber) {\n  return phoneNumber.match(/^01(?:0|1|[6-9])-(?:\\d{3}|\\d{4})-\\d{4}$/)\n}\n","const API = process.env.REACT_APP_API_URL;\nconsole.log(API);\n\nexport const EndPoint = {\n    POST_ADMIN_LOGIN: `${API}/login`,\n\n    GET_USERS: `${API}/users`,\n    GET_USER: `${API}/users/:userId`,\n    POST_USER: `${API}/users`,\n    PATCH_USER: `${API}/users/:userId`,\n    PATCH_USER_STATUS: `${API}/users/:userId/status`,\n\n    GET_AUTO_LOGIN: `${API}/auto-login`,\n\n    POST_ADMIN: `${API}`,\n\n    GET_ENTERPRISES: `${API}/enterprises`,\n    GET_ENTERPRISE: `${API}/enterprises/:enterpriseId`,\n\n    GET_PROGRAMS: `${API}/programs/:enterpriseId`,\n};\n\nconst TempAdminApiMap = {\n    get: {\n        [EndPoint.GET_USERS]: {},\n        [EndPoint.GET_USER]: {},\n        [EndPoint.GET_ENTERPRISES]: {},\n        [EndPoint.GET_ENTERPRISE]: {},\n        [EndPoint.GET_AUTO_LOGIN]: {},\n        [EndPoint.GET_PROGRAMS]: {},\n    },\n    post: {\n        [EndPoint.POST_ADMIN_LOGIN]: {},\n        [EndPoint.POST_USER]: {},\n        [EndPoint.POST_ADMIN]: {},\n    },\n    patch: {\n        [EndPoint.PATCH_USER]: {},\n        [EndPoint.PATCH_USER_STATUS]: {},\n    },\n    put: {},\n    delete: {},\n};\n\nexport default TempAdminApiMap;\n","import Axios from \"axios\"\nimport TempAdminApiMap from \"./TempAdminApiMap\"\nimport {getJwt} from \"../utils/session/sessionManager\"\nimport {isEmpty} from \"../utils/common/commonFunction\"\n\nexport {EndPoint} from \"./TempAdminApiMap\"\nexport const HttpMethod = {\n    DELETE: \"delete\",\n    GET: \"get\",\n    POST: \"post\",\n    PUT: \"put\",\n    PATCH: \"patch\",\n}\n\nexport default class TempAdminApi {\n    static request({data, query, path, method, url}) {\n        try {\n            if (isEmpty(method) || isEmpty(url)) {\n                throw new Error(\"TempAdminApi needs url and method\")\n            }\n\n            const api = TempAdminApiMap[method][url]\n            if (api === undefined) {\n                throw new Error(`TempAdminApi does not have the mapping ${method}, ${url}`)\n            }\n\n            if (path) {\n                for (const [key, value] of Object.entries(path)) {\n                    url = url.replace(`:${key}`, value)\n                }\n            }\n\n            if (!isEmpty(query)) {\n                url += \"?\" + Object.keys(query).map(key => key + \"=\" + query[key]).join(\"&\")\n            }\n\n            const headers = {\n              \"accept\": \"application/json\",\n              \"Content-Type\": \"application/json\",\n              \"X-Access-Token\": getJwt()\n            }\n\n            switch (method) {\n                case HttpMethod.GET:\n                    return Axios.get(url, {headers: headers})\n                case HttpMethod.POST:\n                    return Axios.post(url, data, {headers: headers})\n                case HttpMethod.PATCH:\n                    return Axios.patch(url, data, {headers: headers})\n                case HttpMethod.PUT:\n                    return Axios.put(url, data, {headers: headers})\n                case HttpMethod.DELETE:\n                    return Axios.delete(url, data, {headers: headers})\n                default:\n                    break\n            }\n        } catch (err) {\n            return \"axios cannot be created\"\n        }\n    }\n}\n","import React from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { sessionGet } from './expirySession';\nimport { isEmpty } from '../common/commonFunction';\nimport TempAdminApi, { EndPoint, HttpMethod } from '../../constant/TempAdminApi';\nimport usersData from '../../views/users/UsersData';\n\nexport function checkLogin() {\n    if (!isEmpty(sessionGet('jwt'))) {\n        const autoLogin = async () => {\n            try {\n                const { data: res } = await TempAdminApi.request({\n                    method: HttpMethod.GET,\n                    url: EndPoint.GET_AUTO_LOGIN,\n                });\n\n                if (!res?.isSuccess || isEmpty(res?.result)) {\n                    return false;\n                }\n            } catch (error) {\n                console.log(error);\n                alert('네트워크 통신 실패. 잠시후 다시 시도해주세요.');\n            }\n        };\n        autoLogin().then();\n        return true;\n    }\n\n    window.localStorage.clear();\n    return false;\n}\n\nexport function getJwt() {\n    let jwt = window.localStorage.getItem('jwt');\n    if (isEmpty(jwt)) {\n        return;\n    }\n    return JSON.parse(jwt).value;\n}\n\nexport function cleanUpSession() {\n    window.localStorage.clear();\n}\n","// get from session (if the value expired it is destroyed)\nimport moment from \"moment\"\n\nexport function sessionGet(key,expirationInMin = 360) {\n    let stringValue = window.localStorage.getItem(key)\n    if (stringValue !== null) {\n        let value = JSON.parse(stringValue)\n        let expirationDate = new Date(value.expirationDate)\n        if (expirationDate > new Date()) {\n            //시간 연장\n            let expirationDate = new Date(new Date().getTime() + (60000 * expirationInMin))\n            let ISODate = moment(expirationDate).format(\"YYYY[-]MM[-]DD HH:mm:ss\") // 포맷을 변경\n            let newValue = {\n                value: value.value,\n                expirationDate: ISODate\n            }\n            window.localStorage.setItem(key, JSON.stringify(newValue))\n            return value.value\n        } else {\n            window.localStorage.removeItem(key)\n        }\n    }\n    return null\n}\n\n// add into session\nexport function  sessionSet(key, value, expirationInMin = 360) {\n    let expirationDate = new Date(new Date().getTime() + (60000 * expirationInMin))\n    let ISODate = moment(expirationDate).format(\"YYYY[-]MM[-]DD HH:mm:ss\") // 포맷을 변경\n    let newValue = {\n        value: value,\n        expirationDate: ISODate\n    }\n    window.sessionStorage.setItem(key, JSON.stringify(newValue))\n    window.localStorage.setItem(key, JSON.stringify(newValue))\n}\n\n// add into session\nexport function  getName() {\n    let stringValue = window.localStorage.getItem(\"name\")\n    if (stringValue !== null) {\n        let value = JSON.parse(stringValue)\n        return value.value\n    }\n}\n\n","const usersData = [\n  {userIdx: 0,  nickname: \"zero\",   email: \"zero@softsquared.com\",   phoneNumber: \"010-0000-0000\", status: \"ACTIVE\"},\n  {userIdx: 1,  nickname: \"dory\",   email: \"dory@softsquared.com\",   phoneNumber: \"010-0101-0101\", status: \"INACTIVE\"},\n  {userIdx: 2,  nickname: \"ted\",    email: \"ted@softsquared.com\",    phoneNumber: \"010-0202-0202\", status: \"ACTIVE\"},\n  {userIdx: 3,  nickname: \"daphne\", email: \"daphne@softsquared.com\", phoneNumber: \"010-0303-0303\", status: \"ACTIVE\"},\n  {userIdx: 4,  nickname: \"grace\",  email: \"grace@softsquared.com\",  phoneNumber: \"010-0404-0404\", status: \"ACTIVE\"},\n  {userIdx: 5,  nickname: \"papa\",   email: \"papa@softsquared.com\",   phoneNumber: \"010-0505-0505\", status: \"INACTIVE\"},\n  {userIdx: 6,  nickname: \"yunix\",  email: \"yunix@softsquared.com\",  phoneNumber: \"010-0606-0606\", status: \"ACTIVE\"},\n  {userIdx: 7,  nickname: \"io\",     email: \"io@softsquared.com\",     phoneNumber: \"010-0707-0707\", status: \"ACTIVE\"},\n  {userIdx: 8,  nickname: \"radih\",  email: \"radih@softsquared.com\",  phoneNumber: \"010-0808-0808\", status: \"ACTIVE\"},\n  {userIdx: 9,  nickname: \"cookie\", email: \"cookie@softsquared.com\", phoneNumber: \"010-0909-0909\", status: \"ACTIVE\"},\n  {userIdx: 10, nickname: \"weaver\", email: \"weaver@softsquared.com\", phoneNumber: \"010-1010-1010\", status: \"INACTIVE\"},\n  {userIdx: 11, nickname: \"aien\",   email: \"aien@softsquared.com\",   phoneNumber: \"010-1111-1111\", status: \"ACTIVE\"},\n  {userIdx: 12, nickname: \"mary\",   email: \"mary@softsquared.com\",   phoneNumber: \"010-1212-1212\", status: \"ACTIVE\"},\n  {userIdx: 13, nickname: \"haling\", email: \"haling@softsquared.com\", phoneNumber: \"010-1313-1313\", status: \"ACTIVE\"},\n  {userIdx: 14, nickname: \"zero\",   email: \"zero@softsquared.com\",   phoneNumber: \"010-1414-1414\", status: \"ACTIVE\"},\n  {userIdx: 15, nickname: \"dory\",   email: \"dory@softsquared.com\",   phoneNumber: \"010-1515-1515\", status: \"ACTIVE\"},\n  {userIdx: 16, nickname: \"ted\",    email: \"ted@softsquared.com\",    phoneNumber: \"010-1616-1616\", status: \"INACTIVE\"},\n  {userIdx: 17, nickname: \"daphne\", email: \"daphne@softsquared.com\", phoneNumber: \"010-1717-1717\", status: \"ACTIVE\"},\n  {userIdx: 18, nickname: \"grace\",  email: \"grace@softsquared.com\",  phoneNumber: \"010-1818-1818\", status: \"ACTIVE\"},\n  {userIdx: 19, nickname: \"papa\",   email: \"papa@softsquared.com\",   phoneNumber: \"010-1919-1919\", status: \"ACTIVE\"},\n  {userIdx: 20, nickname: \"yunix\",  email: \"yunix@softsquared.com\",  phoneNumber: \"010-2020-2020\", status: \"ACTIVE\"},\n  {userIdx: 21, nickname: \"io\",     email: \"io@softsquared.com\",     phoneNumber: \"010-2121-2121\", status: \"INACTIVE\"},\n  {userIdx: 22, nickname: \"radih\",  email: \"radih@softsquared.com\",  phoneNumber: \"010-2222-2222\", status: \"ACTIVE\"},\n  {userIdx: 23, nickname: \"cookie\", email: \"cookie@softsquared.com\", phoneNumber: \"010-2323-2323\", status: \"ACTIVE\"},\n  {userIdx: 24, nickname: \"weaver\", email: \"weaver@softsquared.com\", phoneNumber: \"010-2424-2424\", status: \"ACTIVE\"},\n  {userIdx: 25, nickname: \"aien\",   email: \"aien@softsquared.com\",   phoneNumber: \"010-2525-2525\", status: \"ACTIVE\"},\n  {userIdx: 26, nickname: \"mary\",   email: \"mary@softsquared.com\",   phoneNumber: \"010-2626-2626\", status: \"INACTIVE\"},\n  {userIdx: 27, nickname: \"haling\", email: \"haling@softsquared.com\", phoneNumber: \"010-2727-2727\", status: \"ACTIVE\"},\n]\n\nexport default usersData\n","import React from 'react';\n\nconst Users = React.lazy(() => import('./views/users/Users'));\nconst User = React.lazy(() => import('./views/users/User'));\n\nconst Boards = React.lazy(() => import('./views/boards/Boards'));\nconst Board = React.lazy(() => import('./views/boards/Board'));\nconst AddBoard = React.lazy(() => import('./views/boards/AddBoard'));\nconst AddAdmin = React.lazy(() => import('./views/admin/AddAdmin'));\n\nconst Enterprises = React.lazy(() => import('./views/enterprises/Enterprises'));\nconst Enterprise = React.lazy(() => import('./views/enterprises/Enterprise'));\n\nconst routes = [\n    { path: '/users', exact: true, name: '회원 목록 조회', component: Users },\n    { path: '/users/:userId', exact: true, name: '회원 상세 조회', component: User },\n\n    { path: '/boards', exact: true, name: '게시물 목록 조회', component: Boards },\n    { path: '/boards/:boardIdx', exact: true, name: '게시물 상세 조회', component: Board },\n    { path: '/add-board', exact: true, name: '게시물 추가', component: AddBoard },\n\n    { path: '/add-admin', exact: true, name: '관리자 추가', component: AddAdmin },\n\n    { path: '/enterprises', exact: true, name: '업체 조회', component: Enterprises },\n    {\n        path: '/enterprises/:enterpriseId',\n        exact: true,\n        name: '업체 상세 조회',\n        component: Enterprise,\n    },\n];\n\nexport default routes;\n","import React, {Suspense} from \"react\"\nimport {Redirect, Route, Switch} from \"react-router-dom\"\nimport {CContainer, CFade} from \"@coreui/react\"\nimport routes from \"../routes\"\n\nconst loading = (\n  <div className=\"pt-3 text-center\">\n    <div className=\"sk-spinner sk-spinner-pulse\"/>\n  </div>\n)\n\nconst TheContent = () => {\n  return (\n    <main className=\"c-main\">\n      <CContainer fluid>\n        <Suspense fallback={loading}>\n          <Switch>\n            {routes.map((route, idx) => {\n              return route.component && (\n                <Route\n                  key={idx}\n                  path={route.path}\n                  exact={route.exact}\n                  name={route.name}\n                  render={props => (\n                    <CFade>\n                      <route.component {...props} />\n                    </CFade>\n                  )} />\n              )\n            })}\n            <Redirect from=\"/\" to=\"/users\" />\n          </Switch>\n        </Suspense>\n      </CContainer>\n    </main>\n  )\n}\n\nexport default React.memo(TheContent)\n","import React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport {\n    CBreadcrumbRouter,\n    CButton,\n    CHeader,\n    CHeaderBrand,\n    CHeaderNav,\n    CModal,\n    CModalBody,\n    CModalFooter,\n    CModalHeader,\n    CModalTitle,\n    CSubheader,\n    CToggler,\n} from '@coreui/react';\nimport CIcon from '@coreui/icons-react';\nimport routes from '../routes';\nimport { cleanUpSession } from '../utils/session/sessionManager';\n\nconst TheHeader = () => {\n    const env = process.env.NODE_ENV;\n    const dispatch = useDispatch();\n    const sidebarShow = useSelector((state) => state.sidebarShow);\n\n    const [info, setInfo] = useState(false);\n\n    const history = useHistory();\n\n    const toggleSidebar = () => {\n        const val = [true, 'responsive'].includes(sidebarShow) ? false : 'responsive';\n        dispatch({ type: 'set', sidebarShow: val });\n    };\n\n    const toggleSidebarMobile = () => {\n        const val = [false, 'responsive'].includes(sidebarShow) ? true : 'responsive';\n        dispatch({ type: 'set', sidebarShow: val });\n    };\n\n    const logout = () => {\n        //jwt 로컬스토리지에서 삭제\n        cleanUpSession();\n\n        //로그인 페이지로 이동\n        history.push('/login');\n    };\n\n    return (\n        <CHeader withSubheader style={{ background: env === 'production' ? 'white' : 'green' }}>\n            <CToggler inHeader className=\"ml-md-3 d-lg-none\" onClick={toggleSidebarMobile} />\n            <CToggler inHeader className=\"ml-3 d-md-down-none\" onClick={toggleSidebar} />\n            <CHeaderBrand className=\"mx-auto d-lg-none\" to=\"/\">\n                <CIcon name=\"logo\" height=\"48\" alt=\"Logo\" />\n            </CHeaderBrand>\n\n            <CHeaderNav className=\"d-md-down-none mr-auto\">\n                <h1 style={{ color: 'white', zIndex: 8 }}>\n                    {env === 'production' ? '' : '테스트 페이지입니다.'}\n                </h1>\n            </CHeaderNav>\n\n            <CHeaderNav className=\"px-3\">\n                <CButton color=\"info\" to=\"/add-admin\" className=\"mr-1\">\n                    회원가입\n                </CButton>\n\n                <CButton color=\"info\" onClick={() => setInfo(!info)} className=\"mr-1\">\n                    Logout\n                </CButton>\n                <CModal show={info} onClose={() => setInfo(!info)} color=\"info\">\n                    <CModalHeader closeButton>\n                        <CModalTitle>확인</CModalTitle>\n                    </CModalHeader>\n                    <CModalBody>정말로 로그아웃 하시겠습니까?</CModalBody>\n                    <CModalFooter>\n                        <CButton color=\"info\" onClick={logout}>\n                            Logout\n                        </CButton>{' '}\n                        <CButton color=\"secondary\" onClick={() => setInfo(!info)}>\n                            취소\n                        </CButton>\n                    </CModalFooter>\n                </CModal>\n            </CHeaderNav>\n\n            <CSubheader className=\"px-3 justify-content-between\">\n                <CBreadcrumbRouter\n                    className=\"border-0 c-subheader-nav m-0 px-0 px-md-3\"\n                    routes={routes}\n                />\n            </CSubheader>\n        </CHeader>\n    );\n};\n\nexport default TheHeader;\n","export default [\n    {\n        _tag: 'CSidebarNavDropdown',\n        name: '회원 관리',\n        route: '/users',\n        icon: 'cil-people',\n        _children: [\n            {\n                _tag: 'CSidebarNavItem',\n                name: '회원 조회',\n                to: '/users',\n            },\n        ],\n    },\n    {\n        _tag: 'CSidebarNavDropdown',\n        name: '예약 관리',\n        route: '/boards',\n        icon: 'cil-notes',\n        _children: [\n            {\n                _tag: 'CSidebarNavItem',\n                name: '예약 조회',\n                to: '/boards',\n            },\n            {\n                _tag: 'CSidebarNavItem',\n                name: '게시물 추가',\n                to: '/add-board',\n            },\n        ],\n    },\n    {\n        _tag: 'CSidebarNavDropdown',\n        name: '업체 관리',\n        route: '/enterprises',\n        icon: 'cil-notes',\n        _children: [\n            {\n                _tag: 'CSidebarNavItem',\n                name: '업체 조회',\n                to: '/enterprises',\n            },\n        ],\n    },\n    {\n        _tag: 'CSidebarNavDropdown',\n        name: '결제 관리',\n        route: '/boards',\n        icon: 'cil-notes',\n        _children: [\n            {\n                _tag: 'CSidebarNavItem',\n                name: '결제 이력 조회',\n                to: '/boards',\n            },\n        ],\n    },\n];\n","import React from \"react\"\nimport {useDispatch, useSelector} from \"react-redux\"\nimport {\n  CCreateElement,\n  CSidebar,\n  CSidebarBrand,\n  CSidebarMinimizer,\n  CSidebarNav,\n  CSidebarNavDivider,\n  CSidebarNavDropdown,\n  CSidebarNavItem,\n  CSidebarNavTitle,\n} from \"@coreui/react\"\nimport CIcon from \"@coreui/icons-react\"\nimport navigation from \"./_nav\"\n\nconst TheSidebar = () => {\n  const dispatch = useDispatch()\n  const show = useSelector(state => state.sidebarShow)\n\n  return (\n    <CSidebar\n      show={show}\n      onShowChange={(val) => dispatch({type: \"set\", sidebarShow: val })}\n    >\n      <CSidebarBrand className=\"d-md-down-none\" to=\"/\">\n        <CIcon\n          className=\"c-sidebar-brand-full\"\n          name=\"logo-negative\"\n          height={35}\n        />\n        <CIcon\n          className=\"c-sidebar-brand-minimized\"\n          name=\"sygnet\"\n          height={35}\n        />\n      </CSidebarBrand>\n      <CSidebarNav>\n\n        <CCreateElement\n          items={navigation}\n          components={{\n            CSidebarNavDivider,\n            CSidebarNavDropdown,\n            CSidebarNavItem,\n            CSidebarNavTitle\n          }}\n        />\n      </CSidebarNav>\n      <CSidebarMinimizer className=\"c-d-md-down-none\"/>\n    </CSidebar>\n  )\n}\n\nexport default React.memo(TheSidebar)\n","import React from \"react\"\nimport {CFooter} from \"@coreui/react\"\n\nconst TheFooter = () => {\n  return (\n    <CFooter fixed={false}>\n      <div>\n        <a href=\"https://coreui.io\" target=\"_blank\" rel=\"noopener noreferrer\">CoreUI</a>\n        <span className=\"ml-1\">&copy; 2020 creativeLabs.</span>\n      </div>\n      <div className=\"mfs-auto\">\n        <span className=\"mr-1\">Powered by</span>\n        <a href=\"https://coreui.io/react\" target=\"_blank\" rel=\"noopener noreferrer\">CoreUI for React</a>\n      </div>\n    </CFooter>\n  )\n}\n\nexport default React.memo(TheFooter)\n","import React from \"react\"\nimport {useHistory} from \"react-router-dom\"\nimport {TheContent, TheHeader, TheSidebar, TheFooter} from \"./index\"\nimport {checkLogin} from \"../utils/session/sessionManager\"\n\nconst TheLayout = () => {\n  const history = useHistory()\n\n  return (\n    <div className=\"c-app c-default-layout\">\n      {checkLogin() || history.push(\"/login\")}\n      <TheSidebar/>\n      <div className=\"c-wrapper\">\n        <TheHeader/>\n        <div className=\"c-body\">\n          <TheContent/>\n        </div>\n        <TheFooter/>\n      </div>\n    </div>\n  )\n}\n\nexport default TheLayout\n"],"sourceRoot":""}