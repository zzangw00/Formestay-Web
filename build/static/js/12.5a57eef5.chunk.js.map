{"version":3,"sources":["views/component/Button.js","views/component/cell/TextCell.js","views/component/cell/TextareaCell.js","views/component/cell/ImageCell.js","utils/firebase/uploadFirebase.js","utils/firebase/configFirebase.js","views/boards/Board.js"],"names":["BackButton","props","label","onClick","color","shape","size","PostButton","PatchButton","DeleteButton","BottomButtons","onBackClick","onPostClick","onPatchClick","onDeleteClick","backLabel","postLabel","patchLabel","deleteLabel","align","TextCell","type","placeholder","value","onChange","row","md","htmlFor","autoComplete","disabled","TextareaCell","rows","ImageCell","multiple","src","isLoading","accept","map","imageURL","index","key","height","fluid","style","width","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","database","storage","handleFirebaseUpload","path","filename","file","Promise","resolve","reject","ref","put","on","error","console","log","child","getDownloadURL","then","url","Board","match","history","useHistory","useState","params","boardIdx","userIdx","setUserIdx","title","setTitle","contents","setContents","imageURLs","setImageURLs","isEditing","setIdEditing","parameters","a","TempAdminApi","request","method","HttpMethod","PATCH","EndPoint","PATCH_BOARD","data","res","isSuccess","isEmpty","result","alert","message","go","PATCH_BOARD_STATUS","status","push","useEffect","GET","GET_BOARD","board","imageUrls","getBoard","className","e","target","input","files","forEach","Date","getTime","name","sort","trim","patchBoard","window","confirm","patchBoardStatus"],"mappings":"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","file":"static/js/12.5a57eef5.chunk.js","sourcesContent":["import {CButton, CCol, CRow} from \"@coreui/react\"\nimport React from \"react\"\n\n// 뒤로가기 버튼\nconst BackButton = props => {\n  const {label, onClick} = props\n\n  return (\n    <CButton\n      color=\"success\"\n      shape=\"square\"\n      size=\"m\"\n      onClick={onClick}\n    >{label || \"뒤로가기\"}</CButton>\n  )\n}\n\n// 추가하기 버튼\nconst PostButton = props => {\n  const {label, onClick} = props\n\n  return (\n    <CButton\n      color=\"success\"\n      shape=\"square\"\n      size=\"m\"\n      onClick={onClick}\n    >{label || \"추가하기\"}</CButton>\n  )\n}\n\n// 수정하기 버튼\nconst PatchButton = props => {\n  const {label, onClick} = props\n\n  return (\n    <CButton\n      color=\"primary\"\n      shape=\"square\"\n      size=\"m\"\n      onClick={onClick}\n    >{label || \"수정하기\"}</CButton>\n  )\n}\n\n// 삭제하기 버튼\nconst DeleteButton = props => {\n  const {label, onClick} = props\n\n  return (\n    <CButton\n      color=\"danger\"\n      shape=\"square\"\n      size=\"m\"\n      onClick={onClick}\n    >{label || \"삭제하기\"}</CButton>\n  )\n}\n\n// 하단 버튼 모듈\nconst BottomButtons = props => {\n  const {onBackClick, onPostClick, onPatchClick, onDeleteClick,\n    backLabel, postLabel, patchLabel, deleteLabel} = props\n\n  return (\n    <CRow>\n      {onBackClick ?\n        <CCol align=\"left\">\n          <BackButton label={backLabel} onClick={onBackClick}/>\n        </CCol> : <p/>\n      }\n      <CCol align=\"right\">\n        {onPostClick && <PostButton label={postLabel} onClick={onPostClick}/>}\n        &nbsp;&nbsp;\n        {onPatchClick && <PatchButton label={patchLabel} onClick={onPatchClick}/>}\n        &nbsp;&nbsp;\n        {onDeleteClick &&  <DeleteButton label={deleteLabel} onClick={onDeleteClick}/>}\n      </CCol>\n      <br/><br/><br/>\n    </CRow>\n  )\n}\n\nexport default BottomButtons\n","import React from \"react\"\nimport {CCol, CFormGroup, CInput, CLabel} from \"@coreui/react\"\n\nconst TextCell = props => {\n\tconst {type, label, placeholder, value, onChange} = props\n\n\treturn (\n\t\t<CFormGroup row>\n\t\t\t<CCol md=\"2\" align=\"right\">\n\t\t\t\t<CLabel htmlFor=\"text-input\">{label}</CLabel>\n\t\t\t</CCol>\n\t\t\t<CCol>\n\t\t\t\t<CInput\n          type={type || \"text\"}\n          autoComplete={type === \"password\" ? \"on\" : \"off\"}\n\t\t\t\t\tdisabled={!onChange}\n\t\t\t\t\tplaceholder={placeholder}\n\t\t\t\t\tvalue={value || \"\"}\n\t\t\t\t\tonChange={onChange}\n\t\t\t\t/>\n\t\t\t</CCol>\n\t\t</CFormGroup>\n\t)\n}\n\nexport default TextCell\n","import React from \"react\"\nimport {CCol, CFormGroup, CLabel, CTextarea} from \"@coreui/react\"\n\nconst TextareaCell = props => {\n  const {label, placeholder, value, onChange} = props\n\n  return (\n    <CFormGroup row>\n      <CCol md=\"2\" align=\"right\">\n        <CLabel htmlFor=\"text-input\">{label}</CLabel>\n      </CCol>\n      <CCol>\n        <CTextarea\n          rows=\"10\"\n          disabled={!onChange}\n          placeholder={placeholder}\n          value={value}\n          onChange={onChange}/>\n      </CCol>\n    </CFormGroup>\n  )\n}\n\nexport default TextareaCell\n","import React from \"react\"\nimport {CCol, CFormGroup, CImg, CInputFile, CLabel, CSpinner} from \"@coreui/react\"\n\nconst ImageCell = props => {\n\tconst {multiple, label, src, isLoading, onChange} = props\n\n\treturn (\n\t\t<CFormGroup row>\n\t\t\t<CCol md=\"2\" align=\"right\">\n\t\t\t\t<CLabel htmlFor=\"text-input\">{label}</CLabel>\n\t\t\t</CCol>\n\t\t\t<CCol>\n\t\t\t\t{onChange && <>\n          <CInputFile multiple={multiple || false} accept=\"image/*\" onChange={onChange}/>\n          <br/>\n        </>}\n        {multiple\n          ? src.map((imageURL, index) => (\n            <CImg key={`image_${index}`} src={imageURL} height=\"150\" fluid/>\n          ))\n          : isLoading\n            ? <CSpinner style={{width: 120, height: 120}}/>\n            : <CImg src={src} height=\"150\" fluid/>\n        }\n\t\t\t</CCol>\n\t\t</CFormGroup>\n\t)\n}\n\nexport default ImageCell\n","import firebase from \"firebase\"\nimport {firebaseConfig} from \"./configFirebase\"\n\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig)\nexport const db = firebase.database()\nexport const storage = firebase.storage()\n\nexport function handleFirebaseUpload(path, filename, file) {\n  return new Promise(function (resolve, reject) {\n    const uploadTask = storage.ref(`${path}/${filename}`).put(file)\n    uploadTask.on(\"state_changed\", () => {\n      }, (error) => {\n        console.log(error)\n        reject()\n      }, () => {\n        storage.ref(`${path}`).child(filename).getDownloadURL().then((url) => {\n          resolve(url)\n        })\n      })\n  })\n}\n","export const firebaseConfig = {\n  apiKey: \"API키를 입력하세요\",\n  authDomain: \"파이어베이스 도메인\",\n  databaseURL: \"파이어베이스 디비 url\",\n  projectId: \"파이어베이스 프로젝트 아이디\",\n  storageBucket: \"파이어베이스 스토리지 버킷 정보\",\n  messagingSenderId: \"파이어베이스 메시지 센더 아이디\",\n  appId: \"앱 아이디\",\n  measurementId: \"measurement 아이디\"\n}\n","import React, {useEffect, useState} from \"react\"\nimport {CCard, CCardBody, CCol} from \"@coreui/react\"\nimport TempAdminApi, {EndPoint, HttpMethod} from \"../../constant/TempAdminApi\"\nimport {isEmpty} from \"../../utils/common/commonFunction\"\nimport {useHistory} from \"react-router-dom\"\nimport {handleFirebaseUpload} from \"../../utils/firebase/uploadFirebase\"\nimport TextCell from \"../component/cell/TextCell\"\nimport TextareaCell from \"../component/cell/TextareaCell\"\nimport BottomButtons from \"../component/Button\"\nimport ImageCell from \"../component/cell/ImageCell\"\n\nconst Board = ({match}) => {\n  const history = useHistory()\n  const [boardIdx] = useState(match.params.boardIdx)\n  const [userIdx, setUserIdx] = useState(0)\n  const [title, setTitle] = useState(\"\")\n  const [contents, setContents] = useState(\"\")\n  const [imageURLs, setImageURLs] = useState([])\n  const [isEditing, setIdEditing] = useState(false)\n\n  // 게시물 상세 조회 API 요청\n  useEffect(() => {\n    const getBoard = async () => {\n      try {\n        const {data: res} = await TempAdminApi.request({\n          method: HttpMethod.GET,\n          url: EndPoint.GET_BOARD,\n          path: {boardIdx: boardIdx}\n        })\n\n        if (!res?.isSuccess || isEmpty(res?.result)) {\n          alert(res.message)\n          history.push(\"/boards\")\n          return\n        }\n\n        const board = res.result\n        setUserIdx(board.userIdx)\n        setTitle(board.title)\n        setContents(board.contents)\n        setImageURLs(board.imageUrls)\n      } catch (error) {\n        console.log(error)\n        alert(\"네트워크 통신 실패. 잠시후 다시 시도해주세요.\")\n        history.push(\"/boards\")\n      }\n    }\n\n    getBoard().then()\n  }, [])\n\n  // 게시물 수정 API 요청\n  async function patchBoard(parameters) {\n    try {\n      const {data: res} = await TempAdminApi.request({\n        method: HttpMethod.PATCH,\n        url: EndPoint.PATCH_BOARD,\n        path: {boardIdx: boardIdx},\n        data: parameters\n      })\n\n      if (!res?.isSuccess || isEmpty(res?.result)) {\n        alert(res.message)\n        return\n      }\n\n      alert(\"게시물 수정에 성공하였습니다.\")\n      history.go(0)\n    } catch (error) {\n      console.log(error)\n      alert(\"네트워크 통신 실패. 잠시후 다시 시도해주세요.\")\n    }\n  }\n\n  // 게시물 삭제 API 요청\n  async function patchBoardStatus(boardIdx) {\n    try {\n      const {data: res} = await TempAdminApi.request({\n        method: HttpMethod.PATCH,\n        url: EndPoint.PATCH_BOARD_STATUS,\n        path: {boardIdx: boardIdx},\n        data: {status: \"INACTIVE\"}\n      })\n\n      if (!res.isSuccess) {\n        alert(res.message)\n        return\n      }\n\n      alert(\"게시물 삭제에 성공하였습니다.\")\n      history.push(\"/boards\")\n    } catch (error) {\n      console.log(error)\n      alert(\"네트워크 통신 실패. 잠시후 다시 시도해주세요.\")\n    }\n  }\n\n  // 뒤로가기 버튼 onClick\n  function onBackButtonClick() {\n    history.push(`/boards`)\n  }\n\n  // 수정 버튼 onClick\n  function onPatchButtonClick() {\n    if (!isEditing) {\n      setIdEditing(true)\n      return\n    }\n\n    if (isEmpty(title.trim())) {\n      alert(\"제목을 입력해주세요.\")\n    }\n    if (isEmpty(contents.trim())) {\n      alert(\"내용을 입력해주세요.\")\n    }\n\n    const parameters = {\n      title: title,\n      contents: contents,\n      imageUrls: imageURLs\n    }\n    patchBoard(parameters).then()\n  }\n\n  // 삭제 버튼 onClick\n  function onDeleteButtonClick() {\n    if (window.confirm(\"정말로 삭제하시겠습니까?\")) {\n      patchBoardStatus(boardIdx).then(() => {})\n    }\n  }\n\n  // 이미지 추가 onClick\n  function onImageChange(input) {\n    setImageURLs(() => [])\n    input.target.files.forEach( (file, index) => {\n      handleFirebaseUpload(\"boards\", `${new Date().getTime()}_${index}_${file.name}`, file).then(url => {\n        setImageURLs(imageURLs => [...imageURLs, url].sort())\n      })\n    })\n  }\n\n  return (\n    <CCol>\n      <CCard>\n        <CCardBody>\n          <div className=\"form-group\">\n            <TextCell\n              label=\"게시물 고유번호\"\n              value={boardIdx}/>\n            <TextCell\n              label=\"사용자 고유번호\"\n              value={userIdx}/>\n            <TextCell\n              label=\"제목\"\n              placeholder=\"제목을 입력해주세요\"\n              value={title}\n              onChange={isEditing ? e => setTitle(e.target.value) : null}/>\n            <TextareaCell\n              label=\"내용\"\n              placeholder=\"내용을 입력해주세요\"\n              value={contents}\n              onChange={isEditing ? e => setContents(e.target.value) : null}/>\n            <ImageCell\n              multiple\n              label=\"이미지\"\n              src={imageURLs}\n              onChange={isEditing ? onImageChange : null}\n            />\n          </div>\n        </CCardBody>\n      </CCard>\n      <BottomButtons\n        onBackClick={onBackButtonClick}\n        onPatchClick={onPatchButtonClick}\n        onDeleteClick={onDeleteButtonClick}\n        patchLabel={isEditing ? \"수정완료\" : \"수정하기\"}\n      />\n    </CCol>\n  )\n}\n\nexport default Board\n"],"sourceRoot":""}