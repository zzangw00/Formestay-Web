{"version":3,"sources":["views/admin/AddAdmin.js","views/component/Button.js","views/component/cell/TextCell.js"],"names":["AddAdmin","history","useHistory","useState","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","nickname","setNickname","phoneNumber","setPhoneNumber","parameters","a","TempAdminApi","request","method","HttpMethod","POST","url","EndPoint","POST_ADMIN","data","res","isSuccess","alert","message","push","console","log","className","label","placeholder","value","onChange","e","target","type","onPostClick","isEmpty","trim","isValidEmail","isValidPhoneNumber","window","confirm","postAdmin","then","BackButton","props","onClick","color","shape","size","CancleButton","RegistButton","CloseButton","PostButton","RoomPostButton","PatchButton","DeleteButton","BottomButtons","onCancleClick","onRegistClick","onBackClick","onPatchClick","onDeleteClick","backLabel","postLabel","patchLabel","deleteLabel","cancleLabel","registLabel","RoomPostLabel","onCloseClick","onRoomPostClick","align","TextCell","row","md","htmlFor","autoComplete","disabled"],"mappings":"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","file":"static/js/23.4cf979d2.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport { CCard, CCardBody, CCol } from '@coreui/react';\nimport TempAdminApi, { EndPoint, HttpMethod } from '../../constant/TempAdminApi';\nimport { isEmpty, isValidEmail, isValidPhoneNumber } from '../../utils/common/commonFunction';\nimport { useHistory } from 'react-router-dom';\nimport TextCell from '../component/cell/TextCell';\nimport BottomButtons from '../component/Button';\n\nconst AddAdmin = () => {\n    const history = useHistory();\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const [confirmPassword, setConfirmPassword] = useState('');\n    const [nickname, setNickname] = useState('');\n    const [phoneNumber, setPhoneNumber] = useState('');\n\n    // 관리자 추가 API 요청\n    async function postAdmin(parameters) {\n        try {\n            const { data: res } = await TempAdminApi.request({\n                method: HttpMethod.POST,\n                url: EndPoint.POST_ADMIN,\n                data: parameters,\n            });\n\n            if (!res?.isSuccess) {\n                alert(res.message);\n                return;\n            }\n\n            alert('관리자 추가에 성공하였습니다.');\n            history.push('/users');\n        } catch (error) {\n            console.log(error);\n            alert('네트워크 통신 실패. 잠시후 다시 시도해주세요.');\n        }\n    }\n\n    // 추가 버튼 onClick\n    function onPostButtonClick() {\n        if (isEmpty(email.trim())) {\n            alert('이메일을 입력해주세요.');\n            return;\n        }\n        if (!isValidEmail(email.trim())) {\n            alert('이메일 형식을 확인해주세요.');\n            return;\n        }\n        if (isEmpty(password)) {\n            alert('비밀번호를 입력해주세요.');\n            return;\n        }\n        if (isEmpty(confirmPassword)) {\n            alert('비밀번호 확인을 입력해주세요.');\n            return;\n        }\n        if (password !== confirmPassword) {\n            alert('비밀번호가 일치하지 않습니다.');\n            return;\n        }\n        if (isEmpty(nickname.trim())) {\n            alert('닉네임을 입력해주세요.');\n            return;\n        }\n        if (!isEmpty(phoneNumber.trim()) && !isValidPhoneNumber(phoneNumber.trim())) {\n            alert('전화번호 형식을 확인해주세요.');\n            return;\n        }\n\n        if (window.confirm('추가하시겠습니까?')) {\n            const parameters = {\n                email: email.trim(),\n                password: password,\n                confirmPassword: confirmPassword,\n                nickname: nickname.trim(),\n                phoneNumber: phoneNumber.trim(),\n            };\n            postAdmin(parameters).then();\n        }\n    }\n\n    return (\n        <CCol>\n            <CCard>\n                <CCardBody>\n                    <div className=\"form-group\">\n                        <TextCell\n                            label=\"이메일\"\n                            placeholder=\"이메일 주소를 입력해주세요\"\n                            value={email}\n                            onChange={(e) => setEmail(e.target.value)}\n                        />\n                        <TextCell\n                            type=\"password\"\n                            label=\"비밀번호\"\n                            placeholder=\"비밀번호를 입력해주세요\"\n                            value={password}\n                            onChange={(e) => setPassword(e.target.value)}\n                        />\n                        <TextCell\n                            type=\"password\"\n                            label=\"비밀번호 확인\"\n                            placeholder=\"비밀번호를 한번 더 입력해주세요\"\n                            value={confirmPassword}\n                            onChange={(e) => setConfirmPassword(e.target.value)}\n                        />\n                        <TextCell\n                            label=\"닉네임\"\n                            placeholder=\"닉네임을 입력해주세요\"\n                            value={nickname}\n                            onChange={(e) => setNickname(e.target.value)}\n                        />\n                        <TextCell\n                            label=\"전화번호\"\n                            placeholder=\"전화번호를 입력해주세요\"\n                            value={phoneNumber}\n                            onChange={(e) => setPhoneNumber(e.target.value)}\n                        />\n                    </div>\n                </CCardBody>\n            </CCard>\n            <BottomButtons onPostClick={onPostButtonClick} />\n        </CCol>\n    );\n};\n\nexport default AddAdmin;\n","import { CButton, CCol, CRow } from '@coreui/react';\nimport React from 'react';\n\n// 뒤로가기 버튼\nconst BackButton = (props) => {\n    const { label, onClick } = props;\n\n    return (\n        <CButton color=\"success\" shape=\"square\" size=\"m\" onClick={onClick}>\n            {label || '뒤로가기'}\n        </CButton>\n    );\n};\n\n// 취소 버튼\nconst CancleButton = (props) => {\n    const { label, onClick } = props;\n\n    return (\n        <CButton color=\"danger\" shape=\"square\" size=\"m\" onClick={onClick}>\n            {label || '예약 취소'}\n        </CButton>\n    );\n};\n\n// 승인 버튼\nconst RegistButton = (props) => {\n    const { label, onClick } = props;\n\n    return (\n        <CButton color=\"success\" shape=\"square\" size=\"m\" onClick={onClick}>\n            {label || '예약 승인'}\n        </CButton>\n    );\n};\n\n// 닫기 버튼\nconst CloseButton = (props) => {\n    const { label, onClick } = props;\n\n    return (\n        <CButton color=\"success\" shape=\"square\" size=\"m\" onClick={onClick}>\n            {label || '닫기'}\n        </CButton>\n    );\n};\n\n// 추가하기 버튼\nconst PostButton = (props) => {\n    const { label, onClick } = props;\n\n    return (\n        <CButton color=\"success\" shape=\"square\" size=\"m\" onClick={onClick}>\n            {label || '프로그램 추가하기'}\n        </CButton>\n    );\n};\n\n// 가격 추가하기 버튼\nconst RoomPostButton = (props) => {\n    const { label, onClick } = props;\n\n    return (\n        <CButton color=\"success\" shape=\"square\" size=\"m\" onClick={onClick}>\n            {label || '추가하기'}\n        </CButton>\n    );\n};\n\n// 수정하기 버튼\nconst PatchButton = (props) => {\n    const { label, onClick } = props;\n\n    return (\n        <CButton color=\"primary\" shape=\"square\" size=\"m\" onClick={onClick}>\n            {label || '수정하기'}\n        </CButton>\n    );\n};\n\n// 삭제하기 버튼\nconst DeleteButton = (props) => {\n    const { label, onClick } = props;\n\n    return (\n        <CButton color=\"danger\" shape=\"square\" size=\"m\" onClick={onClick}>\n            {label || '삭제하기'}\n        </CButton>\n    );\n};\n\n// 하단 버튼 모듈\nconst BottomButtons = (props) => {\n    const {\n        onCancleClick,\n        onRegistClick,\n        onBackClick,\n        onPostClick,\n        onPatchClick,\n        onDeleteClick,\n        backLabel,\n        postLabel,\n        patchLabel,\n        deleteLabel,\n        cancleLabel,\n        registLabel,\n        RoomPostLabel,\n        onCloseClick,\n        onRoomPostClick,\n    } = props;\n\n    return (\n        <CRow>\n            {onBackClick ? (\n                <CCol align=\"left\">\n                    <BackButton label={backLabel} onClick={onBackClick} />\n                </CCol>\n            ) : (\n                <p />\n            )}\n            {onCloseClick ? (\n                <CCol align=\"left\">\n                    <CloseButton label={backLabel} onClick={onCloseClick} />\n                </CCol>\n            ) : (\n                <p />\n            )}\n            <CCol align=\"right\">\n                {onRoomPostClick && (\n                    <RoomPostButton label={RoomPostLabel} onClick={onRoomPostClick} />\n                )}\n                &nbsp;&nbsp;\n                {onRegistClick && <RegistButton label={registLabel} onClick={onRegistClick} />}\n                &nbsp;&nbsp;\n                {onCancleClick && <CancleButton label={cancleLabel} onClick={onCancleClick} />}\n                &nbsp;&nbsp;\n                {onPostClick && <PostButton label={postLabel} onClick={onPostClick} />}\n                &nbsp;&nbsp;\n                {onPatchClick && <PatchButton label={patchLabel} onClick={onPatchClick} />}\n                &nbsp;&nbsp;\n                {onDeleteClick && <DeleteButton label={deleteLabel} onClick={onDeleteClick} />}\n            </CCol>\n            <br />\n            <br />\n            <br />\n        </CRow>\n    );\n};\n\nexport default BottomButtons;\n","import React from \"react\"\nimport {CCol, CFormGroup, CInput, CLabel} from \"@coreui/react\"\n\nconst TextCell = props => {\n\tconst {type, label, placeholder, value, onChange} = props\n\n\treturn (\n\t\t<CFormGroup row>\n\t\t\t<CCol md=\"2\" align=\"right\">\n\t\t\t\t<CLabel htmlFor=\"text-input\">{label}</CLabel>\n\t\t\t</CCol>\n\t\t\t<CCol>\n\t\t\t\t<CInput\n          type={type || \"text\"}\n          autoComplete={type === \"password\" ? \"on\" : \"off\"}\n\t\t\t\t\tdisabled={!onChange}\n\t\t\t\t\tplaceholder={placeholder}\n\t\t\t\t\tvalue={value || \"\"}\n\t\t\t\t\tonChange={onChange}\n\t\t\t\t/>\n\t\t\t</CCol>\n    </CFormGroup>\n\t)\n}\n\nexport default TextCell\n"],"sourceRoot":""}